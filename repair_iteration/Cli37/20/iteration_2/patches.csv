bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setS  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setS  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setS	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.setS    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  currentOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  currentOption,  expectedOpts);	  cmd    =    new    CommandLine(currentToken,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
3	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentOption,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentOption,  currentToken);	  cmd    =    new    CommandLine(currentToken,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
4	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  option);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  option);	  cmd    =    new    CommandLine(currentToken,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
5	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  cmd);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  cmd);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
6	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  group,  expectedOpts);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
7	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  currentToken);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
8	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentOption,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentOption,  group);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
11	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  }  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  }	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
12	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentOption,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentOption,  stopAtNonOption);	  cmd    =    new    CommandLine(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
13	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
14	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getParser(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
15	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  currentToken);	  cmd    =    new    CommandLine(group.getParser(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
16	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  currentOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  expectedOpts,  currentOption);	  cmd    =    new    CommandLine(group.getParser(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
17	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
18	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts,  skipParsing);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  expectedOpts,  skipParsing);	  Option    currentOption    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
19	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  expectedOpts,  stopAtNonOption);	  cmd    =    new    CommandLine(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
20	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  null,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  null,  stopAtNonOption);	  cmd    =    new    CommandLine(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
21	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  options);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  options);	  cmd    =    new    CommandLine(group.getParser(),    group);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
22	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  skipParsing);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  currentToken,  skipParsing);	  cmd    =    new    CommandLine(group.getParser(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
23	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  currentToken,  expectedOpts);	  cmd    =    new    CommandLine(group.getParser(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
24	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken.getParser(),  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken.getParser(),  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken.getParser(),  group);	  cmd    =    new    CommandLine(group.getParser(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOption(group,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOption(group,  expectedOpts);	  Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  currentOption.getOption(group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  currentOption.getOption(group);	  Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.	  if(stopAtNonOption)    {    skipParsing    =    true;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.set    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set	  if(stopAtNonOption)    {    skipParsing    =    true;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.set    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  skipParsing,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  skipParsing,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  skipParsing,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getParser(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
30	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  skippeParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  skippeParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  skippeParsing);	  cmd    =    new    CommandLine(group.getParser(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
31	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(options,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(options,  expectedOpts);	  Option    currentOption    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  optionGroup.getOption(options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  optionGroup.getOption(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  optionGroup.getOption(options);	  Option    currentOption    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
33	[BUG]  [BUGGY]  Option  option  =  group.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  group.getOptionGroup(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  group.getOptionGroup(options);	  Option    option    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOptionGroup(group,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOptionGroup(group,  expectedOpts);	  Option    option    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
35	[BUG]  [BUGGY]  Option  option  =  group.getOption(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  group.getOption(options,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  group.getOption(options,  expectedOpts);	  Option    option    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  currentOption.getOption(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  currentOption.getOption(options);	  Option    option    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  currentOption.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
38	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup();  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  currentOption.getOptionGroup();	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
39	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  group,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  group,  expectedOpts);	  cmd    =    new    CommandLine(currentToken,    group);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
40	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  currentToken);	  cmd    =    new    CommandLine(currentToken,    group);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
41	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Argument[]  arguments  =  currentOption.getArguments();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Argument[]  arguments  =  currentOption.getArguments();	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
42	[BUG]  [BUGGY]  Arguments[]  arguments  =  group.getArguments();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Arguments[]  arguments  =  group.getArguments();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Arguments[]  arguments  =  group.getArguments();	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
43	[BUG]  [BUGGY]  Option[]  arguments  =  group.getArguments();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option[]  arguments  =  group.getArguments();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option[]  arguments  =  group.getArguments();	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
44	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  expectedOpts);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
47	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  currentToken);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
48	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  skipParsing);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  skipParsing);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
49	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  currentOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  currentOption);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  group.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  group.getOptionCmd();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  group.getOptionCmd();	  Option    cmd    =    options.getOptionCmd();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  currentOption.getOptionCmd();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  currentOption.getOptionCmd();	  Option    cmd    =    options.getOptionCmd();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(group);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOptionCmd(group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOptionCmd(group);	  Option    cmd    =    options.getOptionCmd();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
53	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  currentOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  currentOption);	  cmd    =    new    CommandLine(currentOption);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
54	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionManager();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  currentOption.getOptionManager();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  currentOption.getOptionManager();	  Option    cmd    =    options.getOptionManager();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
55	[BUG]  [BUGGY]  Option  cmd  =  option.getOptionManager();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  option.getOptionManager();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  option.getOptionManager();	  Option    cmd    =    options.getOptionManager();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
56	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getOption(group,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getOption(group,  expectedOpts);	  Options    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getOption(currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getOption(currentToken);	  Options    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOption(currentToken,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  currentOption.getOption(options);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(null,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(null,  expectedOpts,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(null,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    group.getOption(null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
61	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(this,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(this,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(this,  expectedOpts);	  Option    currentOption    =    group.getOption(null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(true,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(true,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(true,  expectedOpts);	  Option    currentOption    =    group.getOption(null,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
64	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  currentToken);	  cmd    =    new    CommandLine(group.getOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
65	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  expectedOpts,  skipParsing);	  cmd    =    new    CommandLine(group.getOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  1);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  1);	  Option    option    =    options.getOption(group,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  0L);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  0L);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  0L);	  Option    option    =    options.getOption(group,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  false);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  false);	  Option    option    =    options.getOption(group,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
69	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  this,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  this,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  this,  expectedOpts);	  cmd    =    new    CommandLine(group.getParser(),    this);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
70	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  null);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  null);	  cmd    =    new    CommandLine(group.getParser(),    this);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
71	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  skipParsing,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  skipParsing,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  skipParsing,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getOptions(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
72	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  skipParsing);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  skipParsing);	  cmd    =    new    CommandLine(group.getOptions(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
73	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentOption,  expectedOpts);	  cmd    =    new    CommandLine(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
74	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  currentOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  expectedOpts,  currentOption);	  cmd    =    new    CommandLine(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  expectedOpts,  skipParsing);	  cmd    =    new    CommandLine(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
76	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(false,  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(false,  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(true,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(true,  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(true,  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(true,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(false,  stopAtNonOption,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(false,  stopAtNonOption,  group);	  cmd    =    new    CommandLine(true,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  options,  expectedOpts);	  cmd    =    new    CommandLine(group.getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
80	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options.getOptions(),  group);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(options.getOptions(),  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(options.getOptions(),  group);	  cmd    =    new    CommandLine(group.getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
81	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  preferredOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  preferredOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  preferredOpts);	  cmd    =    new    CommandLine(group.getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
82	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  skipParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  skipParsing);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  skipParsing);	  Option    currentOption    =    options.getOption(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
83	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  preferredOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  preferredOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  preferredOpts);	  Option    currentOption    =    options.getOption(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
84	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  skipParsing?  null  :  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  skipParsing?  null  :  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  skipParsing?  null  :  stopAtNonOption);	  Option    currentOption    =    options.getOption(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
85	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  1);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  1);	  cmd    =    new    CommandLine(currentToken,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
86	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  0L);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  0L);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  0L);	  cmd    =    new    CommandLine(currentToken,    0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
87	[BUG]  [BUGGY]  Options  cmd  =  group.getParser();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  group.getParser();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  group.getParser();	  Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  currentOption.getParser();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  currentOption.getParser();	  Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  Option  cmd  =  options.getParser();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getParser();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getParser();	  Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
90	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  startAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  startAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  startAtNonOption);	  cmd    =    new    CommandLine(group.getParser(),    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
91	[BUG]  [BUGGY]  cmd  =  new  CommandLine(2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(2);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(2);	  cmd    =    new    CommandLine(1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
92	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group)/  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group)/  1;	  Option    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
93	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group)+  1L;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group)+  1L;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group)+  1L;	  Option    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
94	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group)-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group)-  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group)-  1;	  Option    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
95	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  skipParsing,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  skipParsing,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  skipParsing,  stopAtNonOption);	  cmd    =    new    CommandLine(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
96	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  skipParsing);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  skipParsing);	  cmd    =    new    CommandLine(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
97	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  skippeParsing);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  skippeParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  skippeParsing);	  cmd    =    new    CommandLine(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
98	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(this,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(this,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(this,  stopAtNonOption);	  Option    currentOption    =    group.getOption(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
99	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(options,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(options,  stopAtNonOption);	  Option    currentOption    =    group.getOption(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
100	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(true,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(true,  stopAtNonOption);	  Option    currentOption    =    group.getOption(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
101	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOptionGroup(group,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOptionGroup(group,  expectedOpts);	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
102	[BUG]  [BUGGY]  Option  currentOption  =  group.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOptionGroup(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOptionGroup(options);	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
103	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)/  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)/  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group)/  1;	  OptionGroup    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
104	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)+  1L;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)+  1L;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group)+  1L;	  OptionGroup    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
105	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)-  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)-  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group)-  1;	  OptionGroup    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
106	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  currentOption,  skipParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  currentOption,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  currentOption,  skipParsing);	  cmd    =    new    CommandLine(currentToken,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
107	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  block);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  block);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  block);	  cmd    =    new    CommandLine(currentToken,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
108	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  if(stopAtNonOption)    {    skippeParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
109	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  if(stopAtNonOption)    {    skippeParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
110	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  false);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  false);	  cmd    =    new    CommandLine(group.getOptions(),    true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
111	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  true,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  true,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  true,  expectedOpts);	  cmd    =    new    CommandLine(group.getOptions(),    true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
112	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  null);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  null);	  cmd    =    new    CommandLine(group.getOptions(),    true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
113	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  currentToken,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  currentToken,  expectedOpts);	  cmd    =    new    CommandLine(group.getOptions(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
114	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken.getOptions(),  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken.getOptions(),  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken.getOptions(),  group);	  cmd    =    new    CommandLine(group.getOptions(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
115	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  currentToken,  skipParsing);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  currentToken,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  currentToken,  skipParsing);	  cmd    =    new    CommandLine(group.getOptions(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
116	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine(false,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine(false,  stopAtNonOption);  }  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine(false,  stopAtNonOption);  }	  cmd    =    new    CommandLine(false,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
117	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  group.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(false,  group.stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(false,  group.stopAtNonOption);	  cmd    =    new    CommandLine(false,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(currentOption,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group,  expectedOpts,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group,  expectedOpts,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(group,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  currentOption.getOptionGroup(group,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
121	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  false);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  false);	  cmd    =    new    CommandLine(group.getParser(),    true);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
122	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true,  skipParsing);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  true,  skipParsing);	  cmd    =    new    CommandLine(group.getParser(),    true);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
123	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  true,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getParser(),    true);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
124	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  true,  false);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  true,  false);	  cmd    =    new    CommandLine(group.getParser(),    true);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
125	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(true,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(true,  group);	  cmd    =    new    CommandLine(false,    group);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
126	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(false,  group,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(false,  group,  expectedOpts);	  cmd    =    new    CommandLine(false,    group);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
127	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(currentToken,  expectedOpts);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
128	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(currentToken,  expectedOpts);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
129	[BUG]  [BUGGY]  Option  group  =  currentOption.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  currentOption.getOptionGroup(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  currentOption.getOptionGroup(options);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
130	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(false);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(false);	  Option    currentOption    =    group.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(options,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(options,  stopAtNonOption);	  cmd    =    new    CommandLine(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
132	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  expectedOpts);	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
133	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  currentToken);	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
134	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  skipParsing);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  skipParsing);	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
135	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options.getName());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options.getName());  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  options.getName());	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
136	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  expectedOpts,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  expectedOpts,  stopAtNonOption);	  cmd    =    new    CommandLine(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  expectedOpts,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  expectedOpts,  stopAtNonOption);	  Option    option    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(currentOption,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(currentOption,  expectedOpts);	  Option    option    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
139	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  expectedOpts,  currentToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  expectedOpts,  currentToken);	  Option    option    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
140	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  currentOption.getOption(group,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  currentOption.getOption(group,  expectedOpts);	  Option    option    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
141	[BUG]  [BUGGY]  Option  option  =  options.getOption(group)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group)/  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group)/  1;	  Option    option    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
142	[BUG]  [BUGGY]  Option  option  =  options.getOption(group)+  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group)+  0;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group)+  0;	  Option    option    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
143	[BUG]  [BUGGY]  Option  option  =  options.getOption(group)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group)-  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group)-  1;	  Option    option    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
144	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(currentOption,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(currentOption,  expectedOpts);	  Option    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
145	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group,  expectedOpts,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group,  expectedOpts,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
146	[BUG]  [BUGGY]  Option  group  =  currentOption.getOptionGroup(group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  currentOption.getOptionGroup(group,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  currentOption.getOptionGroup(group,  expectedOpts);	  Option    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
147	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.setSelected    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
148	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.setSelected    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
149	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  }  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  }	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
150	[BUG]  [BUGGY]  skipParsing  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  skipParsing  =  false;  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	skipParsing  =  false;	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
151	[BUG]  [BUGGY]  options.skipParsing  =  false;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  options.skipParsing  =  false;  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	options.skipParsing  =  false;	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
152	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group)/  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group)/  1;	  Option    currentOption    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
153	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group)-  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group)-  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group)-  1;	  Option    currentOption    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
154	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group)+  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group)+  0;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group)+  0;	  Option    currentOption    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
155	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.setSelected(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
156	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  currentOption.getOptions();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  currentOption.getOptions();	  Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
157	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getOptionGroups();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getOptionGroups();	  Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
158	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOptions();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOptions();	  Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
159	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
160	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
161	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||!stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||!stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
162	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
163	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  &&  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	&&  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
164	[BUG]  [BUGGY]  Option  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getGroup(currentToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getGroup(currentToken);	  Option    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
165	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
166	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setS  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setS  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setS	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.setS    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
167	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.set    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
168	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.set    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
169	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  preferredOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  preferredOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  preferredOpts);	  cmd    =    new    CommandLine(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOption(group)+  1L;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group)+  1L;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group)+  1L;	  Option    option    =    options.getOption(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
171	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption.getOptions(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentOption.getOptions(),  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentOption.getOptions(),  expectedOpts);	  cmd    =    new    CommandLine(group.getOptions(),    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
172	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
173	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
174	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group,  skipParsing?  null  :  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group,  skipParsing?  null  :  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group,  skipParsing?  null  :  stopAtNonOption);	  cmd    =    new    CommandLine(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
175	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group	  if(stopAtNonOption)    {    skippeParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.set    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
176	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  nextToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  nextToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  nextToken);	  cmd    =    new    CommandLine(group.getOptions(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
177	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.set	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.setSelected(    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
178	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(currentToken,  group);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(currentToken,  group);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
179	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  group.getOptions());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  group.getOptions());  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  group.getOptions());	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
180	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  stopAtNonOption);	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
181	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getCurrentParser();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getCurrentParser();	  Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
182	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  null);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  null);	  cmd    =    new    CommandLine(currentToken,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
183	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cm  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cm  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cm	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
184	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  &&  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	&&  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
185	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getOption(group,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getOption(group,  stopAtNonOption);	  Options    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
186	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOptionGroup(group,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOptionGroup(group,  stopAtNonOption);	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
187	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(group)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOptionGroup(group)+  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOptionGroup(group)+  1;	  Option    option    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
188	[BUG]  [BUGGY]  Option  option  =  group.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  group.getOption(options,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  group.getOption(options,  stopAtNonOption);	  Option    option    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
189	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(null);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(null);	  Option    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
190	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(options);	  Option    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
191	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(false,  group,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(false,  group,  stopAtNonOption);	  cmd    =    new    CommandLine(false,    group);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
192	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
193	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(!stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(!stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
194	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getCurrentOption();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getCurrentOption();	  Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
195	[BUG]  [BUGGY]  Argument[]  arguments  =  group.getArguments(options);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Argument[]  arguments  =  group.getArguments(options);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Argument[]  arguments  =  group.getArguments(options);	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
196	[BUG]  [BUGGY]  Argument[]  arguments  =  group.getArguments(null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Argument[]  arguments  =  group.getArguments(null);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Argument[]  arguments  =  group.getArguments(null);	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
197	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  currentToken,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  currentToken,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getOptions(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
198	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
199	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts  -  1);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  expectedOpts  -  1);	  Option    currentOption    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
200	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(null);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
201	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
202	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  group,  stopAtNonOption);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
203	[BUG]  [BUGGY]  cmd  =  new  CommandLine(skippedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(skippedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(skippedOpts);	  cmd    =    new    CommandLine(1);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
204	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  currentToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  currentToken);	  Option    option    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
205	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  stopAtNonOption);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
206	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  this);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  this);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
207	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getName(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getName(),  true);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getName(),  true);	  cmd    =    new    CommandLine(group.getName());    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
208	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)+  0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group)+  0;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group)+  0;	  OptionGroup    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
209	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
210	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
211	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(true);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(true);	  Option    currentOption    =    group.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
212	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentOption,  skipParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentOption,  skipParsing);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentOption,  skipParsing);	  cmd    =    new    CommandLine(currentToken,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
213	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getArguments(),  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getArguments(),  true);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getArguments(),  true);	  cmd    =    new    CommandLine(group.getOptions(),    true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
214	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  nextToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  nextToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  nextToken);	  cmd    =    new    CommandLine(group.getParser(),    currentOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
215	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(null,  skipParsing);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(null,  skipParsing);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(null,  skipParsing);	  Option    currentOption    =    group.getOption(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
216	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOption(group,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOption(group,  stopAtNonOption);	  Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
217	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  null);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  null);	  Option    currentOption    =    options.getOption(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
218	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  0);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  0);	  Option    currentOption    =    options.getOption(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
219	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skippeParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setS    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
220	[BUG]  [BUGGY]  if(stopAtNonOption  ||  expectedOpts.contains(group))  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption  ||  expectedOpts.contains(group))  {  skipParsing  =  false;  }  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption  ||  expectedOpts.contains(group))  {  skipParsing  =  false;  }	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
221	[BUG]  [BUGGY]  if(stopAtNonOption  ||  expectedOpts.length  ==  0)  {  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption  ||  expectedOpts.length  ==  0)  {  skipParsing  =  false;  }  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption  ||  expectedOpts.length  ==  0)  {  skipParsing  =  false;  }	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
222	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  currentToken,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getParser(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
223	[BUG]  [BUGGY]  cmd  =  new  CommandLine(block,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(block,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(block,  stopAtNonOption);	  cmd    =    new    CommandLine(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
224	[BUG]  [BUGGY]  cmd  =  new  CommandLine(null,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(null,  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(null,  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
225	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group)+  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group)+  0;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group)+  0;	  Option    group    =    options.getOptionGroup(group)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
226	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group,  currentOption);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group,  currentOption);	  Option    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
227	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  group);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  expectedOpts,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  expectedOpts,  group);	  cmd    =    new    CommandLine(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
228	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  expectedOpts,  null);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  expectedOpts,  null);	  Option    currentOption    =    options.getOption(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
229	[BUG]  [BUGGY]  if(skipParsing)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(skipParsing)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(skipParsing)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  if(stopAtNonOption)    {    skipParsing    =    true;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
230	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
231	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(currentToken  -  1);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(currentToken  -  1);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
232	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(currentToken  +  1);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(currentToken  +  1);	  Option    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
233	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOptionGroup();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOptionGroup();	  Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
234	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getOptionCmd();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getOptionCmd();	  Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
235	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(options)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(options)+  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(options)+  1;	  Option    currentOption    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
236	[BUG]  [BUGGY]  parseToken(group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  parseToken(group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	parseToken(group);	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
237	[BUG]  [BUGGY]  skipped  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  skipped  =  false;  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	skipped  =  false;	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
238	[BUG]  [BUGGY]  skipParsing  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  skipParsing  =  true;  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	skipParsing  =  true;	  if(stopAtNonOption)    {    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
239	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  stopAtNonOption,  expectedOpts);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  stopAtNonOption,  expectedOpts);	  cmd    =    new    CommandLine(group.getParser(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
240	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOption(group,  stopAtNonOption,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOption(group,  stopAtNonOption,  expectedOpts);	  Option    currentOption    =    options.getOption(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
241	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  nextToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  nextToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  group.getName(),  nextToken);	  cmd    =    new    CommandLine(group.getOptions(),    group.getName());    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
242	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  -  1);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken  -  1);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
243	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  +  1);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken  +  1);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
244	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(this,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(this,  options);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(this,  options);	  Option    currentOption    =    group.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
245	[BUG]  [BUGGY]  Argument[]  arguments  =  this.group.getArguments();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Argument[]  arguments  =  this.group.getArguments();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Argument[]  arguments  =  this.group.getArguments();	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
246	[BUG]  [BUGGY]  Argument[]  arguments  =  group.getArgumentsForOption(options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Argument[]  arguments  =  group.getArgumentsForOption(options);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Argument[]  arguments  =  group.getArgumentsForOption(options);	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
247	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    group.setSelected    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
248	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  stopAtNonOption,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  stopAtNonOption,  group);	  cmd    =    new    CommandLine(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
249	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  currentToken,  null);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  currentToken,  null);	  cmd    =    new    CommandLine(group.getParser(),    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
250	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  group,  currentToken);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
251	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(cmd,  group,  0);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd,  group,  0);	  cmd    =    new    CommandLine(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
252	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(options);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(options);	  cmd    =    new    CommandLine(currentOption);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
253	[BUG]  [BUGGY]  Options  cmd  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Options  cmd  =  options.getArguments();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Options  cmd  =  options.getArguments();	  Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
254	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  blockAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  blockAtNonOption);	  cmd    =    new    CommandLine(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
255	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(currentToken,  this.stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken,  this.stopAtNonOption);	  cmd    =    new    CommandLine(currentToken,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
256	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(group,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(group,  expectedOpts,  currentToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(group,  expectedOpts,  currentToken);	  Option    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
257	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOption(group.getName());  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOption(group.getName());	  Option    cmd    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
258	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options,  currentToken);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  options,  currentToken);	  cmd    =    new    CommandLine(group.getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
259	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getOptions(),  options,  stopAtNonOption);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions(),  options,  stopAtNonOption);	  cmd    =    new    CommandLine(group.getOptions(),    options);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
260	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  ||    stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
261	[BUG]  [BUGGY]  if(skipParsing)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(skipParsing)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(skipParsing)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
262	[BUG]  [BUGGY]  Option  cmd  =  group.getOptionManager();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  group.getOptionManager();  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  group.getOptionManager();	  Option    cmd    =    options.getOptionManager();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
263	[BUG]  [BUGGY]  Option  currentOption  =  group.getOption(null,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  group.getOption(null,  stopAtNonOption,  expectedOpts);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  group.getOption(null,  stopAtNonOption,  expectedOpts);	  Option    currentOption    =    group.getOption(null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
264	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group,  expectedOpts,  currentToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	OptionGroup  group  =  options.getOptionGroup(group,  expectedOpts,  currentToken);	  OptionGroup    group    =    options.getOptionGroup(group,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
265	[BUG]  [BUGGY]  Option  option  =  group.getOption(options,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  group.getOption(options,  currentToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  group.getOption(options,  currentToken);	  Option    option    =    group.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
266	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(stopAtNonOption)  {  skipParsing  =  true;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.setS    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
267	[BUG]  [BUGGY]  if(skipParsing)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  if(skipParsing)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	if(skipParsing)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    cmd.    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
268	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  cmd  =  options.getOption(currentToken,  group);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
269	[BUG]  [BUGGY]  cmd  =  new  CommandLine(stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(stopAtNonOption,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(stopAtNonOption,  group);	  cmd    =    new    CommandLine(false,    group);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
270	[BUG]  [BUGGY]  cmd  =  new  CommandLine(false,  group.options);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(false,  group.options);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(false,  group.options);	  cmd    =    new    CommandLine(false,    group);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
271	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  group  =  options.getOptionGroup(defaultToken);	  Option    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
272	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  option  =  options.getOption(group,  true);  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  option  =  options.getOption(group,  true);	  Option    option    =    options.getOption(group,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
273	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(group)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  Option  currentOption  =  options.getOptionGroup(group)+  1;  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	Option  currentOption  =  options.getOptionGroup(group)+  1;	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
274	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  ||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set  [BUGGY]      cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	||  stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set	  if(stopAtNonOption)    {    skipParsing    =    false;    currentOption    =    null;    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(OptionGroup    group    :    options.getOptionGroups())    {    group.setSelected(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
275	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(true,  stopAtNonOption,  group);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(true,  stopAtNonOption,  group);	  cmd    =    new    CommandLine(true,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
276	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  group.getName());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  group.getName());  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  group.getName());	  cmd    =    new    CommandLine(group.getParser(),    currentOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
277	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  block);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }      [BUGGY]  cmd  =  new  CommandLine(group.getParser(),  block);  [BUGGY]        if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser(),  block);	  cmd    =    new    CommandLine(group.getParser(),    currentOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
