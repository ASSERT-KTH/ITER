bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getParser());  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(group.getParser());  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getParser());	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
2	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(group);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
3	[BUG]  [BUGGY]  cmd  =  new  CommandLine(group.getOptions());  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(group.getOptions());  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(group.getOptions());	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	  	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
5	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	41	None	add
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	41	None	add
7	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.set		non-compiled	[CE]  illegal  start  of  type	41	None	add
8	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(		non-compiled	[CE]  illegal  start  of  type	41	None	add
9	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null		non-compiled	[CE]  illegal  start  of  type	41	None	add
10	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  group.set		non-compiled	[CE]  illegal  start  of  type	41	None	add
11	[BUG]  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    if(stopAtNonOption)  {  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	41	None	add
12	[BUG]  [BUGGY]  cmd  =  new  CommandLine(currentToken);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(currentToken);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(currentToken);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
13	[BUG]  [BUGGY]  cmd  =  new  CommandLine(null);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(null);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(null);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
14	[BUG]  [BUGGY]  cmd  =  new  CommandLine(0);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(0);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(0);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
15	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(true);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(true);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
16	[BUG]  [BUGGY]  cmd  =  new  CommandLine(cmd);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]  cmd  =  new  CommandLine(cmd);  [BUGGY]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	cmd  =  new  CommandLine(cmd);	cmd  =  new  CommandLine();  	non-compiled	[CE]  illegal  start  of  type	40	None	replace
17	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(group);  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    OptionGroup  group  =  options.getOptionGroup(group);		non-compiled	[CE]  illegal  start  of  type	41	None	add
18	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    Option  currentOption  =  options.getOption(group);  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    Option  currentOption  =  options.getOption(group);		non-compiled	[CE]  illegal  start  of  type	41	None	add
19	[BUG]  [BUGGY]    Option  option  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    Option  option  =  options.getOption(group);  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    Option  option  =  options.getOption(group);		non-compiled	[CE]  illegal  start  of  type	41	None	add
20	[BUG]  [BUGGY]    Option  group  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    Option  group  =  options.getOptionGroup(group);  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    Option  group  =  options.getOptionGroup(group);		non-compiled	[CE]  illegal  start  of  type	41	None	add
21	[BUG]  [BUGGY]    Option  currentOption  =  group.getOption(null);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]    Option  currentOption  =  group.getOption(null);  [BUGGY]  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }    [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	    Option  currentOption  =  group.getOption(null);		non-compiled	[CE]  illegal  start  of  type	41	None	add
