bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  token  ==  -1?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token!=  -1?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  token!=  -1?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token  ==  null?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  token  ==  null?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  String  t  =  token  ==  null?  -1  :  token.substring(0,  pos);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token  ==  null?  -1  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  token  ==  null?  -1  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	  	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]    int  pos  =  token.indexOf( "= ");  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    int  pos  =  token.indexOf( "= ");		non-compiled	[CE]  illegal  start  of  type	4	None	add
7	[BUG]  [BUGGY]    pos  =  token.indexOf( "= ");  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    pos  =  token.indexOf( "= ");		non-compiled	[CE]  <identifier>  expected	4	None	add
8	[BUG]  [BUGGY]    Option  option  =  options.getOption(pos);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    Option  option  =  options.getOption(pos);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    Option  option  =  options.getOption(pos);		non-compiled	[CE]  illegal  start  of  type	4	None	add
9	[BUG]  [BUGGY]    Integer  pos  =  token.indexOf( "= ");  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    Integer  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    Integer  pos  =  token.indexOf( "= ");		non-compiled	[CE]  illegal  start  of  type	4	None	add
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(token);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    Option  option  =  options.getOption(token);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    Option  option  =  options.getOption(token);		non-compiled	[CE]  illegal  start  of  type	4	None	add
11	[BUG]  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token!=  null?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  token!=  null?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]    Option  options  =  options.getOptions(pos);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    Option  options  =  options.getOptions(pos);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    Option  options  =  options.getOptions(pos);		non-compiled	[CE]  illegal  start  of  type	4	None	add
13	[BUG]  [BUGGY]    Option  options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    Option  options  =  option.getOptions();  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    Option  options  =  option.getOptions();		non-compiled	[CE]  illegal  start  of  type	4	None	add
14	[BUG]  [BUGGY]    Option  options  =  options.getOptions(token);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]    Option  options  =  options.getOptions(token);  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	    Option  options  =  options.getOptions(token);		non-compiled	[CE]  illegal  start  of  type	4	None	add
15	[BUG]  [BUGGY]  String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  token.length()  ==  -1?  token  :  token.substring(0,  pos);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  String  t  =  pos  ==  -1?  token  :  token.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  int  pos  =  token.indexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1?  token  :  token.substring(0,  pos  +  1);  [BUGGY]    if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  return  true;  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	String  t  =  pos  ==  -1?  token  :  token.substring(0,  pos  +  1);	String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
