bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(argument);	  Option    expectedOpts    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(currentToken,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(currentToken,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(currentToken,  value);	  final    Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(value,  opt);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(value,  opt);	  final    Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
4	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(options,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(options,  value);	  final    Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
5	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(opt,  currentToken);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(opt,  currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(opt,  currentToken);	  final    Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
6	[BUG]  [BUGGY]  Option  expectedOpts  =  cmd.getOption(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  cmd.getOption(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  cmd.getOption(argument);	  Option    expectedOpts    =    cmd.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
7	[BUG]  [BUGGY]  Option  expectedOpts  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  cmd.getOption(opt);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  cmd.getOption(opt);	  Option    expectedOpts    =    cmd.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
8	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!expectedOpts.isEmpty()  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  ||!expectedOpts.isEmpty())  {	  if(expectedOpts.isEmpty()    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
9	[BUG]  [BUGGY]  if(option.isEmpty()  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option.isEmpty()  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option.isEmpty()  ||!expectedOpts.isEmpty())  {	  if(expectedOpts.isEmpty()    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
10	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(currentToken,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(currentToken,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(currentToken,  value);	  Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
11	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(value,  opt);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(value,  opt);	  Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
12	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(options,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(options,  value);	  Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
13	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(opt,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(opt,  currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(opt,  currentToken);	  Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
14	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isEmpty())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  if(!opt.isEmpty()  &&  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!opt.isEmpty()  &&  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!opt.isEmpty()  &&  expectedOpts.isEmpty())  {	  if(!opt.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
16	[BUG]  [BUGGY]  if(!opt.isNonOption()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!opt.isNonOption()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!opt.isNonOption()  ||  expectedOpts.isEmpty())  {	  if(!opt.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
17	[BUG]  [BUGGY]  if(!opt.isEmpty()  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!opt.isEmpty()  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!opt.isEmpty()  &&  expectedOpts.size()  >  0)  {	  if(!opt.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
18	[BUG]  [BUGGY]  if(!opt.isEmpty()  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!opt.isEmpty()  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!opt.isEmpty()  ||  expectedOpts.size()  ==  0)  {	  if(!opt.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
19	[BUG]  [BUGGY]  if(!opt.isEmpty()  ||  expectedOpts.size()  >  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!opt.isEmpty()  ||  expectedOpts.size()  >  1)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!opt.isEmpty()  ||  expectedOpts.size()  >  1)  {	  if(!opt.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
20	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(cmd);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(cmd);	  Option    expectedOpts    =    option.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
21	[BUG]  [BUGGY]  Option  expectedOpts  =  currentOption.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentOption.getOption(cmd);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentOption.getOption(cmd);	  Option    expectedOpts    =    option.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
22	[BUG]  [BUGGY]  Option  expectedOpts  =  option.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  option.getOption(currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  option.getOption(currentToken);	  Option    expectedOpts    =    option.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
23	[BUG]  [BUGGY]  Option  expectedOpts  =  currentToken.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentToken.getOption(cmd);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentToken.getOption(cmd);	  Option    expectedOpts    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  options  =  this.options.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  options  =  this.options.getOptions();	  Options    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
25	[BUG]  [BUGGY]  Options  options  =  this.options.getOptions(option);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Options  options  =  this.options.getOptions(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Options  options  =  this.options.getOptions(option);	  Options    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
26	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  options.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
27	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  option.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  option.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
28	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  options.isSelected())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  options.isSelected())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  options.isSelected())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  option.getOption(currentOption);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  option.getOption(currentOption);	  Option    cmd    =    option.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
30	[BUG]  [BUGGY]  Option  expectedOpts  =  currentOption.getOption(option);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentOption.getOption(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentOption.getOption(option);	  Option    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
31	[BUG]  [BUGGY]  Option  expectedOpts  =  currentOption.getOptions(option);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentOption.getOptions(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentOption.getOptions(option);	  Option    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
32	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  options.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  options.getOptions();	  List    <    String>    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
33	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  option.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  option.getOptions();	  List    <    String>    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
34	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  ArrayList  <  String>  expectedOpts  =  opt.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	ArrayList  <  String>  expectedOpts  =  opt.getOptions();	  List    <    String>    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
35	[BUG]  [BUGGY]  if  (!option.isRequired()  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if  (!option.isRequired()  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if  (!option.isRequired()  ||!expectedOpts.isEmpty())  {	  if    (!option.isRequired()    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(value);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(value);	  Option    expectedOpts    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(argument);	  Option    expectedOpts    =(Option)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
38	[BUG]  [BUGGY]  final  Option  expectedOpts  =  currentOption.getOption(value);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  currentOption.getOption(value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  currentOption.getOption(value);	  final    Option    expectedOpts    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
39	[BUG]  [BUGGY]  final  Option  expectedOpts  =  currentOption.getOption(option);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  currentOption.getOption(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  currentOption.getOption(option);	  final    Option    expectedOpts    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  final  Option  expectedOpts  =  opt.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  opt.getOption(currentOption);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  opt.getOption(currentOption);	  final    Option    expectedOpts    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  Options  options  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Options  options  =  opt.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Options  options  =  opt.getOptions();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
42	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  &&  expectedOpts.size()  >  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!expectedOpts.isEmpty()  &&  expectedOpts.size()  >  1)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  &&  expectedOpts.size()  >  1)  {	  if(!expectedOpts.isEmpty()    ||    expectedOpts.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  ==  1)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  ==  1)  {	  if(!expectedOpts.isEmpty()    ||    expectedOpts.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  if(!option.isEmpty()  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isEmpty()  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isEmpty()  &&  expectedOpts.size()  >  0)  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  if(!options.isEmpty()  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isEmpty()  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isEmpty()  &&  expectedOpts.size()  >  0)  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  options.getOption(currentToken);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  options.getOption(value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  options.getOption(value);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(opt);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  currentOption.getOption(opt);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  currentOption.getOption(opt);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
49	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions(option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions(option,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions(option,  value);	  List    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions(currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions(currentOption);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions(currentOption);	  List    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  ArrayList  expectedOpts  =  getOptions(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  ArrayList  expectedOpts  =  getOptions(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	ArrayList  expectedOpts  =  getOptions(option);	  List    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  options.getOption(currentOption);	  Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
53	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(argument);	  final    Option    expectedOpts    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
54	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().keySet();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().keySet();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().keySet();	  List    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  ArrayList  expectedOpts  =  getOptions().values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  ArrayList  expectedOpts  =  getOptions().values();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	ArrayList  expectedOpts  =  getOptions().values();	  List    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  &&  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!expectedOpts.isEmpty()  &&  expectedOpts.size()  ==  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  &&  expectedOpts.size()  ==  0)  {	  if(!expectedOpts.isEmpty()    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  Option  expectedOpts  =  cmd.getOption(currentToken,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  cmd.getOption(currentToken,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  cmd.getOption(currentToken,  value);	  Option    expectedOpts    =    cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
58	[BUG]  [BUGGY]  Option  expectedOpts  =  cmd.getOption(option,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  cmd.getOption(option,  currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  cmd.getOption(option,  currentToken);	  Option    expectedOpts    =    cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
59	[BUG]  [BUGGY]  Option  expectedOpts  =  cmd.getOption(option,  value,  currentToken);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  cmd.getOption(option,  value,  currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  cmd.getOption(option,  value,  currentToken);	  Option    expectedOpts    =    cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
60	[BUG]  [BUGGY]  if(option  ==  null  ||  expectedOpts!=  null  &&!option.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||  expectedOpts!=  null  &&!option.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||  expectedOpts!=  null  &&!option.isEmpty())  {	  if(option    ==    null    ||    expectedOpts!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
61	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  option!=  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts  ==  null  ||  option!=  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts  ==  null  ||  option!=  null  &&!expectedOpts.isEmpty())  {	  if(option    ==    null    ||    expectedOpts!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
62	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  option  ==  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts!=  null  ||  option  ==  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts!=  null  ||  option  ==  null  &&!expectedOpts.isEmpty())  {	  if(option    ==    null    ||    expectedOpts!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
63	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&!opt.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts!=  null  &&!opt.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts!=  null  &&!opt.isEmpty())  {	  if(opt!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
64	[BUG]  [BUGGY]  if(option!=  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option!=  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option!=  null  &&!expectedOpts.isEmpty())  {	  if(opt!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
65	[BUG]  [BUGGY]  if(option!=  null  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option!=  null  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option!=  null  ||!expectedOpts.isEmpty())  {	  if(opt!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  if(opt!=  null  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(opt!=  null  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(opt!=  null  ||!expectedOpts.isEmpty())  {	  if(opt!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  if(option  ==  null  ||!option.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!option.isRequired())  {	  if(option!=    null    &&!option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
68	[BUG]  [BUGGY]  if(option!=  null  ||!option.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option!=  null  ||!option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option!=  null  ||!option.isRequired())  {	  if(option!=    null    &&!option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
69	[BUG]  [BUGGY]  if(option  ==  null  &&!option.isRequired())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  &&!option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  &&!option.isRequired())  {	  if(option!=    null    &&!option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
70	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||!expectedOpts.isEmpty()  ||  option.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts  ==  null  ||!expectedOpts.isEmpty()  ||  option.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts  ==  null  ||!expectedOpts.isEmpty()  ||  option.isEmpty())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
71	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||!option.isEmpty()  ||  option.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts  ==  null  ||!option.isEmpty()  ||  option.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts  ==  null  ||!option.isEmpty()  ||  option.isEmpty())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
72	[BUG]  [BUGGY]  if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isEmpty())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
73	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(currentOption);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(currentOption);	  Option    expectedOpts    =(Option)options.get(currentOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)options.get(0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)options.get(0);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)options.get(0);	  Option    expectedOpts    =(Option)options.get(currentOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
75	[BUG]  [BUGGY]  if(!option.isEmpty()  &&  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isEmpty()  &&  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isEmpty()  &&  expectedOpts.isEmpty())  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  if(option.isEmpty()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option.isEmpty()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option.isEmpty()  ||  expectedOpts.isEmpty())  {	  if(!option.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  if(!option.isNonOption()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isNonOption()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isNonOption()  ||  expectedOpts.isEmpty())  {	  if(!option.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
78	[BUG]  [BUGGY]  if(options.isRequired()  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  &&  expectedOpts.size()  >  0)  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
79	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.size()  ==  0)  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
80	[BUG]  [BUGGY]  if(!options.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isRequired())  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
81	[BUG]  [BUGGY]  Option  expectedOpts  =  currentOption.getOption(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentOption.getOption(value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentOption.getOption(value);	  Option    expectedOpts    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
82	[BUG]  [BUGGY]  Option  expectedOpts  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentOption.getOption(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentOption.getOption(argument);	  Option    expectedOpts    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
83	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(option,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(option,  currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(option,  currentToken);	  Option    expectedOpts    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
84	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(value,  option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(value,  option);	  Option    expectedOpts    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
85	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(option,  value,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(option,  value,  currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(option,  value,  currentToken);	  Option    expectedOpts    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
86	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  options  =  currentOption.getOption(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  options  =  currentOption.getOption(option);	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
87	[BUG]  [BUGGY]  Option  options  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  options  =  opt.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  options  =  opt.getOptions();	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
88	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(option  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(option  +  1);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(option  +  1);	  Option    expectedOpts    =(Option)this.options.get(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
89	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(0);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(0);	  Option    expectedOpts    =(Option)this.options.get(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
90	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(option  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(option  -  1);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(option  -  1);	  Option    expectedOpts    =(Option)this.options.get(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
91	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOptions(options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOptions(options);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOptions(options);	  Option    expectedOpts    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
92	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions().options;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions().options;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions().options;	  List    <    String>    expectedOpts    =    getOptions().value;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
93	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)this.options.get(currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)this.options.get(currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)this.options.get(currentToken);	  Option    expectedOpts    =(Option)options.get(currentToken);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
94	[BUG]  [BUGGY]  List  expectedOpts  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  currentOption.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  currentOption.getOptions();	  List    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
95	[BUG]  [BUGGY]  ArrayList  expectedOpts  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  ArrayList  expectedOpts  =  opt.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	ArrayList  expectedOpts  =  opt.getOptions();	  List    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
96	[BUG]  [BUGGY]  List  expectedOpts  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  options.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  options.getOptions();	  List    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
97	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(value);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  currentOption.getOption(value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  currentOption.getOption(value);	  Option    cmd    =    currentOption.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
98	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  currentOption.getOption(option,  expectedOpts);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  currentOption.getOption(option,  expectedOpts);	  Option    cmd    =    currentOption.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
99	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  currentOption.getOption(option,  value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  currentOption.getOption(option,  value);	  Option    cmd    =    currentOption.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
100	[BUG]  [BUGGY]  Option  expectedOpts  =  option.getOption(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  option.getOption(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  option.getOption(argument);	  Option    expectedOpts    =    option.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
101	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions(currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions(currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions(currentToken);	  List    expectedOpts    =    getOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
102	[BUG]  [BUGGY]  ArrayList  expectedOpts  =  getOptions(opt);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  ArrayList  expectedOpts  =  getOptions(opt);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	ArrayList  expectedOpts  =  getOptions(opt);	  List    expectedOpts    =    getOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
103	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  currentOption  =  options.getOption(option,  expectedOpts);	  Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
104	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  currentOption  =  options.getOption(value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  currentOption  =  options.getOption(value);	  Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
105	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  currentOption  =  options.getOption(argument);	  Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
106	[BUG]  [BUGGY]  if  (!option.isEmpty()  ||!option.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if  (!option.isEmpty()  ||!option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if  (!option.isEmpty()  ||!option.isRequired())  {	  if    (!option.isEmpty()    &&!option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
107	[BUG]  [BUGGY]  if(!options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
108	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().size()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().size()  -  1;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().size()  -  1;	  List    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
109	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().size()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().size()  +  1;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().size()  +  1;	  List    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts  ==  null  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts  ==  null  ||!expectedOpts.isEmpty())  {	  if(expectedOpts!=    null    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
111	[BUG]  [BUGGY]  if(expectedOpts  ==  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts  ==  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts  ==  null  &&!expectedOpts.isEmpty())  {	  if(expectedOpts!=    null    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
112	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getSelectedOptions().size();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getSelectedOptions().size();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getSelectedOptions().size();	  List    <    String>    expectedOpts    =    getSelectedOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
113	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getSelectedOptions(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getSelectedOptions(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getSelectedOptions(option);	  List    <    String>    expectedOpts    =    getSelectedOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
114	[BUG]  [BUGGY]  if(options.isEmpty()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isEmpty()  ||  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isEmpty()  ||  options.isRequired())  {	  if(!options.isEmpty()    ||    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
115	[BUG]  [BUGGY]  if(!options.isEmpty()  &&  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isEmpty()  &&  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isEmpty()  &&  options.isRequired())  {	  if(!options.isEmpty()    ||    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
116	[BUG]  [BUGGY]  if(options.isOptional()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isOptional()  ||  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isOptional()  ||  options.isRequired())  {	  if(!options.isEmpty()    ||    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
117	[BUG]  [BUGGY]  if(!options.isEmpty()  &&  expectedOpts.isRequired())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isEmpty()  &&  expectedOpts.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isEmpty()  &&  expectedOpts.isRequired())  {	  if(!options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
118	[BUG]  [BUGGY]  if(!options.isEmpty()  ||  expectedOpts.isIgnored())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isEmpty()  ||  expectedOpts.isIgnored())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isEmpty()  ||  expectedOpts.isIgnored())  {	  if(!options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
119	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions().size()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions().size()  -  1;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions().size()  -  1;	  List    <    String>    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
120	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions().size()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions().size()  +  1;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions().size()  +  1;	  List    <    String>    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
121	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions().values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions().values();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions().values();	  List    <    String>    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
122	[BUG]  [BUGGY]  ArrayList  expectedOpts  =  getOptions().size();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  ArrayList  expectedOpts  =  getOptions().size();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	ArrayList  expectedOpts  =  getOptions().size();	  ArrayList    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  option  =  options.getOption(currentToken);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  option  =  options.getOption(currentOption);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  option  =  options.getOption(currentOption);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
125	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  option  =  options.getOption(value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
126	[BUG]  [BUGGY]  if(!option.isEmpty()  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isEmpty()  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isEmpty()  ||  expectedOpts.size()  ==  0)  {	  if(!option.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
127	[BUG]  [BUGGY]  if(option.isEmpty()  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option.isEmpty()  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option.isEmpty()  ||  expectedOpts.size()  >  0)  {	  if(!option.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
128	[BUG]  [BUGGY]  if(expectedOpts.isEmpty()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts.isEmpty()  ||  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts.isEmpty()  ||  options.isRequired())  {	  if(options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
129	[BUG]  [BUGGY]  if(options.isEmpty()  &&  expectedOpts.isRequired())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isEmpty()  &&  expectedOpts.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isEmpty()  &&  expectedOpts.isRequired())  {	  if(options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
130	[BUG]  [BUGGY]  if(!options.isRequired()  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isRequired()  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isRequired()  &&!expectedOpts.isEmpty())  {	  if(options.isRequired()    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
131	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectingOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectingOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectingOpts.isEmpty())  {	  if(options.isRequired()    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
132	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(currentOption);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(currentOption);	  final    Option    expectedOpts    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
133	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(option,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(option,  value);	  final    Option    expectedOpts    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  Option  expectedOpts  =  options.stopAtNonOption?  options.getOptions()  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.stopAtNonOption?  options.getOptions()  :  null;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.stopAtNonOption?  options.getOptions()  :  null;	  Option    expectedOpts    =    option.stopAtNonOption?    options.getOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
135	[BUG]  [BUGGY]  Option  expectedOpts  =  options.stopAtNonOption?  option.getOptions()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.stopAtNonOption?  option.getOptions()  :  null;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.stopAtNonOption?  option.getOptions()  :  null;	  Option    expectedOpts    =    option.stopAtNonOption?    options.getOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
136	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option,  value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(option,  value);	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
137	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(currentOption);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(currentOption);	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
138	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option.getValue());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option.getValue());  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(option.getValue());	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
139	[BUG]  [BUGGY]  if(options!=  null  ||!options.isEmpty()  ||  expectedOpts.isRequired())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options!=  null  ||!options.isEmpty()  ||  expectedOpts.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options!=  null  ||!options.isEmpty()  ||  expectedOpts.isRequired())  {	  if(!options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
140	[BUG]  [BUGGY]  if(opt  ==  null  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(opt  ==  null  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(opt  ==  null  ||!expectedOpts.isEmpty())  {	  if(expectedOpts!=    null    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
141	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(value);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  option.getOption(value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  option.getOption(value);	  Option    cmd    =    option.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
142	[BUG]  [BUGGY]  Option  expectedOpts  =  cmd.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  cmd.getOption(value,  option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  cmd.getOption(value,  option);	  Option    expectedOpts    =    cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
143	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(value,  cmd);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(value,  cmd);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(value,  cmd);	  Option    expectedOpts    =    cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
144	[BUG]  [BUGGY]  List  expectedOpts  =  opt.values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  opt.values();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  opt.values();	  List    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
145	[BUG]  [BUGGY]  if(option  ==  null  ||!option.isEmpty()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!option.isEmpty()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!option.isEmpty()  ||  expectedOpts.isEmpty())  {	  if(!option.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
146	[BUG]  [BUGGY]  if(option!=  null  ||!option.isEmpty()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option!=  null  ||!option.isEmpty()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option!=  null  ||!option.isEmpty()  ||  expectedOpts.isEmpty())  {	  if(!option.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
147	[BUG]  [BUGGY]  if(option  ==  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  &&!expectedOpts.isEmpty())  {	  if(opt!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
148	[BUG]  [BUGGY]  if(opt  ==  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(opt  ==  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(opt  ==  null  &&!expectedOpts.isEmpty())  {	  if(opt!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
149	[BUG]  [BUGGY]  Option  options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  options  =  option.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  options  =  option.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
150	[BUG]  [BUGGY]  if(opt.isEmpty()  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(opt.isEmpty()  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(opt.isEmpty()  ||!expectedOpts.isEmpty())  {	  if(expectedOpts.isEmpty()    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
151	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isRequired())  {	  if(options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
152	[BUG]  [BUGGY]  if(options.isEmpty()  ||  expectedOpts.canBeRequired())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isEmpty()  ||  expectedOpts.canBeRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isEmpty()  ||  expectedOpts.canBeRequired())  {	  if(options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
153	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(argument,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(argument,  value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(argument,  value);	  Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
154	[BUG]  [BUGGY]  if(option.isRequired()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option.isRequired()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option.isRequired()  ||  expectedOpts.isEmpty())  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
155	[BUG]  [BUGGY]  if(option.isRequired()  ||!option.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option.isRequired()  ||!option.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option.isRequired()  ||!option.isEmpty())  {	  if    (!option.isEmpty()    &&!option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
156	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)options.get(opt);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)options.get(opt);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)options.get(opt);	  Option    expectedOpts    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
157	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  currentOption  =  options.getOption(option,  value);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  currentOption  =  options.getOption(option,  value);	  Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
158	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOptions(value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOptions(value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOptions(value);	  Option    expectedOpts    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
159	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOptions(option);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOptions(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOptions(option);	  Option    expectedOpts    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
160	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  opt.getSelectedOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  opt.getSelectedOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  opt.getSelectedOptions();	  List    <    String>    expectedOpts    =    getSelectedOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
161	[BUG]  [BUGGY]  if(option  ==  null  ||!option.isEmpty()  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!option.isEmpty()  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!option.isEmpty()  ||  expectedOpts.size()  >  0)  {	  if(!option.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
162	[BUG]  [BUGGY]  if(option!=  null  ||!option.isEmpty()  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option!=  null  ||!option.isEmpty()  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option!=  null  ||!option.isEmpty()  ||  expectedOpts.size()  >  0)  {	  if(!option.isEmpty()    ||    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
163	[BUG]  [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  currentOption.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  currentOption.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  currentOption.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
164	[BUG]  [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isNonOption())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isNonOption())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isNonOption())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
165	[BUG]  [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isSwitchParsing())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isSwitchParsing())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isSwitchParsing())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
166	[BUG]  [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isSwitchParsing)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isSwitchParsing)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!expectedOpts.isEmpty()  &&  options.isSwitchParsing)  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
167	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)options.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)options.get(argument  +  1);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)options.get(argument  +  1);	  Option    expectedOpts    =(Option)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
168	[BUG]  [BUGGY]  if(options.isRequired()  ||!options.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!options.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!options.isEmpty())  {	  if(!options.isEmpty()    ||    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
169	[BUG]  [BUGGY]  if(options!=  null  ||  options.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options!=  null  ||  options.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options!=  null  ||  options.isEmpty())  {	  if(!options.isEmpty()    ||    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
170	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions().get(option);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions().get(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions().get(option);	  List    <    String>    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
171	[BUG]  [BUGGY]  if(!option.isEmpty()  ||  expectedOpts.size()  >  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isEmpty()  ||  expectedOpts.size()  >  1)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isEmpty()  ||  expectedOpts.size()  >  1)  {	  if(!expectedOpts.isEmpty()    ||    expectedOpts.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
172	[BUG]  [BUGGY]  if(!options.isEmpty()  ||  expectedOpts.size()  >  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isEmpty()  ||  expectedOpts.size()  >  1)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isEmpty()  ||  expectedOpts.size()  >  1)  {	  if(!expectedOpts.isEmpty()    ||    expectedOpts.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
173	[BUG]  [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  ||  currentOption.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  ||  currentOption.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!expectedOpts.isEmpty()  ||  currentOption.isEmpty())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
174	[BUG]  [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  ||  options.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  ||  options.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!expectedOpts.isEmpty()  ||  options.isEmpty())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
175	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(value);	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
176	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option.value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option.value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(option.value);	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
177	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.option);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  cmd  =  options.getOption(this.option);  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  cmd  =  options.getOption(this.option);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
178	[BUG]  [BUGGY]  if(option  ==  null  ||  expectedOpts!=  null  &&!option.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||  expectedOpts!=  null  &&!option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||  expectedOpts!=  null  &&!option.isRequired())  {	  if(option    ==    null    ||    expectedOpts!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
179	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions(value);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions(value);	  List    expectedOpts    =    getOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
180	[BUG]  [BUGGY]  if(option.isRequired()  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option.isRequired()  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option.isRequired()  ||!expectedOpts.isEmpty())  {	  if    (!expectedOpts.isEmpty()    ||!option.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
181	[BUG]  [BUGGY]  List  expectedOpts  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  option.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  option.getOptions();	  List    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
182	[BUG]  [BUGGY]  Options  options  =(Option)this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Options  options  =(Option)this.options.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Options  options  =(Option)this.options.getOptions();	  Options    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
183	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().get(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().get(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().get(option);	  List    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
184	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().values().size();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().values().size();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().values().size();	  List    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
185	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().keySet().size();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().keySet().size();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().keySet().size();	  List    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
186	[BUG]  [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  &&  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!expectedOpts.isEmpty()  &&  expectedOpts.size()  >  0)  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
187	[BUG]  [BUGGY]  if(expectedOpts.isEmpty()  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts.isEmpty()  ||  expectedOpts.size()  >  0)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts.isEmpty()  ||  expectedOpts.size()  >  0)  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.size()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
188	[BUG]  [BUGGY]  Option  expectedOpts  =(Option)options.get(argument.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =(Option)options.get(argument.toString());  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =(Option)options.get(argument.toString());	  Option    expectedOpts    =(Option)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
189	[BUG]  [BUGGY]  final  Option  expectedOpts  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  currentOption.getOption(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  currentOption.getOption(argument);	  final    Option    expectedOpts    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
190	[BUG]  [BUGGY]  if(!options.isRequired()  ||!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!options.isRequired()  ||!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!options.isRequired()  ||!expectedOpts.isEmpty())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
191	[BUG]  [BUGGY]  if(options.isRequired()  ||  options.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  options.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  options.isEmpty())  {	  if(!options.isEmpty()    ||    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
192	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getSelectedOptions().value;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getSelectedOptions().value;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getSelectedOptions().value;	  List    <    String>    expectedOpts    =    getSelectedOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
193	[BUG]  [BUGGY]  Option  expectedOpts  =  options.stopAtNonOption?  options.getOptions(option):  null;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.stopAtNonOption?  options.getOptions(option):  null;  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.stopAtNonOption?  options.getOptions(option):  null;	  Option    expectedOpts    =    option.stopAtNonOption?    options.getOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
194	[BUG]  [BUGGY]  if(!option.isRequired()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isRequired()  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isRequired()  ||  expectedOpts.isEmpty())  {	  if(!option.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
195	[BUG]  [BUGGY]  if(options.isRequired()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  options.isRequired())  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
196	[BUG]  [BUGGY]  if(options.isRequired()  ||  options.isSwitchParsing())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  options.isSwitchParsing())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  options.isSwitchParsing())  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
197	[BUG]  [BUGGY]  if(options.isRequired()  ||  options.isVarArgs())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  options.isVarArgs())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  options.isVarArgs())  {	  if(options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
198	[BUG]  [BUGGY]  List  expectedOpts  =  this.opt.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  this.opt.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  this.opt.getOptions();	  List    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
199	[BUG]  [BUGGY]  Options  options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Options  options  =  option.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Options  options  =  option.getOptions();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
200	[BUG]  [BUGGY]  Options  options  =  currentOption.requiredOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Options  options  =  currentOption.requiredOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Options  options  =  currentOption.requiredOptions();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
201	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions().values().size();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions().values().size();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions().values().size();	  List    <    String>    expectedOpts    =    getOptions().size();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
202	[BUG]  [BUGGY]  if(options.isEmpty()  ||  expectedOpts.isOn())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isEmpty()  ||  expectedOpts.isOn())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isEmpty()  ||  expectedOpts.isOn())  {	  if(options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
203	[BUG]  [BUGGY]  if(options.isEmpty()  ||  expectedOpts.isAllowed())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isEmpty()  ||  expectedOpts.isAllowed())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isEmpty()  ||  expectedOpts.isAllowed())  {	  if(options.isEmpty()    ||    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
204	[BUG]  [BUGGY]  Options  options  =  this.options.getOption(option);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Options  options  =  this.options.getOption(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Options  options  =  this.options.getOption(option);	  Options    options    =    this.options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
205	[BUG]  [BUGGY]  if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isRequired())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
206	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||!expectedOpts.isEmpty()  ||  option.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(expectedOpts  ==  null  ||!expectedOpts.isEmpty()  ||  option.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts  ==  null  ||!expectedOpts.isEmpty()  ||  option.isRequired())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
207	[BUG]  [BUGGY]  if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isNonOption())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isNonOption())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||  expectedOpts.isEmpty()  ||  option.isNonOption())  {	  if(option    ==    null    ||!expectedOpts.isEmpty()    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
208	[BUG]  [BUGGY]  Option  expectedOpts  =  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  this.options.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  this.options.getOptions();	  Option    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
209	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(option,  value,  expectedToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(option,  value,  expectedToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(option,  value,  expectedToken);	  Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
210	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  ||  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isEmpty()  ||  options.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
211	[BUG]  [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  ||  options.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!expectedOpts.isEmpty()  ||  options.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    options.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
212	[BUG]  [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  &&  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!expectedOpts.isEmpty()  &&  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!expectedOpts.isEmpty()  &&  expectedOpts.isEmpty())  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
213	[BUG]  [BUGGY]  if(!option.isRequired()  &&  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!option.isRequired()  &&  expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!option.isRequired()  &&  expectedOpts.isEmpty())  {	  if(!expectedOpts.isEmpty()    &&    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
214	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(option,  argument);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.getOption(option,  argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.getOption(option,  argument);	  Option    expectedOpts    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
215	[BUG]  [BUGGY]  Option  expectedOpts  =  currentOption.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  currentOption.getOption(currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  currentOption.getOption(currentToken);	  Option    expectedOpts    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
216	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option.getKey());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(option.getKey());  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(option.getKey());	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
217	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  getOptions(currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  getOptions(currentToken);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  getOptions(currentToken);	  List    <    String>    expectedOpts    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
218	[BUG]  [BUGGY]  Option  expectedOpts  =  options.get(argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  expectedOpts  =  options.get(argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  expectedOpts  =  options.get(argument);	  Option    expectedOpts    =(Option)options.get(value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
219	[BUG]  [BUGGY]  Option  options  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  options  =  options.getOption(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  options  =  options.getOption(option);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
220	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  Option  options  =  options.getOptions(option);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	Option  options  =  options.getOptions(option);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
221	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  >  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  >  2)  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  >  2)  {	  if(!expectedOpts.isEmpty()    ||    expectedOpts.size()    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
222	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  this.option.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  <  String>  expectedOpts  =  this.option.getOptions();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  <  String>  expectedOpts  =  this.option.getOptions();	  List    <    String>    expectedOpts    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
223	[BUG]  [BUGGY]  if(option  ==  null  ||!option.isRequired()  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option  ==  null  ||!option.isRequired()  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option  ==  null  ||!option.isRequired()  &&!expectedOpts.isEmpty())  {	  if    (!option.isRequired()    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
224	[BUG]  [BUGGY]  final  Option  expectedOpts  =  options.getOption(option,  argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  final  Option  expectedOpts  =  options.getOption(option,  argument);  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	final  Option  expectedOpts  =  options.getOption(option,  argument);	  final    Option    expectedOpts    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
225	[BUG]  [BUGGY]  List  expectedOpts  =  getOptions().options();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  List  expectedOpts  =  getOptions().options();  [BUGGY]      if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	List  expectedOpts  =  getOptions().options();	  List    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
226	[BUG]  [BUGGY]  if(option!=  null  &&  expectedOpts!=  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(option!=  null  &&  expectedOpts!=  null  &&!expectedOpts.isEmpty())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(option!=  null  &&  expectedOpts!=  null  &&!expectedOpts.isEmpty())  {	  if(option    ==    null    ||    expectedOpts!=    null    &&!expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
227	[BUG]  [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  ||  expectedOpts.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||!expectedOpts.isEmpty()  ||  expectedOpts.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||!expectedOpts.isEmpty()  ||  expectedOpts.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
228	[BUG]  [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  expectedOpts.isRequired())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  checkRequiredOptions()  throws  MissingOptionException  {        [BUGGY]  if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  expectedOpts.isRequired())  {  [BUGGY]      {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(options.isRequired()  ||  expectedOpts.isEmpty()  &&  expectedOpts.isRequired())  {	  if(options.isRequired()    ||!expectedOpts.isEmpty()    &&    expectedOpts.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
