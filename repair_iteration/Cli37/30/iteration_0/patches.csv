bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.isEmpty())  {  [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  ||  expectedOpts.isEmpty())  {	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
2	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]  if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  >  0)  {  [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  ||  expectedOpts.size()  >  0)  {	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
3	[BUG]  [BUGGY]  if  (!expectedOpts.isEmpty()  &&!option.isRequired())  {  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]  if  (!expectedOpts.isEmpty()  &&!option.isRequired())  {  [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if  (!expectedOpts.isEmpty()  &&!option.isRequired())  {	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	  	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
5	[BUG]  [BUGGY]    Option  expectedOpts  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    Option  expectedOpts  =  options.getOption(option);  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    Option  expectedOpts  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	61	None	add
6	[BUG]  [BUGGY]    Option  expectedOpts  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    Option  expectedOpts  =  options.getOption(opt);  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    Option  expectedOpts  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	61	None	add
7	[BUG]  [BUGGY]    Option  expectedOpts  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    Option  expectedOpts  =  cmd.getOption(option);  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    Option  expectedOpts  =  cmd.getOption(option);		non-compiled	[CE]  illegal  start  of  type	61	None	add
8	[BUG]  [BUGGY]    Option  expectedOpts  =(Option)options.get(option);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    Option  expectedOpts  =(Option)options.get(option);  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    Option  expectedOpts  =(Option)options.get(option);		non-compiled	[CE]  illegal  start  of  type	61	None	add
9	[BUG]  [BUGGY]    final  Option  expectedOpts  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    final  Option  expectedOpts  =  options.getOption(opt);  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    final  Option  expectedOpts  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	61	None	add
10	[BUG]  [BUGGY]    Option  expectedOpts  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    Option  expectedOpts  =  option.getOptions();  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    Option  expectedOpts  =  option.getOptions();		non-compiled	[CE]  illegal  start  of  type	61	None	add
11	[BUG]  [BUGGY]    List  expectedOpts  =  getOptions();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    List  expectedOpts  =  getOptions();  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    List  expectedOpts  =  getOptions();		non-compiled	[CE]  illegal  start  of  type	61	None	add
12	[BUG]  [BUGGY]    Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    Options  options  =  options.getOptions();  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    Options  options  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	61	None	add
13	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  &&  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]  if(!expectedOpts.isEmpty()  &&  options.isRequired())  {  [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  &&  options.isRequired())  {	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
14	[BUG]  [BUGGY]  if(!expectedOpts.isEmpty()  ||  options.isRequired())  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]  if(!expectedOpts.isEmpty()  ||  options.isRequired())  {  [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(!expectedOpts.isEmpty()  ||  options.isRequired())  {	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
15	[BUG]  [BUGGY]  if(expectedOpts!=  null  &&!expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]  if(expectedOpts!=  null  &&!expectedOpts.isEmpty())  {  [BUGGY]  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	if(expectedOpts!=  null  &&!expectedOpts.isEmpty())  {	if  (!expectedOpts.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	60	None	replace
16	[BUG]  [BUGGY]    List  <  String>  expectedOpts  =  getOptions();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {    [BUGGY]    List  <  String>  expectedOpts  =  getOptions();  [BUGGY]  if  (!expectedOpts.isEmpty())  {  {  throw  new  MissingOptionException(expectedOpts);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	    List  <  String>  expectedOpts  =  getOptions();		non-compiled	[CE]  illegal  start  of  type	61	None	add
