bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    Option  currentOption  =  options.getOption(option);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    Option  currentOption  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	65	None	add
2	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    Option  currentOption  =  options.getOption(opt);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    Option  currentOption  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	65	None	add
3	[BUG]  [BUGGY]    Option  currentOption  =  option.getOption();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    Option  currentOption  =  option.getOption();  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    Option  currentOption  =  option.getOption();		non-compiled	[CE]  illegal  start  of  type	65	None	add
4	[BUG]  [BUGGY]    Option  currentOption  =  getOption(option);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    Option  currentOption  =  getOption(option);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    Option  currentOption  =  getOption(option);		non-compiled	[CE]  illegal  start  of  type	65	None	add
5	[BUG]  [BUGGY]    Option  currentOption  =  option.getOption(option);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    Option  currentOption  =  option.getOption(option);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    Option  currentOption  =  option.getOption(option);		non-compiled	[CE]  illegal  start  of  type	65	None	add
6	[BUG]  [BUGGY]  if(currentOption!=  null  ||  currentOption.requiresArg())  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]  if(currentOption!=  null  ||  currentOption.requiresArg())  {  [BUGGY]  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  ||  currentOption.requiresArg())  {	if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  	non-compiled	[CE]  illegal  start  of  type	64	None	replace
7	[BUG]  [BUGGY]  if(currentOption!=  null  &&  currentOption.isRequired())  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]  if(currentOption!=  null  &&  currentOption.isRequired())  {  [BUGGY]  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  &&  currentOption.isRequired())  {	if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  	non-compiled	[CE]  illegal  start  of  type	64	None	replace
8	[BUG]  [BUGGY]  if(currentOption!=  null  &&  currentOption.requiresArgument())  {  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]  if(currentOption!=  null  &&  currentOption.requiresArgument())  {  [BUGGY]  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  &&  currentOption.requiresArgument())  {	if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  	non-compiled	[CE]  illegal  start  of  type	64	None	replace
9	[BUG]  [BUGGY]    DefaultParser  <  Option>  currentOption  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    DefaultParser  <  Option>  currentOption  =  options.getOption(option);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    DefaultParser  <  Option>  currentOption  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	65	None	add
10	[BUG]  [BUGGY]    DefaultParser  <  Option>  currentOption  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    DefaultParser  <  Option>  currentOption  =  options.getOption(opt);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    DefaultParser  <  Option>  currentOption  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	65	None	add
11	[BUG]  [BUGGY]  if(currentOption!=  null  &&  currentOption.hasArg())  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]  if(currentOption!=  null  &&  currentOption.hasArg())  {  [BUGGY]  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  &&  currentOption.hasArg())  {	if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  	non-compiled	[CE]  illegal  start  of  type	64	None	replace
12	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredArgs()  throws  ParseException  {  [BUGGY]    Option  currentOption  =  options.getOption(argument);  [BUGGY]  if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	    Option  currentOption  =  options.getOption(argument);		non-compiled	[CE]  illegal  start  of  type	65	None	add
