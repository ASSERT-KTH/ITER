bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  options.getOption();  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  options.getOption();	      Option    currentOption    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  Option  currentOption  =  option.getOption(),  value);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  option.getOption(),  value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  option.getOption(),  value);	      Option    currentOption    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  DefaultParser  <  Option>  currentOption  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  DefaultParser  <  Option>  currentOption  =  options.getOption(value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	DefaultParser  <  Option>  currentOption  =  options.getOption(value);	      DefaultParser    <    Option>    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  if(currentOption!=  null  ||  currentOption.hasArg())  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption!=  null  ||  currentOption.hasArg())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  ||  currentOption.hasArg())  {	  if(currentOption!=    null    &&    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  if(currentOption  ==  null  &&  currentOption.hasArg())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption  ==  null  &&  currentOption.hasArg())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption  ==  null  &&  currentOption.hasArg())  {	  if(currentOption!=    null    &&    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  if(currentOption  ==  null  ||  currentOption.hasArg())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption  ==  null  ||  currentOption.hasArg())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption  ==  null  ||  currentOption.hasArg())  {	  if(currentOption!=    null    &&    currentOption.hasArg())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  option.getOption(value);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  option.getOption(value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  option.getOption(value);	      Option    currentOption    =    option.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  Option  currentOption  =  option.getOption(this.option);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  option.getOption(this.option);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  option.getOption(this.option);	      Option    currentOption    =    option.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  Option  currentOption  =  getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  getOption(option,  value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  getOption(option,  value);	      Option    currentOption    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  Option  currentOption  =  getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  getOption(option,  expectedOpts);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  getOption(option,  expectedOpts);	      Option    currentOption    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  Option  currentOption  =  getOption(value);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  getOption(value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  getOption(value);	      Option    currentOption    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  options.getOption(value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  options.getOption(value);	      Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  value);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  options.getOption(argument,  value);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  options.getOption(argument,  value);	      Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  Option  currentOption  =  options.getOption(options);  [BUGGY]    if  (currentOption  !=  null  &&  currentOption.requiresArg())  {  {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	Option  currentOption  =  options.getOption(options);	      Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  if(currentOption!=  null  ||  currentOption.requiresArgument())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption!=  null  ||  currentOption.requiresArgument())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  ||  currentOption.requiresArgument())  {	  if(currentOption!=    null    &&    currentOption.requiresArgument())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  if(currentOption!=  null  ||  currentOption.isRequired())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption!=  null  ||  currentOption.isRequired())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption!=  null  ||  currentOption.isRequired())  {	  if(currentOption!=    null    &&    currentOption.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  if(currentOption  ==  null  &&  currentOption.isRequired())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption  ==  null  &&  currentOption.isRequired())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption  ==  null  &&  currentOption.isRequired())  {	  if(currentOption!=    null    &&    currentOption.isRequired())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  if(currentOption  ==  null  ||  currentOption.isRequired())  {  [timeout]  [FE]              AssertionError    [CONTEXT]    private  void  checkRequiredArgs()  throws  ParseException  {    [BUGGY]  if(currentOption  ==  null  ||  currentOption.isRequired())  {  [BUGGY]    {  throw  new  MissingArgumentException(currentOption);  }  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredArgs  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	if(currentOption  ==  null  ||  currentOption.isRequired())  {	  if(currentOption!=    null    &&    currentOption.isRequired())    {    	non-compiled	[timeout]	7	None	replace
