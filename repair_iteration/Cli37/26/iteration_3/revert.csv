projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addArg(argument);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkState();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkRequiredParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkState(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){handleRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd==null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&currentOption!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130pullParsing(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(this,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleMissing(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130[Delete]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(group,argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=parent.getParent();cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)&&!skipParsing){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentOption)){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd.length()>0){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(options,stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument);}else{expectedOpts.add(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument);}else{thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addChangeListener(this,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkInternal();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(argument,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleMissing(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleMissing(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleMissing(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroup.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||!stopAtNonOption){cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||currentOption){cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}else{handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||!stopAtNonOption){cmd=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=currentOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.parseOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent!=null&&stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null||stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=optionGroup.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=this.currentOption.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130&&cmd!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption||cmd!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption||cmd==null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130&&cmd==null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=currentOption.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,currentToken,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getOptionGroup(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(options,stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(options,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(false);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(true,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(false,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}else{thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}else{expectedOpts.add(currentToken);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||skipParsing){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||skipParsing){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(this);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,currentOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,currentToken){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,group){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,null,stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||!stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||currentOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130handleRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.handleRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?null:stopToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(currentOption,stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption||skipParsing){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){Optiongroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,stopAtNonOption,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,stopAtNonOption,properties);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentToken){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments[0],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments[0],currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=optionGroup.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){Optiongroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.checkState(stopAtNonOption)?checkRequiredOptions():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){pullParsing(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130pulse(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addChangeListener(this);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addChangeListener(this);}else{ignoreParsing=false;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parsingExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=currentOption.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption||!skipParsing;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();if(stopAtNonOption){cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption||currentOption!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130&&currentOption!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=currentOption.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)&&!skipParsing){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)&&!skipParsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption)checkState();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,argument,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,argument,stopAtNonOption);}else{expectedOpts.add(currentToken);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,argument,stopAtNonOption);}else{thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleParsing(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleParsing(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption)checkToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}else{handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=parent.getParent();cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd!=null){handleRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd==null){handleRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&currentOption!=null){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&currentOption==null){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&currentOption!=null){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=parent.getParent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser(parent);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||currentOption){cmd=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=this;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){luate(cmd,stopAtNonOption)){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd.addChangeListener(this,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd.addValueChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd.addValueListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.checkState(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleSkipParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)skipParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd!=null){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd==null){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.skipParsing(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(optionGroup);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!skipParsing){aughtExceptionHandler(group,argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){aughtExceptionHandler(group,argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(skippedParsing){aughtExceptionHandler(group,argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){luate(cmd,stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){luate(cmd,stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){if(skipParsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup==null&&stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?null:currentToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){aughtExceptionHandler.handleOption(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){aughtExceptionHandler.handleOption(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument,stopAtNonOption);}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler.handleOption(argument,stopAtNonOption);}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,cmd){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkArgument(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.skipParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(options,stopAtNonOption){checkParsing();}elseif(stopAtNonOption){cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd!=null){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd==null){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("".);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.removeChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkParsing(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkParsing(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleMissing(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}else{cmd.append('n');}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,stopAtNonOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(cmd,stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){aughtExceptionHandler.handleOption(stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){aughtExceptionHandler.handleOption(stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getArgumentGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parsing(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(options,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){aughtExceptionHandler.handleOption(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.removeChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||this.stopAtNonOption){cmd=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||currentToken){cmd=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,this.stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){aughtExceptionHandler.handleMissing(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){aughtExceptionHandler.handleMissing(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionsGroup.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkStart();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleParsing(optionGroup);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)stopParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleParsing(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(group,stopAtNonOption){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser();if(stopAtNonOption){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser();if(stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(group,stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(true,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){aughtExceptionHandler.handleOption(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.checkState(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkState(stopAtNonOption==false){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130pendingParsing=stopAtNonOption?checkRequiredParsing():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(argument,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentToken){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,group){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentToken)){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,currentOption)){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkRequiredParsing(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd==null){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd==null){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd==null){cmd=newCommandLine();cmd.addArg(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParent();cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130pullParsing(cmd,currentOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parseOption(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd==null){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(argument,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptioncurrentOption=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){handleParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){handleInternal();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!skipParsing){aughtExceptionHandler.handleOption(stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.parseOption(this,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){this.exceptionHandler=stopAtNonOption;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(this,stopAtNonOption);}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){reportParsingException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||!stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,currentOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(exceptionHandler!=null){aughtExceptionHandler.handleOption(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd==null){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(cmd==null){cmd=newCommandLine();cmd.addArgument(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?null:blockAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||this.stopAtNonOption){cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!skipParsing){aughtExceptionHandler.handleOption(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(currentOption!=null){aughtExceptionHandler.handleOption(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(group,stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption||group==null){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){aughtExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(currentOption,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(defaultToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?options.stopAtNonOption:options.stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption&&cmd.length()>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?options.stopAtNonOption:options.stopAtNonOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(argument.toString());
