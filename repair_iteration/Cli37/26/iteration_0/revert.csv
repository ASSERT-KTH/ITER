projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addArg(argument);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();
