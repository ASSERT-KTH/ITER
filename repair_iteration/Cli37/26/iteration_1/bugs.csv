bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  cmd  =  options.parseOption(argument);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    Option  cmd  =  options.parseOption(argument);  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    Option  cmd  =  options.parseOption(argument);		non-compiled	[CE]  illegal  start  of  type	53	None	add
2	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    Option  cmd  =  options.getOption(argument);  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    Option  cmd  =  options.getOption(argument);		non-compiled	[CE]  illegal  start  of  type	53	None	add
3	[BUG]  [BUGGY]    Options  cmd  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    Options  cmd  =  options.getOption(argument);  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    Options  cmd  =  options.getOption(argument);		non-compiled	[CE]  illegal  start  of  type	53	None	add
4	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    if(stopAtNonOption)  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	53	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    Option  cmd  =  options.parseOption(currentToken);  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    Option  cmd  =  options.parseOption(currentToken);		non-compiled	[CE]  illegal  start  of  type	53	None	add
6	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]    return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }	checkRequiredOptions();  	non-compiled	[CE]  illegal  start  of  type	52	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  throw  new  IllegalArgumentException( " ");  }	checkRequiredOptions();  	non-compiled	[CE]  illegal  start  of  type	52	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]    return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  new  CommandLine();  }	checkRequiredOptions();  	non-compiled	[CE]  illegal  start  of  type	52	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)checkRequiredOptions();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]  if(stopAtNonOption)checkRequiredOptions();  [BUGGY]    return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	if(stopAtNonOption)checkRequiredOptions();	checkRequiredOptions();  	non-compiled	[CE]  illegal  start  of  type	52	None	replace
10	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd.addArg(argument);  }  else  {  cmd.addArg(argument);  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    if(stopAtNonOption)  {  cmd.addArg(argument);  }  else  {  cmd.addArg(argument);  }  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    if(stopAtNonOption)  {  cmd.addArg(argument);  }  else  {  cmd.addArg(argument);  }		non-compiled	[CE]  illegal  start  of  type	53	None	add
11	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }		non-compiled	[CE]  illegal  start  of  type	53	None	add
12	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	53	None	add
13	[BUG]  [BUGGY]    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }		non-compiled	[CE]  illegal  start  of  type	53	None	add
14	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]    return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	if(!stopAtNonOption)  {  checkRequiredOptions();  }	checkRequiredOptions();  	non-compiled	[CE]  illegal  start  of  type	52	None	replace
15	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  null;  }  [BUGGY]    return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  null;  }	checkRequiredOptions();  	non-compiled	[CE]  illegal  start  of  type	52	None	replace
16	[BUG]  [BUGGY]    OptionGroup  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    OptionGroup  group  =  options.getGroup();  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    OptionGroup  group  =  options.getGroup();		non-compiled	[CE]  illegal  start  of  type	53	None	add
17	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(argument);  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    OptionGroup  group  =  options.getOptionGroup(argument);		non-compiled	[CE]  illegal  start  of  type	53	None	add
18	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [BUGGY]    OptionGroup  group  =  options.getOptionGroup();  [BUGGY]  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	    OptionGroup  group  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	53	None	add
