projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd.addArg(argument);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130optionGroup.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkState();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkRequiredParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=currentOption.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130||stopAtNonOption){cmd=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentToken.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.add(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkState(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optiongroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){handleRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130options.addOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parse(argument,stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&cmd==null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption&&currentOption!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=group.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130pullParsing(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(group,stopAtNonOption){checkRequiredOptions();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getGroup(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent==null&&stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption)){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130luate(cmd,stopAtNonOption){checkRequiredOptions();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(this,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleMissing(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130[Delete]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler.handleOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130aughtExceptionHandler(group,argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)handleParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130if(stopAtNonOption)checkToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130parent=parent.getParent();cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java130Optionscmd=options.getOption(argument,currentToken);
