bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.trim();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  null  :  opt.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt!=  null)?  null  :  opt.trim();	  return(opt    ==    null)?    null    :    opt.trim();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
2	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.trim()  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  null  :  opt.trim()  +  1;	  return(opt    ==    null)?    null    :    opt.trim();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
3	[BUG]  [BUGGY]  return  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(0,  i);	  return    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
4	[BUG]  [BUGGY]  return  token.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  i  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  token.substring(0,  i  +  1);	  return    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
5	[BUG]  [BUGGY]  return  prefix.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.substring(0,  i);	  return    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
6	[BUG]  [BUGGY]  return  t.substring(i,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(i,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(i,  token);	  return    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
8	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
10	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
11	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  options  =  options.getOption(opt);	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    opt    =    options.getOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
12	[BUG]  [BUGGY]  Option  currentToken  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  currentToken  =  options.get(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  currentToken  =  options.get(token);	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    opt    =    options.getOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
13	[BUG]  [BUGGY]  return(opt  ==  null)?  this.currentToken  :  token;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this.currentToken  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  this.currentToken  :  token;	  return    this.currentToken;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
14	[BUG]  [BUGGY]  return(opt!=  null)?  this.currentToken  :  token;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  this.currentToken  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt!=  null)?  this.currentToken  :  token;	  return    this.currentToken;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
15	[BUG]  [BUGGY]  return  this.currentToken.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  this.currentToken.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  this.currentToken.substring(0,  i);	  return    this.currentToken;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
20	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i  +  1,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i  +  1,  i  +  1);	  opt    =    t.substring(0,    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
21	[BUG]  [BUGGY]  opt  =  t.substring(0,  i  +  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(0,  i  +  3);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(0,  i  +  3);	  opt    =    t.substring(0,    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
22	[BUG]  [BUGGY]  return(option!=  null)?  this.option  :  option;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option!=  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(option!=  null)?  this.option  :  option;	  return(opt!=    null)?    this.option    :    option;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
24	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
25	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  expectedOpts  =  options.getOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  expectedOpts  =  options.getOption(opt);	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
27	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  options.getOption(currentToken);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  opt  =  options.getOption(currentToken);  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasOption(opt))  {  opt  =  options.getOption(currentToken);  }	  opt    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
28	[BUG]  [BUGGY]  if(options.hasOption(prefix))  {  opt  =  options.getOption(currentToken);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(prefix))  {  opt  =  options.getOption(currentToken);  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasOption(prefix))  {  opt  =  options.getOption(currentToken);  }	  opt    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
29	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  this.option;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  this.option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  null  :  this.option;	  return(this.option    ==    null)?    null    :    this.option;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
30	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i  +  1,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i  +  1,  token);	  opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  prefix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i  +  1,  prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i  +  1,  prefix);	  opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  opt  =  t.substring(i  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i  +  2);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i  +  2);	  opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
33	[BUG]  [BUGGY]  return  options.getLongOption(option);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(option);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(option);	  return    options.getLongOption(token);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  options.getLongOption(opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.getLongOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.getLongOption(opt);	  return    options.getLongOption(token);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  return(this.option  ==  null)?  this.option  :  token;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  this.option  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option  ==  null)?  this.option  :  token;	  return(opt    ==    null)?    this.option    :    token;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
36	[BUG]  [BUGGY]  return(token  ==  null)?  this.option  :  token;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token  ==  null)?  this.option  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(token  ==  null)?  this.option  :  token;	  return(opt    ==    null)?    this.option    :    token;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
37	[BUG]  [BUGGY]  opt  =  option.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  option.substring(0,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  option.substring(0,  i  +  1);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  opt  =  prefix.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  prefix.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  prefix.substring(0,  i);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  return  options.getLongOption(token,  opt);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(token,  opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(token,  opt);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
40	[BUG]  [BUGGY]  return  options.getLongOption(prefix,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(prefix,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(prefix,  token);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
41	[BUG]  [BUGGY]  return  options.getLongOption(currentToken,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(currentToken,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(currentToken,  token);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
42	[BUG]  [BUGGY]  return  options.getLongOption(opt,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  token,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(opt,  token,  expectedOpts);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
43	[BUG]  [BUGGY]  opt  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.get(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.get(token);	  opt    =    options.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
44	[BUG]  [BUGGY]  opt  =  options.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.get(prefix  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.get(prefix  +  1);	  opt    =    options.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
45	[BUG]  [BUGGY]  opt  =  options.get(currentToken);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.get(currentToken);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.get(currentToken);	  opt    =    options.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
46	[BUG]  [BUGGY]  options.addOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.addOption(token);	  options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
47	[BUG]  [BUGGY]  options.addOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(opt,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.addOption(opt,  token);	  options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
48	[BUG]  [BUGGY]  options.addOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.addOption(option);	  options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
49	[BUG]  [BUGGY]  opt  =  token.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  token.substring(0,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  token.substring(0,  i  +  1);	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  opt  =  t.substring(i,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i,  token);	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasLongOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasLongOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  return(opt!=  null)?  this  :  opt;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  this  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt!=  null)?  this  :  opt;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
54	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  opt.token;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  opt.token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  this  :  opt.token;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
55	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  opt.toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  this  :  opt.toString();	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
56	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  prefix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(token,  prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(token,  prefix);	  Option    option    =    options.getOption(prefix,    token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(prefix,  value);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(prefix,  value);	  Option    option    =    options.getOption(prefix,    token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  return  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getOption(token);	  return    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
59	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasOption(opt))  {  return  options.getOption(opt);  }	  return    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
60	[BUG]  [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasOption(prefix))  {  return  options.getOption(opt);  }	  return    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Options  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Options  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Options  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
65	[BUG]  [BUGGY]  return  token.substring(0,  opt.length());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  opt.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  token.substring(0,  opt.length());	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  return  opt.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  token.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  token.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  return  t.substring(0,  opt.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  opt.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(0,  opt.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  return  prefix.substring(0,  opt.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  opt.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.substring(0,  opt.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Options  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Options  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Options  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
73	[BUG]  [BUGGY]  return  opt.trim();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.trim();	  return    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
74	[BUG]  [BUGGY]  return  t.trim();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.trim();	  return    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
75	[BUG]  [BUGGY]  return  currentToken.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  currentToken.trim()  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  currentToken.trim()  +  1;	  return    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
76	[BUG]  [BUGGY]  opt  =  options.getOption(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(prefix  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(prefix  +  1);	  opt    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
77	[BUG]  [BUGGY]  opt  =  options.getOption(token  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(token  +  2);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(token  +  2);	  opt    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
78	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i  +  1,  value);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i  +  1,  value);	  opt    =    t.substring(i    +    1,    i);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
79	[BUG]  [BUGGY]  OptOption  opt  =  option.trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  option.trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  option.trim();	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
80	[BUG]  [BUGGY]  OptOption  opt  =  options.trim();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  options.trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  options.trim();	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
81	[BUG]  [BUGGY]  OptOption  opt  =  t.trim();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  t.trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  t.trim();	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
82	[BUG]  [BUGGY]  OptOption  opt  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  options.getOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  options.getOption(token);	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
83	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  currentOption  =  options.getOption(token);	  Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
84	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  currentOption  =  options.getOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  currentOption  =  options.getOption(prefix);	  Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
85	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  currentOption  =  options.getOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  currentOption  =  options.getOption(option);	  Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
86	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  currentOption  =  options.getOption(opt,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  currentOption  =  options.getOption(opt,  token);	  Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
87	[BUG]  [BUGGY]  option  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.getOption(token,  value);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	option  =  options.getOption(token,  value);	  option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
88	[BUG]  [BUGGY]  opt  =  t.substring(0,  i)+  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(0,  i)+  2;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(0,  i)+  2;	  opt    =    t.substring(0,    i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
89	[BUG]  [BUGGY]  opt  =  t.substring(0,  i)+  3;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(0,  i)+  3;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(0,  i)+  3;	  opt    =    t.substring(0,    i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  opt  =  prefix.substring(0,  i)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  prefix.substring(0,  i)+  1;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  prefix.substring(0,  i)+  1;	  opt    =    t.substring(0,    i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
91	[BUG]  [BUGGY]  opt  =  t.substring(0,  i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(0,  i  +  1,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(0,  i  +  1,  token);	  opt    =    t.substring(0,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
92	[BUG]  [BUGGY]  return  options.get(opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.get(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.get(opt);	  return    options.getLongOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  option  =  options.getOption(token,  opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.getOption(token,  opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	option  =  options.getOption(token,  opt);	  option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
94	[BUG]  [BUGGY]  option  =  options.getOption(prefix,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.getOption(prefix,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	option  =  options.getOption(prefix,  token);	  option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
95	[BUG]  [BUGGY]  Option  opt  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.getOption(token);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  Option  opt  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(currentToken);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.getOption(currentToken);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
97	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.getOption(option);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
98	[BUG]  [BUGGY]  opt  =  options.getOption(prefix,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(prefix,  value);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(prefix,  value);	  opt    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
99	[BUG]  [BUGGY]  opt  =  options.getOption(token,  value,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(token,  value,  expectedOpts);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(token,  value,  expectedOpts);	  opt    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
100	[BUG]  [BUGGY]  opt  =  options.getOption(token,  value  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(token,  value  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(token,  value  +  1);	  opt    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
101	[BUG]  [BUGGY]  opt  =  options.getOption(token,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(token,  value  -  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(token,  value  -  1);	  opt    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  opt);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(token,  opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(token,  opt);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(currentToken,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(currentToken,  token);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
104	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
105	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
106	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >=  0;  i++)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >=  0;  i++)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >=  0;  i++)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
107	[BUG]  [BUGGY]  return  opt.toString();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.toString();	  return    option.toString();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
108	[BUG]  [BUGGY]  return  option.toString()  + ": "  +  token;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.toString()  + ": "  +  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.toString()  + ": "  +  token;	  return    option.toString();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
109	[BUG]  [BUGGY]  return  options.toString();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.toString();	  return    option.toString();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
110	[BUG]  [BUGGY]  while(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
111	[BUG]  [BUGGY]  while(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasLongOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
116	[BUG]  [BUGGY]  return  opt.toLowerCase();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.toLowerCase();	  return    currentToken.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
117	[BUG]  [BUGGY]  return  t.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.toLowerCase();	  return    currentToken.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
118	[BUG]  [BUGGY]  return  option.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.toLowerCase();	  return    currentToken.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options.hasOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.hasOption(prefix);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.hasOption(token);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.hasOption(option);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
122	[BUG]  [BUGGY]  Option  opt  =  options.getOption(prefix,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(prefix,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.getOption(prefix,  token);	  Option    opt    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
123	[BUG]  [BUGGY]  return  t.toString();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.toString();	  return    t;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
124	[BUG]  [BUGGY]  options.put(token,  opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.put(token,  opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.put(token,  opt);	  options.put(prefix,    opt);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
125	[BUG]  [BUGGY]  options.put(option,  prefix);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.put(option,  prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.put(option,  prefix);	  options.put(prefix,    opt);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
126	[BUG]  [BUGGY]  options.put(prefix,  token);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.put(prefix,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.put(prefix,  token);	  options.put(prefix,    opt);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option  ==  null)  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
130	[BUG]  [BUGGY]  return(token!=  null)?  token  :  toString();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  token  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(token!=  null)?  token  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
131	[BUG]  [BUGGY]  return(opt  ==  null)?  token  :  toString();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  token  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  token  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
132	[BUG]  [BUGGY]  return(token  ==  null)?  token  :  toString();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token  ==  null)?  token  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(token  ==  null)?  token  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
133	[BUG]  [BUGGY]  return  token.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.trim()  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  token.trim()  +  1;	  return    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
134	[BUG]  [BUGGY]  return  prefix.trim();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.trim();	  return    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
135	[BUG]  [BUGGY]  return  prefix.substring(0,  prefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  prefix.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.substring(0,  prefix.length()  -  1);	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
136	[BUG]  [BUGGY]  return  prefix.substring(0,  token.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  token.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.substring(0,  token.length()  -  1);	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
137	[BUG]  [BUGGY]  return  t.substring(0,  prefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  prefix.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(0,  prefix.length()  -  1);	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
138	[BUG]  [BUGGY]  return  token.substring(0,  prefix.length());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  prefix.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  token.substring(0,  prefix.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
139	[BUG]  [BUGGY]  return(option  ==  null)?  this.option  :  option;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(option  ==  null)?  this.option  :  option;	  return(opt    ==    null)?    this.option    :    option;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
140	[BUG]  [BUGGY]  return(this.option  ==  null)?  this.option  :  option;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option  ==  null)?  this.option  :  option;	  return(opt    ==    null)?    this.option    :    option;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
141	[BUG]  [BUGGY]  return  token.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.toLowerCase()  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  token.toLowerCase()  +  1;	  return    token.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
142	[BUG]  [BUGGY]  return(opt  >=  null)?  null  :  opt.toString();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  >=  null)?  null  :  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  >=  null)?  null  :  opt.toString();	  return(opt!=    null)?    null    :    opt.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
143	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  option.substring(i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  option.substring(i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  option.substring(i  +  1);	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  i  +  1);	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
145	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  null;	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
146	[BUG]  [BUGGY]  opt  =  t.substring(i,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i,  i);	  opt    =    t.substring(i,    opt);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
147	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i  +  1,  opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i  +  1,  opt);	  opt    =    t.substring(i,    opt);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
148	[BUG]  [BUGGY]  opt  =  t.substring(i,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i,  i  +  1);	  opt    =    t.substring(i,    opt);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
149	[BUG]  [BUGGY]  Option  opt  =  options.getLongOption(prefix);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getLongOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.getLongOption(prefix);	  Option    opt    =    options.getLongOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
150	[BUG]  [BUGGY]  Option  opt  =  options.getLongOption(token);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getLongOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.getLongOption(token);	  Option    opt    =    options.getLongOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
151	[BUG]  [BUGGY]  opt  =  token.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  token.toLowerCase();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  token.toLowerCase();	  opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
152	[BUG]  [BUGGY]  opt  =  option;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  option;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  option;	  opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
153	[BUG]  [BUGGY]  return  option.substring(0,  opt.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.substring(0,  opt.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.substring(0,  opt.length());	  return    option.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
154	[BUG]  [BUGGY]  return  opt.substring(0,  opt.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  opt.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  opt.length()  -  1);	  return    option.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
155	[BUG]  [BUGGY]  return  opt.substring(0,  opt.length());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  opt.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  opt.length());	  return    option.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
156	[BUG]  [BUGGY]  return  opt.substring(0,  currentToken.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  currentToken.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  currentToken.length()  -  1);	  return    currentToken.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
157	[BUG]  [BUGGY]  return  opt.substring(0,  currentToken.length());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  currentToken.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  currentToken.length());	  return    currentToken.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
158	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(token,  value);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(token,  value);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
159	[BUG]  [BUGGY]  return  options.getIntOption(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getIntOption(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getIntOption(token);	  return    options.getIntOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
160	[BUG]  [BUGGY]  return  options.getIntOption(prefix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getIntOption(prefix);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getIntOption(prefix);	  return    options.getIntOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
161	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(prefix);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.hasOption(prefix);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
162	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.hasOption(token);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
163	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  opt  =  options.hasOption(option);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
164	[BUG]  [BUGGY]  opt  =  option.trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  option.trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  option.trim();	  opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
165	[BUG]  [BUGGY]  opt  =  token.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  token.trim()  +  1;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  token.trim()  +  1;	  opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
166	[BUG]  [BUGGY]  opt  =  value.trim();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  value.trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  value.trim();	  opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
167	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.token;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  null  :  opt.token;	  return(opt    ==    null)?    null    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
168	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  opt.toString();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  null  :  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(option  ==  null)?  null  :  opt.toString();	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
169	[BUG]  [BUGGY]  while(options.hasOption(prefix))  {  opt  =  option.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(prefix))  {  opt  =  option.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(prefix))  {  opt  =  option.substring(0,  i);	  while(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
170	[BUG]  [BUGGY]  while(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);	  while(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
171	[BUG]  [BUGGY]  while(options.hasOption(opt)&&  option.charAt(i)!=  '-')  {  opt  =  option.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(opt)&&  option.charAt(i)!=  '-')  {  opt  =  option.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(opt)&&  option.charAt(i)!=  '-')  {  opt  =  option.substring(0,  i);	  while(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
172	[BUG]  [BUGGY]  while(options.hasOption(opt)&&  option.charAt(i)!=  '-')  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(opt)&&  option.charAt(i)!=  '-')  {  opt  =  option.substring(0,  i);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(opt)&&  option.charAt(i)!=  '-')  {  opt  =  option.substring(0,  i);  }	  while(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
173	[BUG]  [BUGGY]  return  options.getLong(opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLong(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLong(opt);	  return    options.getLongPrefix(prefix);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
174	[BUG]  [BUGGY]  return(opt!=  null)?  this.option  :  token;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  this.option  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt!=  null)?  this.option  :  token;	  return(opt    ==    null)?    this.option    :    token;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
175	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(option,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(option,  token);	  Option    option    =    options.getOption(prefix,    token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
176	[BUG]  [BUGGY]  return  options.getLongPrefix(option,  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongPrefix(option,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongPrefix(option,  token);	  return    options.getLongPrefix(option);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
177	[BUG]  [BUGGY]  return  this.currentToken  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  this.currentToken  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  this.currentToken  +  1;	  return    this.currentToken;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
178	[BUG]  [BUGGY]  return  option.trim();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.trim();	  return    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
179	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  option;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  this  :  option;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
180	[BUG]  [BUGGY]  opt  =  options.getOption(value,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(value,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(value,  token);	  opt    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
181	[BUG]  [BUGGY]  if(opt!=  null)  {  opt  =  option.trim();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(opt!=  null)  {  opt  =  option.trim();  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(opt!=  null)  {  opt  =  option.trim();  }	  if(opt    ==    null)    {    opt    =    token.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
182	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.t;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.t;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  null  :  opt.t;	  return(opt    ==    null)?    null    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
183	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(opt))  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasLongOption(opt))  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
184	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(opt))  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasLongOption(opt))  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
185	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
187	[BUG]  [BUGGY]  return  options.getLongOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(opt,  value);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
188	[BUG]  [BUGGY]  return  options.getLongOption(opt,  token,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  token,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongOption(opt,  token,  value);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
189	[BUG]  [BUGGY]  return(this.option  ==  null)?  this.option  :  opt;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  this.option  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option  ==  null)?  this.option  :  opt;	  return(opt    ==    null)?    this.option    :    option;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
190	[BUG]  [BUGGY]  return  opt.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  token.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  token.length());	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
191	[BUG]  [BUGGY]  return  options.getIntOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getIntOption(opt,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getIntOption(opt,  token);	  return    options.getIntOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
192	[BUG]  [BUGGY]  options.addOption(opt,  options.getLongPrefix(opt));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(opt,  options.getLongPrefix(opt));  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.addOption(opt,  options.getLongPrefix(opt));	  return    options.getLongPrefix(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
193	[BUG]  [BUGGY]  opt  =  t.substring(i,  i)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(i,  i)+  1;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(i,  i)+  1;	  opt    =    t.substring(0,    i)+    1;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
194	[BUG]  [BUGGY]  return  options.getOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(opt,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getOption(opt,  token);	  return    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
195	[BUG]  [BUGGY]  return  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(option);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getOption(option);	  return    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
196	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  option.toString();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  null  :  option.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(option  ==  null)?  null  :  option.toString();	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
197	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
198	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
199	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  this.option;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  null  :  this.option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt!=  null)?  null  :  this.option;	  return(this.option!=    null)?    null    :    this.option;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
200	[BUG]  [BUGGY]  OptOption  opt  =  options.getOption(token).trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  options.getOption(token).trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  options.getOption(token).trim();	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
201	[BUG]  [BUGGY]  OptOption  opt  =  options.trim(token);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  options.trim(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  options.trim(token);	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
202	[BUG]  [BUGGY]  if(options.hasLongOption(prefix))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(prefix))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasLongOption(prefix))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
203	[BUG]  [BUGGY]  opt  =  option.substring(0,  i)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  option.substring(0,  i)+  1;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  option.substring(0,  i)+  1;	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
204	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
205	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(opt))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasLongOption(opt))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
206	[BUG]  [BUGGY]  return  opt.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  opt.substring(0,  i);	  return    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
207	[BUG]  [BUGGY]  option  =  options.getOption(option,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.getOption(option,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	option  =  options.getOption(option,  token);	  option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
208	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(opt))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasLongOption(opt))  {  if(opt!=  null)  {  for(int  i  =  0;  i  <  options.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
209	[BUG]  [BUGGY]  options.put(prefix,  option);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.put(prefix,  option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	options.put(prefix,  option);	  options.put(prefix,    opt);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
210	[BUG]  [BUGGY]  opt  =  options.getOption(value  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getOption(value  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getOption(value  +  1);	  opt    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
211	[BUG]  [BUGGY]  return  prefix.substring(0,  prefix.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  prefix.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.substring(0,  prefix.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  2);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  2);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  2);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  opt  =  options.getOption(opt);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  i++)  {  opt  =  options.getOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  i++)  {  opt  =  options.getOption(opt);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    opt    =    options.getOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
214	[BUG]  [BUGGY]  return(this.option  ==  null)?  null  :  opt;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  null  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option  ==  null)?  null  :  opt;	  return(this.option    ==    null)?    null    :    this.option;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
215	[BUG]  [BUGGY]  opt  =  value;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  value;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  value;	  opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
216	[BUG]  [BUGGY]  return  option.toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.toString()  + "n ";  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.toString()  + "n ";	  return    option.toString();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
217	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  null  :  opt.substring(0,  i);	  return(opt    ==    null)?    null    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
218	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  null  :  opt.substring(1);	  return(opt    ==    null)?    null    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
219	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  opt  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  opt  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  opt  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasLongOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
220	[BUG]  [BUGGY]  return  this.currentToken.trim();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  this.currentToken.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  this.currentToken.trim();	  return    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
221	[BUG]  [BUGGY]  opt  =  t.trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.trim();	  opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
222	[BUG]  [BUGGY]  return  options.getIntPrefix(opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getIntPrefix(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getIntPrefix(opt);	  return    options.getLongPrefix(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
223	[BUG]  [BUGGY]  return  options.getLongValue(opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongValue(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongValue(opt);	  return    options.getLongPrefix(prefix);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
224	[BUG]  [BUGGY]  return(this.option!=  null)?  this.option  :  option;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option!=  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option!=  null)?  this.option  :  option;	  return(opt!=    null)?    this.option    :    option;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
225	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(token);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasOption(opt))  {  return  options.getLongOption(token);  }	  return    options.getLongOption(token);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
226	[BUG]  [BUGGY]  while(options.hasOption(opt))  {  return  options.getLongOption(opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(opt))  {  return  options.getLongOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(opt))  {  return  options.getLongOption(opt);	  if(options.hasLongOption(prefix))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
227	[BUG]  [BUGGY]  return  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(currentToken);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getOption(currentToken);	  return    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
228	[BUG]  [BUGGY]  return(this.option  ==  null)?  token  :  this.option;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  token  :  this.option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option  ==  null)?  token  :  this.option;	  return(opt    ==    null)?    this.option    :    token;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
229	[BUG]  [BUGGY]  return  option.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.substring(0,  i);	  return    option.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
230	[BUG]  [BUGGY]  return  option.substring(0,  t.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.substring(0,  t.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  option.substring(0,  t.length()  -  1);	  return    option.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
231	[BUG]  [BUGGY]  return  options.getLongPrefix(opt,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongPrefix(opt,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  options.getLongPrefix(opt,  token);	  return    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
232	[BUG]  [BUGGY]  opt  =  t.substring(0,  i  *  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(0,  i  *  2);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  t.substring(0,  i  *  2);	  opt    =    t.substring(0,    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
233	[BUG]  [BUGGY]  return(this.option  ==  null)?  null  :  this.option  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  null  :  this.option  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(this.option  ==  null)?  null  :  this.option  +  1;	  return(this.option    ==    null)?    null    :    this.option;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
234	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  currentToken  =  options.getOption(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  currentToken  =  options.getOption(token);	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
235	[BUG]  [BUGGY]  opt  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.get(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.get(option);	  opt    =    options.get(prefix);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
236	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(t,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	Option  option  =  options.getOption(t,  token);	  Option    option    =    options.getOption(prefix,    token);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
237	[BUG]  [BUGGY]  opt  =  options.getLongOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.getLongOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	opt  =  options.getLongOption(token);	  opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
238	[BUG]  [BUGGY]  return  prefix.substring(0,  token.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  token.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  prefix.substring(0,  token.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
239	[BUG]  [BUGGY]  return  t.substring(0,  prefix.length());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  prefix.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(0,  prefix.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
240	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  opt.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  opt.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  this  :  opt.substring(0,  i);	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
241	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
242	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  opt  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  opt  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  opt  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
243	[BUG]  [BUGGY]  return(opt!=  null)?  t  :  token;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  t  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt!=  null)?  t  :  token;	  return    t;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
244	[BUG]  [BUGGY]  return(opt  ==  null)?  t  :  token;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  t  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  t  :  token;	  return    t;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
245	[BUG]  [BUGGY]  return  t.substring(i  +  1,  opt.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(i  +  1,  opt.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(i  +  1,  opt.length());	  return    t;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
246	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
247	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
248	[BUG]  [BUGGY]  OptOption  opt  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  OptOption  opt  =  options.getOption(opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	OptOption  opt  =  options.getOption(opt);	  OptOption    opt    =    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
249	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
250	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
251	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
252	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
253	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1,  expectedOpts.size());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1,  expectedOpts.size());  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1,  expectedOpts.size());  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
254	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1,  expectedOpts.size()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1,  expectedOpts.size()  -  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	For(int  i  =  expectedOpts.size()  -  1;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1,  expectedOpts.size()  -  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
255	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  token;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(opt  ==  null)?  this  :  token;	  return    this.currentToken;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
256	[BUG]  [BUGGY]  return  token.substring(0,  t.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  t.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  token.substring(0,  t.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
257	[BUG]  [BUGGY]  return  t.substring(0,  opt.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  opt.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(0,  opt.length());	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
258	[BUG]  [BUGGY]  return(token!=  null)?  option  :  toString();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  option  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return(token!=  null)?  option  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
259	[BUG]  [BUGGY]  return  t.substring(0,  i).trim();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  i).trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	return  t.substring(0,  i).trim();	  return    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
260	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
261	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  continue	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
262	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  options.size();  ++i)  {  Option  option  =  options.getOption(option);  if(option.hasOption(option))  {  continue;  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    options.size();    ++i)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
263	[BUG]  [BUGGY]  option  =  options.getOption(currentToken,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.getOption(currentToken,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	option  =  options.getOption(currentToken,  token);	  option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
264	[BUG]  [BUGGY]  option  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  t.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	option  =  t.substring(0,  i);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
265	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
266	[BUG]  [BUGGY]  while(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(opt))  {  opt  =  t.substring(0,  i);	  while(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
267	[BUG]  [BUGGY]  while(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  while(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	while(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }	  while(options.hasOption(opt))    {    opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
