bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   ":   ");  int  pos  =  token.indexOf( ":   ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   ":   ");  int  pos  =  token.indexOf( ":   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   ":   ");    int  pos  =  token.indexOf( ":   ");	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	11	None	add
2	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   ":   ");  int  pos  =  token.indexOf( ".: ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   ":   ");  int  pos  =  token.indexOf( ".: ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   ":   ");    int  pos  =  token.indexOf( ".: ");	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	11	None	add
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token)+  1;	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  1);  [CE]  cannot  find  symbol  pos  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token  +  1);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token  +  1);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  cannot  find  symbol  pos	3	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value);  [CE]  cannot  find  symbol  value  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token,  value);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  value);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  cannot  find  symbol  value	3	None	replace
6	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t);  [CE]  cannot  find  symbol  t  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(t);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(t);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  cannot  find  symbol  t	17	None	replace
7	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  value);  [CE]  cannot  find  symbol  value  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(token,  value);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  value);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  cannot  find  symbol  value	17	None	replace
8	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  true);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(token,  true);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  true);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "=? ");  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	Integer  pos  =  token.indexOf( "=? ");	      Integer    pos    =    token.indexOf(   "=   ");    	compilable	  [FE]  AssertionError  	5	1	replace
10	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=? ");  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "=? ");  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=? ");	      Integer    pos    =    token.indexOf(   "=   ");    	compilable	  [FE]  AssertionError  	5	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "= ".length());  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	Integer  pos  =  token.indexOf( "= ".length());	      Integer    pos    =    token.indexOf(   "=   ");    	compilable	  [FE]  AssertionError  	5	1	replace
12	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "= ".length());  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "= ".length());  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "= ".length());	      Integer    pos    =    token.indexOf(   "=   ");    	compilable	  [FE]  AssertionError  	5	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  1);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	Integer  pos  =  token.indexOf( "=   ",  1);	      Integer    pos    =    token.indexOf(   "=   ");    	compilable	  [FE]  AssertionError  	5	1	replace
14	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  1);  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  1);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=   ",  1);	      Integer    pos    =    token.indexOf(   "=   ");    	compilable	  [FE]  AssertionError  	5	1	replace
15	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( "n   ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( "n   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "n   ");    int  pos  =  token.indexOf( "n   ");	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	13	None	add
16	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( ".n   ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( ".n   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "n   ");    int  pos  =  token.indexOf( ".n   ");	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	13	None	add
17	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( ",n   ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( ",n   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "n   ");    int  pos  =  token.indexOf( ",n   ");	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	13	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.lastIndexOf( "- ");	  int    pos    =    token.lastIndexOf(   "=   ");    	compilable	  [FE]  AssertionError  	8	1	replace
19	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ");	  int    pos    =    token.lastIndexOf(   "=   ");    	compilable	  [FE]  AssertionError  	8	1	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "n ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.lastIndexOf( "n ");	  int    pos    =    token.lastIndexOf(   "=   ");    	compilable	  [FE]  AssertionError  	8	1	replace
21	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "n ");  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "n ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "n ");	  int    pos    =    token.lastIndexOf(   "=   ");    	compilable	  [FE]  AssertionError  	8	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.lastIndexOf( "= ".length());	  int    pos    =    token.lastIndexOf(   "=   ");    	compilable	  [FE]  AssertionError  	8	1	replace
23	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "= ".length());	  int    pos    =    token.lastIndexOf(   "=   ");    	compilable	  [FE]  AssertionError  	8	1	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	        if(token.startsWith(   "-   "))    {    return    false;    }    if(token.startsWith( "-   "))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	1	add
25	[BUG]  [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        if(token.startsWith(   "-   "))    {    return    false;    }    if(token.startsWith( "-   "))  {  return  false;  }	  	compilable	  [FE]  AssertionError  	22	1	add
26	[BUG]  [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( ".-   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( ".-   "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        if(token.startsWith(   "-   "))    {    return    false;    }    if(token.startsWith( ".-   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
27	[BUG]  [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( ",-   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      if(token.startsWith(   "-   "))  {  return  false;  }  if(token.startsWith( ",-   "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        if(token.startsWith(   "-   "))    {    return    false;    }    if(token.startsWith( ",-   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
28	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
29	[BUG]  [BUGGY]  ||  token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  ||  token.startsWith( "-   "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||  token.startsWith( "-   "))  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
30	[BUG]  [BUGGY]  if(!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(!token.startsWith( "- "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "- "))  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
31	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  2)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "- ")||  token.length()  ==  2)  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
32	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( "=   ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( "=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ");    int  pos  =  token.lastIndexOf( "=   ");	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
33	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( ".=   ");  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( ".=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ");    int  pos  =  token.lastIndexOf( ".=   ");	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
34	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf('=');  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf('=');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ");    int  pos  =  token.lastIndexOf('=');	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
35	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( ",=   ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( ",=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ");    int  pos  =  token.lastIndexOf( ",=   ");	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
36	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-   ");  int  pos  =  token.indexOf( "-   ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-   ");  int  pos  =  token.indexOf( "-   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-   ");    int  pos  =  token.indexOf( "-   ");	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
37	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-   ");  int  pos  =  token.indexOf( ".-   ");  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-   ");  int  pos  =  token.indexOf( ".-   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-   ");    int  pos  =  token.indexOf( ".-   ");	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
38	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( "-=   ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( "-=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-=   ");    int  pos  =  token.indexOf( "-=   ");	  	non-compiled	[CE]  illegal  start  of  type	15	None	add
39	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( ".-=   ");  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( ".-=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-=   ");    int  pos  =  token.indexOf( ".-=   ");	  	non-compiled	[CE]  illegal  start  of  type	15	None	add
40	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  Integer  pos  =  token.indexOf( "-=   ");  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  Integer  pos  =  token.indexOf( "-=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-=   ");    Integer  pos  =  token.indexOf( "-=   ");	  	non-compiled	[CE]  illegal  start  of  type	15	None	add
41	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( ",-=   ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( ",-=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-=   ");    int  pos  =  token.indexOf( ",-=   ");	  	non-compiled	[CE]  illegal  start  of  type	15	None	add
42	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-= ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "-= ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "-= ");	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
43	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  1;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ")+  1;	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ".length());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- ".length());  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ".length());	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  getLongPrefix(token)+  1;  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token)+  1;	      Integer    pos    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos));  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos));  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  pos));	      Integer    pos    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token).intValue();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  getLongPrefix(token).intValue();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token).intValue();	      Integer    pos    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  currentOption.getOptions();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  currentOption.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  Option  options  =  token.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  token.getOptions();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  token.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  Option  option  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  currentOption.getOptions();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  currentOption.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(1));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  options.getOption(token.substring(1));  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(1));	      Integer    pos    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
53	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token).intValue();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  options.getOption(token).intValue();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token).intValue();	      Integer    pos    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  options.getOption(token)+  1;  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token)+  1;	      Integer    pos    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
55	[BUG]  [BUGGY]      Option  option  =  options.getOption(token);  Option  option  =  options.getOption(token);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      Option  option  =  options.getOption(token);  Option  option  =  options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        Option    option    =    options.getOption(token);    Option  option  =  options.getOption(token);	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
56	[BUG]  [BUGGY]      Option  option  =  options.getOption(token);  Option  options  =  options.getOption(token);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      Option  option  =  options.getOption(token);  Option  options  =  options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        Option    option    =    options.getOption(token);    Option  options  =  options.getOption(token);	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
57	[BUG]  [BUGGY]      Option  option  =  options.getOption(token);  Options  option  =  options.getOption(token);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      Option  option  =  options.getOption(token);  Options  option  =  options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        Option    option    =    options.getOption(token);    Options  option  =  options.getOption(token);	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
58	[BUG]  [BUGGY]      Option  option  =  options.getOption(token);  option  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      Option  option  =  options.getOption(token);  option  =  options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        Option    option    =    options.getOption(token);    option  =  options.getOption(token);	  	non-compiled	[CE]  <identifier>  expected	2	None	add
59	[BUG]  [BUGGY]      Option  option  =  options.getOption(token);  Options  options  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]      Option  option  =  options.getOption(token);  Options  options  =  options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	        Option    option    =    options.getOption(token);    Options  options  =  options.getOption(token);	  	non-compiled	[CE]  <identifier>  expected	2	None	add
60	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf(   "+   ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf(   "+   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "+   ");    int  pos  =  token.indexOf(   "+   ");	  	non-compiled	[CE]  <identifier>  expected	19	None	add
61	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf(   "+ "));  [CE]  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf(   "+ "));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "+   ");    int  pos  =  token.indexOf(   "+ "));	  	non-compiled	[CE]  	19	None	add
62	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf(   "+ ".);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf(   "+ ".);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "+   ");    int  pos  =  token.indexOf(   "+ ".);	  	non-compiled	[CE]  <identifier>  expected	19	None	add
63	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "= ".length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "= ".length());  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "= ".length());	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=   ",  0);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "=   ",  0);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "=   ",  0);	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
65	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( ": ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ": ");	  int    pos    =    token.indexOf(   ":   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':');  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(':');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf(':');	  int    pos    =    token.indexOf(   ":   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(token).intValue();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =(Integer)options.getOption(token).intValue();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(token).intValue();	      Integer    pos    =(Integer)options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(value);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =(Integer)options.getOption(value);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(value);	      Integer    pos    =(Integer)options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  Integer  pos  =(int)options.getOption(token);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =(int)options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getOption(token);	      Integer    pos    =(Integer)options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token));  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  1);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- "  +  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  1);	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "null ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "null ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "null ");	  int    pos    =    token.indexOf(   "n   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "+ ");  [CE]  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "+ ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "+ ");	  int    pos    =    token.indexOf(   "+   ");    	non-compiled	[CE]  	20	None	replace
74	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+');  [CE]  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('+');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('+');	  int    pos    =    token.indexOf(   "+   ");    	non-compiled	[CE]  	20	None	replace
75	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf('=');  [CE]  [FE]              AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf('=');  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf('=');	      Integer    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  	5	None	replace
76	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  0);  [CE]  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  0);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=   ",  0);	      Integer    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  	5	None	replace
77	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=? ");  [CE]  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "=? ");  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "=? ");	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  	1	None	replace
78	[BUG]  [BUGGY]  int  pos  =  token.indexOf('=');  [CE]  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('=');  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('=');	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  	1	None	replace
79	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( "n "));  [CE]  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf( "n "));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "n   ");    int  pos  =  token.indexOf( "n "));	  	non-compiled	[CE]  	13	None	add
80	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+')+  1;  [CE]  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('+')+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('+')+  1;	  int    pos    =    token.indexOf(   "+   ");    	non-compiled	[CE]  	20	None	replace
81	[BUG]  [BUGGY]  Option  options  =  option.getOptions(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  option.getOptions(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  option.getOptions(token);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.getOptions(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOptions(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptions(token);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
83	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(key);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =(Integer)options.getOption(key);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(key);	      Integer    pos    =(Integer)options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( "-= "));  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf( "-= "));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-=   ");    int  pos  =  token.indexOf( "-= "));	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
85	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token,  value);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  options.getOption(token,  value);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token,  value);	      Integer    pos    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
86	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ")+  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- ")+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ")+  1;	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( "= "));  [CE]  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf( "= "));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ");    int  pos  =  token.lastIndexOf( "= "));	  	non-compiled	[CE]  	7	None	add
88	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf('+');  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "+   ");  int  pos  =  token.indexOf('+');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "+   ");    int  pos  =  token.indexOf('+');	  	non-compiled	[CE]  <identifier>  expected	19	None	add
89	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions();	      Option    options    =    option.getOptions();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
90	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-')+  1;	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
91	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-');  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('-');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-');	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
92	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=? ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "=? ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "=? ");	  int    pos    =    token.lastIndexOf(   "=   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
93	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  1)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  1)  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "- ")||  token.length()  ==  1)  {  return  true;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
94	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(1));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(1));  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(1));	      Integer    pos    =    getLongPrefix(token);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.trim());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  getLongPrefix(token.trim());  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.trim());	      Integer    pos    =    getLongPrefix(token);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
96	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  opt);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(token,  opt);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  opt);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(token);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOptionValue(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptionValue(token);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
98	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionValue(token);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  options.getOptionValue(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionValue(token);	      Integer    pos    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
99	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionPosition(token);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =  options.getOptionPosition(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionPosition(token);	      Integer    pos    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
100	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-   ");  int  pos  =  token.indexOf('-');  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-   ");  int  pos  =  token.indexOf('-');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-   ");    int  pos  =  token.indexOf('-');	  	non-compiled	[CE]  <identifier>  expected	9	None	add
101	[BUG]  [BUGGY]  if(token.startsWith( "= "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(token.startsWith( "= "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "= "))  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
102	[BUG]  [BUGGY]  if(!token.startsWith( "= "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(!token.startsWith( "= "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "= "))  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
103	[BUG]  [BUGGY]  if(!token.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(!token.equals( "- "))  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.equals( "- "))  {  return  false;  }	      if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
104	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(token);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOptionValue(token);	      Integer    pos    =(Integer)options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf('n');  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "n   ");  int  pos  =  token.indexOf('n');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "n   ");    int  pos  =  token.indexOf('n');	  	non-compiled	[CE]  <identifier>  expected	13	None	add
106	[BUG]  [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf('-=   ");  [CE]  unclosed  character  literal  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(   "-=   ");  int  pos  =  token.indexOf('-=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.indexOf(   "-=   ");    int  pos  =  token.indexOf('-=   ");	  	non-compiled	[CE]  unclosed  character  literal	15	None	add
107	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".- ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( ".- ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ".- ");	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
108	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-');  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf('-');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-');	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
109	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf('=   ");  [CE]  unclosed  character  literal  [FE]    AssertionError    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ");  int  pos  =  token.lastIndexOf('=   ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ");    int  pos  =  token.lastIndexOf('=   ");	  	non-compiled	[CE]  unclosed  character  literal	7	None	add
