bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  token);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  token);	  Option    options    =    options.getOptions(token,    opt);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
2	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  expectedOpts);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  expectedOpts);	  Option    options    =    options.getOptions(token,    opt);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
3	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  currentOption);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  currentOption);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  currentOption);	  Option    options    =    options.getOptions(token,    opt);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
4	[BUG]  [BUGGY]  ||!token.equals( "-   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||!token.equals( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||!token.equals( "-   "))  {  return  false;  }	  if(!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
5	[BUG]  [BUGGY]  if(!token.equals( "- ")||  token.length()  ==  1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.equals( "- ")||  token.length()  ==  1)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.equals( "- ")||  token.length()  ==  1)  {  return  false;  }	  if(!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
6	[BUG]  [BUGGY]  if(token.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.equals( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.equals( "- "))  {  return  false;  }	  if(!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
7	[BUG]  [BUGGY]  if(!token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
8	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.length()!=  1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.startsWith( "- ")||  token.length()!=  1)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "- ")||  token.length()!=  1)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
9	[BUG]  [BUGGY]  Integer  pos  =(int)options.getOption(key);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getOption(key);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getOption(key);	  Integer    pos    =(Integer)options.getOption(key);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  token);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  token);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  currentToken);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  currentToken);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  currentToken);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  expectedOpts);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  expectedOpts);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  t);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  t);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  t);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  1);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  1);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  <identifier>  expected	92	None	replace
15	[BUG]  [BUGGY]  int  pos  =  token.indexOf('n',  1);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('n',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('n',  1);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  <identifier>  expected	105	None	replace
16	[BUG]  [BUGGY]  int  pos  =  token.indexOf('n');  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('n');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('n');	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  <identifier>  expected	105	None	replace
17	[BUG]  [BUGGY]  int  pos  =  token.indexOf('n')+  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('n')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('n')+  1;	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  <identifier>  expected	105	None	replace
18	[BUG]  [BUGGY]  int  pos  =  token.indexOf('n',  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('n',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('n',  0);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  <identifier>  expected	105	None	replace
19	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ".length());  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ".length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
20	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "..length()  +  1);  [CE]  unclosed  string  literal  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "..length()  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "..length()  +  1);	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
21	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "n ".length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "n ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "n ".length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
22	[BUG]  [BUGGY]  Integer  pos  =(int)options.getOption(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getOption(value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getOption(value);	  Integer    pos    =(Integer)options.getOption(value);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
23	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/.- ");  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "/.- ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "/.- ");	  int    pos    =    token.lastIndexOf(   ".-   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
24	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  token);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(t,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(t,  token);	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  Option  options  =  options.getOptions(value);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(value);	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ".: ");  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ".: ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ".: ");	  int    pos    =    token.indexOf(       ":       ");    int    pos    =    token.indexOf(   ".:   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  0);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-',  0);	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
28	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-',  1);	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
29	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token).intValue()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token).intValue()  +  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token).intValue()  +  1;	  Integer    pos    =    options.getOption(token).intValue();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
30	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token).longValue();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token).longValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token).longValue();	  Integer    pos    =    options.getOption(token).intValue();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
31	[BUG]  [BUGGY]  int  pos  =  options.getOption(token).intValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  options.getOption(token).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  options.getOption(token).intValue();	  Integer    pos    =    options.getOption(token).intValue();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
32	[BUG]  [BUGGY]  Options  options  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Options  options  =  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Options  options  =  options.getOption(token);	          Option    option    =    options.getOption(token);    Options    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
33	[BUG]  [BUGGY]  Option  options  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOption(token);	          Option    option    =    options.getOption(token);    Options    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
34	[BUG]  [BUGGY]  option  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  option  =  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	option  =  options.getOption(token);	          Option    option    =    options.getOption(token);    Options    options    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
35	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  token.length()  -  1));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  token.length()  -  1));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  token.length()  -  1));	  Integer    pos    =    getLongPrefix(token.substring(1));    	non-compiled	[CE]  <identifier>  expected	94	None	replace
36	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  token.length()));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  token.length()));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  token.length()));	  Integer    pos    =    getLongPrefix(token.substring(1));    	non-compiled	[CE]  <identifier>  expected	94	None	replace
37	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(2));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(2));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(2));	  Integer    pos    =    getLongPrefix(token.substring(1));    	non-compiled	[CE]  <identifier>  expected	94	None	replace
38	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(1),  token.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(1),  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(1),  token.length());	  Integer    pos    =    getLongPrefix(token.substring(1));    	non-compiled	[CE]  <identifier>  expected	94	None	replace
39	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ",null ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ",null ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ",null ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ",n       ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ", ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ", ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ", ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ",n       ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- "  +  1);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- "  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- "  +  1);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
42	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  2);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  2);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  2);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
43	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ".);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": ".);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ": ".);	  int    pos    =    token.indexOf(       ":       ");    int    pos    =    token.indexOf(   ":       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ",  0);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ": ",  0);	  int    pos    =    token.indexOf(       ":       ");    int    pos    =    token.indexOf(   ":       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  Integer  pos  =  token.lastIndexOf('=');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.lastIndexOf('=');  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.lastIndexOf('=');	  Integer    pos    =    token.indexOf('=');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
46	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "null ");  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "null ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "null ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   "n   "));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
47	[BUG]  [BUGGY]  ||!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||!token.startsWith( "-   "))  {  return  false;  }	  if(!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
48	[BUG]  [BUGGY]  &&  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  &&  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	&&  token.startsWith( "- "))  {  return  false;  }	  if(!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
49	[BUG]  [BUGGY]  Integer  pos  =(int)options.getOption(token).intValue();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getOption(token).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getOption(token).intValue();	  Integer    pos    =(Integer)options.getOption(token).intValue();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
50	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(token).longValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOption(token).longValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(token).longValue();	  Integer    pos    =(Integer)options.getOption(token).intValue();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
51	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(token).intValue()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOption(token).intValue()  +  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(token).intValue()  +  1;	  Integer    pos    =(Integer)options.getOption(token).intValue();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
52	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('=');  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('=');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('=');	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf('=');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
53	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('=',  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('=',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('=',  1);	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf('=');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
54	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('=')+  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('=')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('=')+  1;	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf('=');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
55	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".= ");  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ".= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ".= ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ".=       ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
56	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "-= ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "-= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "-= ");	  int    pos    =    token.indexOf(       "-=       ");    Integer    pos    =    token.indexOf(   "-=       ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
57	[BUG]  [BUGGY]  if(!token.startsWith( "- ")||  token.length()  ==  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "- ")||  token.length()  ==  2)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "- ")||  token.length()  ==  2)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
58	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getMatchingOptions(token);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getMatchingOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getMatchingOptions(token);	  Integer    pos    =(Integer)options.getOptionValue(token);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
59	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(token).intValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(token).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOptionValue(token).intValue();	  Integer    pos    =(Integer)options.getOptionValue(token);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
60	[BUG]  [BUGGY]  Integer  pos  =(int)options.getOptionValue(token);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getOptionValue(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getOptionValue(token);	  Integer    pos    =(Integer)options.getOptionValue(token);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
61	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=?   ");  Integer  pos  =  token.indexOf( "=?   ");  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=?   ");  Integer  pos  =  token.indexOf( "=?   ");  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=?   ");    Integer  pos  =  token.indexOf( "=?   ");	  	non-compiled	[CE]  <identifier>  expected	9	None	add
62	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=?   ");  Integer  pos  =  token.indexOf( ".=?   ");  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=?   ");  Integer  pos  =  token.indexOf( ".=?   ");  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=?   ");    Integer  pos  =  token.indexOf( ".=?   ");	  	non-compiled	[CE]  <identifier>  expected	9	None	add
63	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=?   ");  int  pos  =  token.indexOf( "=?   ");  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=?   ");  int  pos  =  token.indexOf( "=?   ");  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=?   ");    int  pos  =  token.indexOf( "=?   ");	  	non-compiled	[CE]  <identifier>  expected	9	None	add
64	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(options.getMatchingOptions(token)!=  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }	          Option    option    =    options.getOption(token);    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
65	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(options.getMatchingOptions(token)  ==  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }	          Option    option    =    options.getOption(token);    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
66	[BUG]  [BUGGY]  if(options.getMatchingOptions(token).isEmpty())  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token).isEmpty())  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(options.getMatchingOptions(token).isEmpty())  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }	          Option    option    =    options.getOption(token);    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
67	[BUG]  [BUGGY]  Integer  pos  =  options.getMatchingOptions(token);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getMatchingOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getMatchingOptions(token);	  Integer    pos    =    options.getOptionPosition(token);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
68	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionPosition(token)+  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOptionPosition(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionPosition(token)+  1;	  Integer    pos    =    options.getOptionPosition(token);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
69	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionPosition(1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOptionPosition(1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionPosition(1);	  Integer    pos    =    options.getOptionPosition(token);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
70	[BUG]  [BUGGY]  Integer  pos  =(int)options.getMatchingOptions(token);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getMatchingOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getMatchingOptions(token);	  Integer    pos    =(int)options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
71	[BUG]  [BUGGY]  Integer  pos  =(int)options.getLongPrefix(token);  [CE]  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getLongPrefix(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getLongPrefix(token);	  Integer    pos    =(int)options.getOption(token);    	non-compiled	[CE]  	69	None	replace
72	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "));  [CE]  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "));	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   "-=   "));    	non-compiled	[CE]  	84	None	replace
73	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "-   ");  int  pos  =  token.lastIndexOf( "-   ");  [CE]  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "-   ");  int  pos  =  token.lastIndexOf( "-   ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "-   ");    int  pos  =  token.lastIndexOf( "-   ");	  	non-compiled	[CE]  	18	None	add
74	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "-   ");  int  pos  =  token.lastIndexOf( ".- ");  [CE]  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "-   ");  int  pos  =  token.lastIndexOf( ".- ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "-   ");    int  pos  =  token.lastIndexOf( ".- ");	  	non-compiled	[CE]  	18	None	add
75	[BUG]  [BUGGY]  if(!token.startsWith( "- ")||  token.length()  ==  1)  {  return  true;  }  [CE]  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "- ")||  token.length()  ==  1)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "- ")||  token.length()  ==  1)  {  return  true;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    1)    {    return    true;    }    	non-compiled	[CE]  	93	None	replace
76	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  2)  {  return  true;  }  [CE]  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.startsWith( "- ")||  token.length()  ==  2)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "- ")||  token.length()  ==  2)  {  return  true;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    1)    {    return    true;    }    	non-compiled	[CE]  	93	None	replace
77	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token);  [CE]  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  currentOption.getOption(token);	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  	48	None	replace
78	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(token);  [CE]  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  currentOption.getOptions(token);	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  	48	None	replace
79	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  token.length());  [CE]  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  token.length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  	44	None	replace
80	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ").length()  +  1;  [CE]  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ").length()  +  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ").length()  +  1;	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  	44	None	replace
81	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  token.length());  [CE]  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ",  token.length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  	44	None	replace
82	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".);  [CE]  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= ".);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "= ".);	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   "=       ");    	non-compiled	[CE]  	32	None	replace
83	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  token.length()  -  1));  [CE]  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  token.length()  -  1));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(0,  token.length()  -  1));	  Integer    pos    =    options.getOption(token.substring(1));    	non-compiled	[CE]  	52	None	replace
84	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  token.length()));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  token.length()));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(0,  token.length()));	  Integer    pos    =    options.getOption(token.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
85	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(2));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token.substring(2));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(2));	  Integer    pos    =    options.getOption(token.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
86	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(1),  token.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token.substring(1),  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(1),  token.length());	  Integer    pos    =    options.getOption(token.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
87	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token)+  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token)+  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  getLongPrefix(token)+  1);	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
88	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getPrefix(token));  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  getPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
89	[BUG]  [BUGGY]  int  pos  =  token.indexOf(getLongPrefix(token));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(getLongPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf(getLongPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
90	[BUG]  [BUGGY]  ||  token.startsWith( "=   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||  token.startsWith( "=   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||  token.startsWith( "=   "))  {  return  false;  }	  if(token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
91	[BUG]  [BUGGY]  if(token.startsWith( "=   ")||  token.startsWith( "=   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.startsWith( "=   ")||  token.startsWith( "=   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "=   ")||  token.startsWith( "=   "))  {  return  false;  }	  if(token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
92	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('+')+  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('+')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('+')+  1;	  int    pos    =    token.indexOf('+')+    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
93	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+')+  2;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('+')+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('+')+  2;	  int    pos    =    token.indexOf('+')+    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
94	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+')/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('+')/  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('+')/  1;	  int    pos    =    token.indexOf('+')+    1;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
95	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+',  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('+',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('+',  1);	  int    pos    =    token.indexOf(       "+       ");    int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
96	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('+');  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('+');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('+');	  int    pos    =    token.indexOf(       "+       ");    int    pos    =    token.indexOf('+');    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
97	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "/.* ");  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "/.* ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "/.* ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   "n       ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  token.length());  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-',  token.length());	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf('-=       ");    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
99	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "= ".);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "= ".);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "= ".);	  Integer    pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=? ",  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "=? ",  0);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=? ",  0);	  Integer    pos    =    token.indexOf(   "=       ",    0);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
101	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-')+  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-')+  1;	  int    pos    =    token.indexOf('-')+    1;    	non-compiled	[CE]  <identifier>  expected	90	None	replace
102	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')+  2;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-')+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-')+  2;	  int    pos    =    token.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
103	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-')/  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-')/  1;	  int    pos    =    token.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
104	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  0);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "= ",  0);	  int    pos    =    token.indexOf(   "=       ",    0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
105	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=   ",  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=   ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "=   ",  1);	  int    pos    =    token.indexOf(   "=       ",    0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
106	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=? ",  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=? ",  0);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "=? ",  0);	  int    pos    =    token.indexOf(   "=       ",    0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
107	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  currentOption.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  currentOption.getOption(token);	  Option    option    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
108	[BUG]  [BUGGY]  Option  option  =  token.getOptions();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  token.getOptions();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  token.getOptions();	  Option    option    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
109	[BUG]  [BUGGY]  Option  option  =  opt.getOptions();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  opt.getOptions();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  opt.getOptions();	  Option    option    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
110	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  2);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token  +  2);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token  +  2);	  Option    option    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  3);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token  +  3);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token  +  3);	  Option    option    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	                if(token.startsWith(       "-       "))        {        return        false;        }        if(token.startsWith(   "-       "))    {    return    false;    }    if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
113	[BUG]  [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	                if(token.startsWith(       "-       "))        {        return        false;        }        if(token.startsWith(   "-       "))    {    return    false;    }    if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
114	[BUG]  [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( ".-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( ".-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	                if(token.startsWith(       "-       "))        {        return        false;        }        if(token.startsWith(   "-       "))    {    return    false;    }    if(token.startsWith( ".-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
115	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf( "n   ");  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf( "n   ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "n   ");    int  pos  =  token.lastIndexOf( "n   ");	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
116	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf( ".n   ");  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf( ".n   ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "n   ");    int  pos  =  token.lastIndexOf( ".n   ");	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
117	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf('n');  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf('n');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "n   ");    int  pos  =  token.lastIndexOf('n');	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
118	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token).intValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token).intValue()  +  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token).intValue()  +  1;	  Integer    pos    =    getLongPrefix(token).intValue();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
119	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token).longValue();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token).longValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token).longValue();	  Integer    pos    =    getLongPrefix(token).intValue();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
120	[BUG]  [BUGGY]  int  pos  =  getLongPrefix(token).intValue();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  getLongPrefix(token).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  getLongPrefix(token).intValue();	  Integer    pos    =    getLongPrefix(token).intValue();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
121	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-',  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-',  1);	  int    pos    =    token.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
122	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-',  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-',  0);	  int    pos    =    token.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
123	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-',  12);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-',  12);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-',  12);	  int    pos    =    token.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
124	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=? ",  1);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "=? ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=? ",  1);	  Integer    pos    =    token.indexOf(   "=       ",    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  2);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  2);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=   ",  2);	  Integer    pos    =    token.indexOf(   "=       ",    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
126	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=   ",  token.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=   ",  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "=   ",  token.length());	  int    pos    =    token.indexOf(   "=   ".length());    	non-compiled	[CE]  <identifier>  expected	63	None	replace
127	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  1);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ",  1);	  int    pos    =    token.lastIndexOf(   "-=   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
128	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "[-] ");  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "[-] ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "[-] ");	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   ".-=       ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
129	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token)/  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token)/  1;	  Integer    pos    =    getLongPrefix(token)+    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
130	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token)+  2;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token)+  2;	  Integer    pos    =    getLongPrefix(token)+    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
131	[BUG]  [BUGGY]  int  pos  =  getLongPrefix(token)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  getLongPrefix(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  getLongPrefix(token)+  1;	  Integer    pos    =    getLongPrefix(token)+    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
132	[BUG]  [BUGGY]  Options  option  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Options  option  =  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Options  option  =  options.getOption(token);	          Option    option    =    options.getOption(token);    Options    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
133	[BUG]  [BUGGY]  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	options.getOption(token);	          Option    option    =    options.getOption(token);    Options    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
134	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/.* "));  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "/.* "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "/.* "));	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   "=   "));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
135	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ",= ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ",= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ",= ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ",=       ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
136	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ";= ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ";= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ";= ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ",=       ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
137	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ";n ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ";n ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ";n ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ",=       ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
138	[BUG]  [BUGGY]  if(!token.startsWith( "= "))  {  if(token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "= "))  {  if(token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "= "))  {  if(token.startsWith( "-   "))  {  return  false;  }	          if(token.startsWith(       "-       "))    {    return    false;    }    if(token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
139	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(':');  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(':');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf(':');	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
140	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf(':',  0);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
141	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf(':',  1);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
142	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':')+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf(':')+  1;	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
143	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ".- ");  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ".- ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ".- ");	  int    pos    =    token.indexOf(       "-       ");    int    pos    =    token.indexOf(   ".-       ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
144	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  t);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  t);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
145	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  currentToken);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  currentToken);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
146	[BUG]  [BUGGY]  Option  option  =  options.getOption(token).getOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token).getOptions();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token).getOptions();	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
147	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(t);	  Option    option    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
148	[BUG]  [BUGGY]  Option  options  =  token.getOptions(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  token.getOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  token.getOptions(token);	  Option    options    =    token.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
149	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( "=   ",  1);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( "=   ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=       ",    1);    Integer  pos  =  token.indexOf( "=   ",  1);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
150	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( ".=   ",  1);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( ".=   ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=       ",    1);    Integer  pos  =  token.indexOf( ".=   ",  1);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
151	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( ",=   ",  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( ",=   ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=       ",    1);    Integer  pos  =  token.indexOf( ",=   ",  1);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
152	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  int  pos  =  token.indexOf( "=   ",  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  int  pos  =  token.indexOf( "=   ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=       ",    1);    int  pos  =  token.indexOf( "=   ",  1);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
153	[BUG]  [BUGGY]  Option  option  =  options.getOptions(token)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOptions(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptions(token)+  1;	  Option    option    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
154	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ")+  2;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ")+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ")+  2;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
155	[BUG]  [BUGGY]  Integer  pos  =  getIntValue(token.trim());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getIntValue(token.trim());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getIntValue(token.trim());	  Integer    pos    =    getLongPrefix(token.trim());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
156	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ",-= ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ",-= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ",-= ");	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   ",-=       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
157	[BUG]  [BUGGY]  int  pos  =  token.indexOf('+',  0);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('+',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('+',  0);	  int    pos    =    token.indexOf('+');    	non-compiled	[CE]  <identifier>  expected	74	None	replace
158	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  token.length());  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=   ",  token.length());	  Integer    pos    =    token.indexOf(   "=   ".length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
159	[BUG]  [BUGGY]  ||!token.startsWith( "=   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||!token.startsWith( "=   "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||!token.startsWith( "=   "))  {  return  false;  }	  if(!token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
160	[BUG]  [BUGGY]  if(!token.startsWith( "= ")||  token.length()  ==  1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "= ")||  token.length()  ==  1)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "= ")||  token.length()  ==  1)  {  return  false;  }	  if(!token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
161	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "+ ".length());  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "+ ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "+ ".length());	  int    pos    =    token.lastIndexOf(   "+   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
162	[BUG]  [BUGGY]  ||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||  token.startsWith( "- "))  {  return  true;  }	  ||    token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  ||  token.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||  token.equals( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	||  token.equals( "- "))  {  return  false;  }	  ||    token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
164	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)/  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token)/  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
165	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  2;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token)+  2;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
166	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)+  0;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token)+  0;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
167	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  2;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ")+  2;	  int    pos    =    token.lastIndexOf(   "-   ")+    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
168	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".- ")+  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ".- ")+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ".- ")+  1;	  int    pos    =    token.lastIndexOf(   "-   ")+    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
169	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(token)+  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOptionValue(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptionValue(token)+  1;	  Option    option    =    options.getOptionValue(token);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(token,  value);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOptionValue(token,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptionValue(token,  value);	  Option    option    =    options.getOptionValue(token);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
171	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  false);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  false);	  Option    options    =    options.getOptions(token,    true);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
172	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  true,  token);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  true,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  true,  token);	  Option    options    =    options.getOptions(token,    true);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
173	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  null);	  Option    options    =    options.getOptions(token,    true);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
174	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  Integer  pos  =  token.indexOf( "=   ".length());  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  Integer  pos  =  token.indexOf( "=   ".length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=   ".length());    Integer  pos  =  token.indexOf( "=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
175	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  Integer  pos  =  token.indexOf( ".=   ".length());  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  Integer  pos  =  token.indexOf( ".=   ".length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=   ".length());    Integer  pos  =  token.indexOf( ".=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
176	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  int  pos  =  token.indexOf( "=   ".length());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  int  pos  =  token.indexOf( "=   ".length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=   ".length());    int  pos  =  token.indexOf( "=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
177	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  Integer  pos  =  token.indexOf( ",=   ".length());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=   ".length());  Integer  pos  =  token.indexOf( ",=   ".length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=   ".length());    Integer  pos  =  token.indexOf( ",=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
178	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token,  token);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token,  token);	  Integer    pos    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
179	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token,  expectedOpts);	  Integer    pos    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
180	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token,  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token,  1);	  Integer    pos    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
181	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token,  value  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token,  value  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token,  value  +  1);	  Integer    pos    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
182	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ").length();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ").length();  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ").length();	  int    pos    =    token.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
183	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "+ "));  [CE]  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "+ "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "+ "));	  int    pos    =    token.indexOf(       "+       ");    int    pos    =    token.indexOf(       "+   "));    	non-compiled	[CE]  	61	None	replace
184	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token)/  1;	  Integer    pos    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
185	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token)+  2;	  Integer    pos    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
186	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token)-  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token)-  1;	  Integer    pos    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
187	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionValue(token)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOptionValue(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionValue(token)+  1;	  Integer    pos    =    options.getOptionValue(token);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
188	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionValue(token).intValue();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOptionValue(token).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionValue(token).intValue();	  Integer    pos    =    options.getOptionValue(token);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
189	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf( "=   ".length());  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf( "=   ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ".length());    int  pos  =  token.lastIndexOf( "=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
190	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf( ".=   ".length());  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf( ".=   ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ".length());    int  pos  =  token.lastIndexOf( ".=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
191	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf( ",=   ".length());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf( ",=   ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ".length());    int  pos  =  token.lastIndexOf( ",=   ".length());	  	non-compiled	[CE]  illegal  start  of  type	22	None	add
192	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "/.n ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "/.n ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "/.n ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ".n       ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
193	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos  +  1));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos  +  1));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  pos  +  1));	  Integer    pos    =    getLongPrefix(token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
194	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos),  token.length());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos),  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  pos),  token.length());	  Integer    pos    =    getLongPrefix(token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
195	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos)+  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  pos)+  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  pos)+  1);	  Integer    pos    =    getLongPrefix(token.substring(0,    pos));    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
196	[BUG]  [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith(  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]          if(token.startsWith(     "-     "))    {    return    false;    }    if(token.startsWith(   "-     "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith(  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	                if(token.startsWith(       "-       "))        {        return        false;        }        if(token.startsWith(   "-       "))    {    return    false;    }    if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith( "-   "))  {  return  false;  }  if(token.startsWith(	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
197	[BUG]  [BUGGY]  if(!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "- "))  {  return  true;  }	  if(!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
198	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(value,  token);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(value,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(value,  token);	  Integer    pos    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
199	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-$ ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "-$ ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "-$ ");	  int    pos    =    token.lastIndexOf(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
200	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ");  int  pos  =  token.indexOf( "- "));  [CE]  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ");  int  pos  =  token.indexOf( "- "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ");  int  pos  =  token.indexOf( "- "));	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   "n   "));    	non-compiled	[CE]  	79	None	replace
201	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ").length();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ").length();  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ").length();	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
202	[BUG]  [BUGGY]  Integer  pos  =  getIntValue(token).intValue();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getIntValue(token).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getIntValue(token).intValue();	  Integer    pos    =    getLongPrefix(token).intValue();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
203	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ",  0);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-= ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "-= ",  0);	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   "-=       ");    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
204	[BUG]  [BUGGY]  Integer  pos  =  getIntPrefix(token.trim());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getIntPrefix(token.trim());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getIntPrefix(token.trim());	  Integer    pos    =    getLongPrefix(token.trim());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
205	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  1));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  1));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(0,  1));	  Integer    pos    =    options.getOption(token.substring(1));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
206	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-'  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-'  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-'  +  1);	  int    pos    =    token.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
207	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionValue(token  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOptionValue(token  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionValue(token  +  1);	  Integer    pos    =    options.getOptionValue(token);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
208	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token).length();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token).length();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token).length();	  Integer    pos    =    options.getOption(token).intValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
209	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('=',  pos);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('=',  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('=',  pos);	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf('=       ");    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
210	[BUG]  [BUGGY]  if(!token.equals( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.equals( "- "))  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.equals( "- "))  {  return  true;  }	  if(!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
211	[BUG]  [BUGGY]  if(!token.startsWith( "= "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "= "))  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "= "))  {  return  true;  }	  if(!token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
212	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  option);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  option);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
213	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  argument);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  argument);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(token,  argument);	  Option    options    =    options.getOptions(token,    value);    	non-compiled	[CE]  not  a  statement	7	None	replace
214	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(option);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  currentOption.getOption(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  currentOption.getOption(option);	  Option    option    =    currentOption.getOptions();    	non-compiled	[CE]  not  a  statement	51	None	replace
215	[BUG]  [BUGGY]  options  =  options.getOption(token);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options  =  options.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	options  =  options.getOption(token);	          Option    option    =    options.getOption(token);    Options    options    =    options.getOption(token);    	non-compiled	[CE]  not  a  statement	59	None	replace
216	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  int  pos  =  token.lastIndexOf( "- "));  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  int  pos  =  token.lastIndexOf( "- "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "- ");  int  pos  =  token.lastIndexOf( "- "));	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   "=   "));    	non-compiled	[CE]  not  a  statement	87	None	replace
217	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  options.getOptions(option);	  Option    options    =    options.getOptions(t);    	non-compiled	[CE]  not  a  statement	6	None	replace
218	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ",  -1);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ": ",  -1);	  int    pos    =    token.indexOf(       ":       ");    int    pos    =    token.indexOf(   ".:   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
219	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ",  0);	  int    pos    =    token.indexOf(       "-       ");    int    pos    =    token.indexOf(   "-       ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
220	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(value).intValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOption(value).intValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(value).intValue();	  Integer    pos    =(Integer)options.getOption(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
221	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOption(value,  token);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOption(value,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOption(value,  token);	  Integer    pos    =(Integer)options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
222	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-n ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-n ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "-n ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ".n       ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
223	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ".next ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ".next ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ".next ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ".n       ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
224	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "+ ");  int  pos  =  token.indexOf( "+ "));  [CE]  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "+ ");  int  pos  =  token.indexOf( "+ "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "+ ");  int  pos  =  token.indexOf( "+ "));	  int    pos    =    token.indexOf(       "+       ");    int    pos    =    token.indexOf(       "+   "));    	non-compiled	[CE]  	61	None	replace
225	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ");  int  pos  =  token.indexOf( "+ "));  [CE]  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ");  int  pos  =  token.indexOf( "+ "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ");  int  pos  =  token.indexOf( "+ "));	  int    pos    =    token.indexOf(       "+       ");    int    pos    =    token.indexOf(       "+   "));    	non-compiled	[CE]  	61	None	replace
226	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-'  +  getLongPrefix(token));  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-'  +  getLongPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-'  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
227	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-null ");  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "-null ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "-null ");	  int    pos    =    token.lastIndexOf(   "null   ");    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
228	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf('=')+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf('=')+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf('=')+  1;	  Integer    pos    =    token.indexOf('=');    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
229	[BUG]  [BUGGY]  Integer  pos  =(int)options.getMatchingOption(token);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(int)options.getMatchingOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(int)options.getMatchingOption(token);	  Integer    pos    =(int)options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
230	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=   ",  -1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=   ",  -1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "=   ",  -1);	  int    pos    =    token.indexOf(   "=       ",    0);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
231	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('=')-  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('=')-  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('=')-  1;	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf('=');    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
232	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.length()  ==  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.startsWith( "- ")&&  token.length()  ==  2)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "- ")&&  token.length()  ==  2)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
233	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-- ")+  1;  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-- ")+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "-- ")+  1;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
234	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  null);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
235	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.startsWith( "= ")||  token.startsWith( "- "))  {  return  false;  }	  if(token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
236	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "..length());  [CE]  unclosed  string  literal  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "..length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "..length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
237	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length()  +  1);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length()  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "= ".length()  +  1);	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
238	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  0);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  0);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
239	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ".length());  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-= ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "-= ".length());	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   ".-=       ");    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
240	[BUG]  [BUGGY]  Option  options  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  opt.getOptions();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  options  =  opt.getOptions();	  Option    options    =    token.getOptions();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
241	[BUG]  [BUGGY]  if(options.getMatchingOptions(opt).isEmpty())  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(opt).isEmpty())  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(options.getMatchingOptions(opt).isEmpty())  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }	          Option    option    =    options.getOption(token);    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
242	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( "=   ",  2);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf(   "=     ",  1);  Integer  pos  =  token.indexOf( "=   ",  2);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer    pos    =    token.indexOf(   "=       ",    1);    Integer  pos  =  token.indexOf( "=   ",  2);	  	non-compiled	[CE]  illegal  start  of  type	13	None	add
243	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "no-params ");  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "no-params ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "no-params ");	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   "n       ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
244	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "=   ",  -1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=   ",  -1);	  Integer    pos    =    token.indexOf(   "=       ",    0);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
245	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('.');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('.');	  int    pos    =    token.lastIndexOf(   ".-   ");    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
246	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  0);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  0);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
247	[BUG]  [BUGGY]  Integer  pos  =  getIntPrefix(token)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getIntPrefix(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getIntPrefix(token)+  1;	  Integer    pos    =    getLongPrefix(token)+    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
248	[BUG]  [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getLongPrefix(token.substring(0,  1));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getLongPrefix(token.substring(0,  1));	  Integer    pos    =    getLongPrefix(token.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
249	[BUG]  [BUGGY]  Integer  pos  =  getIntPrefix(token.substring(1));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  getIntPrefix(token.substring(1));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  getIntPrefix(token.substring(1));	  Integer    pos    =    getLongPrefix(token.substring(1));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
250	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getMatchingOption(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getMatchingOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getMatchingOption(token);	  Integer    pos    =(Integer)options.getOptionValue(token);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
251	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOptionValue(value);	  Integer    pos    =(Integer)options.getOptionValue(token);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
252	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ",-1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-= ",-1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "-= ",-1);	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   ",-=       ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
253	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf( "n "));  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "n   ");  int  pos  =  token.lastIndexOf( "n "));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "n   ");    int  pos  =  token.lastIndexOf( "n "));	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
254	[BUG]  [BUGGY]  &&  token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  &&  token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	&&  token.startsWith( "- ")||  token.length()  ==  1)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
255	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",n);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",n);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ",n);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ",n       ");    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
256	[BUG]  [BUGGY]  prefix!=  null  &&  token.startsWith( "= "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  prefix!=  null  &&  token.startsWith( "= "))  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	prefix!=  null  &&  token.startsWith( "= "))  {  return  false;  }	          if(token.startsWith(       "-       "))    {    return    false;    }    if(token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
257	[BUG]  [BUGGY]  if(token.equals( "- ")||  token.length()  ==  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.equals( "- ")||  token.length()  ==  2)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.equals( "- ")||  token.length()  ==  2)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    2)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
258	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  -1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ",  -1);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   "n       ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
259	[BUG]  [BUGGY]  if(options.getMatchingOptions(option))  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(option))  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(options.getMatchingOptions(option))  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }	          Option    option    =    options.getOption(token);    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
260	[BUG]  [BUGGY]  if(options.getMatchingOptions(opt)!=  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(opt)!=  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(options.getMatchingOptions(opt)!=  null)  {  Option  option  =  options.getOption(token);  option  =  options.getOption(token);  }	          Option    option    =    options.getOption(token);    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
261	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".=? ");  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ".=? ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ".=? ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ".=       ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
262	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "./.= ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "./.= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "./.= ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ".=       ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
263	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "... ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "... ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "... ");	  int    pos    =    token.lastIndexOf(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
264	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  -1);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-',  -1);	  int    pos    =    token.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
265	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf('=   ".length());  [CE]  unclosed  character  literal  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "=   ".length());  int  pos  =  token.lastIndexOf('=   ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "=   ".length());    int  pos  =  token.lastIndexOf('=   ".length());	  	non-compiled	[CE]  unclosed  character  literal	22	None	add
266	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ".s.IFJDCS ".charAt(0));  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ".s.IFJDCS ".charAt(0));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ".s.IFJDCS ".charAt(0));	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ".n       ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
267	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ".s.IFJDCS ".length());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ".s.IFJDCS ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ".s.IFJDCS ".length());	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ".n       ");    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
268	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getUpperBound());  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getUpperBound());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  getUpperBound());	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
269	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getImmediateParentPrefix(token));  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getImmediateParentPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- "  +  getImmediateParentPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
270	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".+ ");  [CE]  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ".+ ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ".+ ");	  int    pos    =    token.lastIndexOf(   "+   ");    	non-compiled	[CE]  	73	None	replace
271	[BUG]  [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  2));  [CE]  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOption(token.substring(0,  2));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOption(token.substring(0,  2));	  Integer    pos    =    options.getOption(token.substring(1));    	non-compiled	[CE]  	52	None	replace
272	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(token).longValue();  [CE]  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(token).longValue();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOptionValue(token).longValue();	  Integer    pos    =(Integer)options.getOptionValue(token);    	non-compiled	[CE]  	104	None	replace
273	[BUG]  [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(key);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =(Integer)options.getOptionValue(key);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =(Integer)options.getOptionValue(key);	  Integer    pos    =(Integer)options.getOption(key);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
274	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  pos);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('-',  pos);	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf('-=       ");    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
275	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(   "-   ");  int  pos  =  token.lastIndexOf('-');  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(   "-   ");  int  pos  =  token.lastIndexOf('-');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int    pos    =    token.lastIndexOf(   "-   ");    int  pos  =  token.lastIndexOf('-');	  	non-compiled	[CE]  illegal  start  of  type	18	None	add
276	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-? ");  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "-? ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "-? ");	  int    pos    =    token.lastIndexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
277	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "+ ".length());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "+ ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "+ ".length());	  int    pos    =    token.indexOf(       "+       ");    int    pos    =    token.indexOf(       "+   ".);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
278	[BUG]  [BUGGY]  Option  option  =  options.getOptions(token,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOptions(token,  true);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOptions(token,  true);	  Option    options    =    options.getOptions(token,    true);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
279	[BUG]  [BUGGY]  if(token.equals( "- ")||  token.length()  ==  1)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(token.equals( "- ")||  token.length()  ==  1)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(token.equals( "- ")||  token.length()  ==  1)  {  return  false;  }	  if(token.startsWith(   "-   ")||    token.length()    ==    1)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
280	[BUG]  [BUGGY]  Integer  pos  =  token.lastIndexOf( "=?   ");  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.lastIndexOf( "=?   ");  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.lastIndexOf( "=?   ");	  Integer    pos    =    token.indexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
281	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  argument);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  argument);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Option  option  =  options.getOption(token,  argument);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
282	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('n');  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('n');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('n');	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
283	[BUG]  [BUGGY]  int  pos  =  token.indexOf('n',  pos);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('n',  pos);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('n',  pos);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
284	[BUG]  [BUGGY]  int  pos  =  token.indexOf('n',  -1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('n',  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf('n',  -1);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
285	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  -1);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':',  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf(':',  -1);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
286	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  -1);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  -1);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
287	[BUG]  [BUGGY]  Integer  pos  =  options.getOptionPosition(token).indexOf( "= ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  options.getOptionPosition(token).indexOf( "= ");  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  options.getOptionPosition(token).indexOf( "= ");	  Integer    pos    =    options.getOptionPosition(token);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
288	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ", ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ", ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( ", ");	  int    pos    =    token.lastIndexOf(       "=       ");    int    pos    =    token.lastIndexOf(   ",=       ");    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
289	[BUG]  [BUGGY]  Integer  pos  =  token.lastIndexOf( "= ",  1);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.lastIndexOf( "= ",  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.lastIndexOf( "= ",  1);	  Integer    pos    =    token.indexOf(   "=       ",    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
290	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "n ",  -1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "n ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "n ",  -1);	  int    pos    =    token.indexOf(       "n       ");    int    pos    =    token.indexOf(   ",n       ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
291	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "=? ").length();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Integer  pos  =  token.indexOf( "=? ").length();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	Integer  pos  =  token.indexOf( "=? ").length();	  Integer    pos    =    token.indexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
292	[BUG]  [BUGGY]  if(!token.equals( "- ")||  token.length()  ==  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.equals( "- ")||  token.length()  ==  2)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.equals( "- ")||  token.length()  ==  2)  {  return  false;  }	  if(!token.equals(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
293	[BUG]  [BUGGY]  if(!token.startsWith( "= ")||  token.length()  ==  2)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(!token.startsWith( "= ")||  token.length()  ==  2)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	if(!token.startsWith( "= ")||  token.length()  ==  2)  {  return  false;  }	  if(!token.startsWith(   "=   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
294	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-',  -1);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-',  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf('-',  -1);	  int    pos    =    token.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
295	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",-= ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",-= ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ",-= ");	  int    pos    =    token.indexOf(       "-=       ");    int    pos    =    token.indexOf(   ",-=       ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
