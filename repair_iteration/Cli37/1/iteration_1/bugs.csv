bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  pos  =  token.indexOf( "= ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf( "= ");  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    int  pos  =  token.indexOf( "= ");		non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	2	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Option  option  =  options.getOption(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	    Option  option  =  options.getOption(token);		compilable	  [FE]  AssertionError  	2	1	add
3	[BUG]  [BUGGY]    Option  option  =  options.getOption(token);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Option  option  =  options.getOption(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Option  option  =  options.getOption(token);		compilable	  [FE]  AssertionError  	2	1	add
4	[BUG]  [BUGGY]    Integer  pos  =(Integer)options.getOption(token);  [CE]  inconvertible  types  [FE]        AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Integer  pos  =(Integer)options.getOption(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Integer  pos  =(Integer)options.getOption(token);		non-compiled	[CE]  inconvertible  types	2	None	add
5	[BUG]  [BUGGY]    Integer  pos  =  token.indexOf( "= ");  [CE]  variable  pos  is  already  defined  in  method  isLongOption(String)  [FE]          AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Integer  pos  =  token.indexOf( "= ");  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Integer  pos  =  token.indexOf( "= ");		non-compiled	[CE]  variable  pos  is  already  defined  in  method  isLongOption(String)	2	None	add
6	[BUG]  [BUGGY]    Integer  pos  =  getLongPrefix(token);  [CE]  incompatible  types  [FE]            AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Integer  pos  =  getLongPrefix(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Integer  pos  =  getLongPrefix(token);		non-compiled	[CE]  incompatible  types	2	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.lastIndexOf( "= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
8	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.lastIndexOf( "= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.lastIndexOf( "= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "- ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.indexOf( "- ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
10	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ");  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "- ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "- ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( ": ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.indexOf( ": ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
12	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ");  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( ": ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( ": ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "n ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.indexOf( "n ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
14	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "n ");  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "n ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "n ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "-= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.indexOf( "-= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
16	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ");  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "-= ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "-= ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
17	[BUG]  [BUGGY]    Option  options  =  options.getOptions(token);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Option  options  =  options.getOptions(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Option  options  =  options.getOptions(token);		non-compiled	[CE]  cannot  find  symbol	2	None	add
18	[BUG]  [BUGGY]    Option  options  =  option.getOptions();  [CE]  cannot  find  symbol  option  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Option  options  =  option.getOptions();  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Option  options  =  option.getOptions();		non-compiled	[CE]  cannot  find  symbol  option	2	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "+ ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	int  pos  =  token.indexOf( "+ ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
20	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "+ ");  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "+ ");  [BUGGY]  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	int  pos  =  token.indexOf( "+ ");	int  pos  =  token.indexOf( "= ");  	compilable	  [FE]  AssertionError  	1	1	replace
21	[BUG]  [BUGGY]    Integer  pos  =  options.getOption(token);  [CE]  incompatible  types  [FE]    AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    Integer  pos  =  options.getOption(token);  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    Integer  pos  =  options.getOption(token);		non-compiled	[CE]  incompatible  types	2	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    if(token.startsWith( "- "))  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	    if(token.startsWith( "- "))  {  return  false;  }		compilable	  [FE]  AssertionError  	2	1	add
23	[BUG]  [BUGGY]    if(token.startsWith( "- "))  {  return  false;  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  private  boolean  isLongOption(String  token)  {  if  (!token.startsWith( "- ")  ||  token.length()  ==  1)  {  return  false;  }  [BUGGY]    if(token.startsWith( "- "))  {  return  false;  }  [BUGGY]  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	    if(token.startsWith( "- "))  {  return  false;  }		compilable	  [FE]  AssertionError  	2	1	add
