bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  ||!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
2	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||!stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||!stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }	  ||!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
3	[BUG]  [BUGGY]  return  this.defaultParser.options,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options,  options);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options,  options);	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
4	[BUG]  [BUGGY]  return  this.defaultParser.options  ||  arguments.length  >  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options  ||  arguments.length  >  0;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options  ||  arguments.length  >  0;	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
6	[BUG]  [BUGGY]  if(this.defaultParser  ==  null)return  null;  if(this.defaultParser!=  null)return  null;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.defaultParser  ==  null)return  null;  if(this.defaultParser!=  null)return  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.defaultParser  ==  null)return  null;  if(this.defaultParser!=  null)return  null;	  return(this.defaultParser    ==    null)?    null    :    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
7	[BUG]  [BUGGY]  parent!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null)  {  cmd  =  new  CommandLine();  }	  parent    ==    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
8	[BUG]  [BUGGY]  cmd  =  currentToken.substring(0,  currentToken.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(0,  currentToken.length()  -  1);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(0,  currentToken.length()  -  1);	  cmd    =    currentToken.substring(1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
9	[BUG]  [BUGGY]  cmd  =  currentToken.substring(2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(2);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(2);	  cmd    =    currentToken.substring(1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
10	[BUG]  [BUGGY]  cmd  =  currentToken.substring(0,  currentToken.length());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(0,  currentToken.length());  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(0,  currentToken.length());	  cmd    =    currentToken.substring(1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
11	[BUG]  [BUGGY]  if(this.cmd!=  null)return  null;  if(this.cmd!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.cmd!=  null)return  null;  if(this.cmd!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.cmd!=  null)return  null;  if(this.cmd!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }	  return(this.cmd!=    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
12	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
13	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  false  :  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  false  :  this.cmd.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  false  :  this.cmd.toString();	  return(this.cmd    ==    null)?    false    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
14	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  false  :  this.cmd.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  false  :  this.cmd.clone();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  false  :  this.cmd.clone();	  return(this.cmd    ==    null)?    false    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
15	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  false  :  this.cmd.trim();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  false  :  this.cmd.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  false  :  this.cmd.trim();	  return(this.cmd    ==    null)?    false    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
16	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.getOption(options);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  options.getOption(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  options.getOption(argument);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.getOption(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.getOption(argument);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
21	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }	  if(stopAtNonOption)    {    if(currentToken!=    null)    {    cmd    =    currentToken.substring(2);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
22	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  cmd  =  currentToken.substring(2);	  if(stopAtNonOption)    {    if(currentToken!=    null)    {    cmd    =    currentToken.substring(2);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  parse(currentToken,  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }	  if(stopAtNonOption)    {    if(currentToken!=    null)    {    cmd    =    currentToken.substring(2);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  if(stopAtNonOption)return  null;  if(currentToken!=  null)  {  return  currentToken;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)return  null;  if(currentToken!=  null)  {  return  currentToken;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)return  null;  if(currentToken!=  null)  {  return  currentToken;  }	  return    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  if(stopAtNonOption)return  null;  if(currentToken  ==  null)  {  return  currentToken;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)return  null;  if(currentToken  ==  null)  {  return  currentToken;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)return  null;  if(currentToken  ==  null)  {  return  currentToken;  }	  return    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  return  null;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  return  null;  }	  return    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  parseExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parseExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parseExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
28	[BUG]  [BUGGY]  parseExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parseExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parseExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
29	[BUG]  [BUGGY]  cmd  =  currentToken.substring(0,  stopAtNonOption  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(0,  stopAtNonOption  +  1);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(0,  stopAtNonOption  +  1);	  cmd    =    currentToken.substring(0,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
30	[BUG]  [BUGGY]  cmd  =  currentToken.substring(0,  stopAtNonOption)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(0,  stopAtNonOption)+  1;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(0,  stopAtNonOption)+  1;	  cmd    =    currentToken.substring(0,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
31	[BUG]  [BUGGY]  cmd  =  currentToken.substring(0,  stopAtNonOption  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(0,  stopAtNonOption  -  1);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(0,  stopAtNonOption  -  1);	  cmd    =    currentToken.substring(0,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
32	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.toString();	  return(currentToken!=    null)?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentToken.parseOption(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentToken.parseOption(argument);	  Option    cmd    =    currentToken.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  optionGroup.parseOption(currentToken);	  Option    cmd    =    currentToken.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
35	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();	  parent    ==    null    ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||!stopAtNonOption)  {  cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||!stopAtNonOption)  {  cmd  =  new  CommandLine();	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  ||  skipParsing)  {  cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  skipParsing)  {  cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  skipParsing)  {  cmd  =  new  CommandLine();	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  ||  currentOption)  {  cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  currentOption)  {  cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  currentOption)  {  cmd  =  new  CommandLine();	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  arguments;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  options  :  arguments;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  options  :  arguments;	  return(this.options    ==    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
40	[BUG]  [BUGGY]  return(this.options  ==  null)?  this.options  :  options;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  this.options  :  options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  this.options  :  options;	  return(this.options    ==    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
41	[BUG]  [BUGGY]  return(this.options  ==  null)?  arguments  :  this.options;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  arguments  :  this.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  arguments  :  this.options;	  return(this.options    ==    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  options.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(arguments);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  optionGroup.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  return  cmd.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  cmd.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  cmd.toString();	  return    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
46	[BUG]  [BUGGY]  return(this.cmd!=  null)?  null  :  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd!=  null)?  null  :  this.cmd.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd!=  null)?  null  :  this.cmd.toString();	  return    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
47	[BUG]  [BUGGY]  String  cmd  =  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  String  cmd  =  this.cmd.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	String  cmd  =  this.cmd.toString();	  return    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
49	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  null);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  true);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
51	[BUG]  [BUGGY]  parent  =  group.getParser(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  group.getParser(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  group.getParser(this);	  parent    =    group.getParser();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
52	[BUG]  [BUGGY]  parent  =  group.getParser(options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  group.getParser(options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  group.getParser(options);	  parent    =    group.getParser();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
53	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.getOptionGroup();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.getOptionGroup();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
54	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getOption();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.getOption();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.getOption();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
55	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options!=  null)?  null  :  options.getOptions();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options!=  null)?  null  :  options.getOptions();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.getOption(stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.getOption(stopAtNonOption);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  options.getOption(stopAtNonOption,  group);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  options.getOption(stopAtNonOption,  group);	  Option    cmd    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
58	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.length()  >  0;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.length()  >  0;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  cmd.length()  >  0;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  +  1;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption  +  1;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  OptionGroup.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup.addChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup.addChangeListener(this);	  optionGroup.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  cmd  =  currentToken.substring(1);	  if(stopAtNonOption)    {    if(cmd    ==    null)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
62	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  ||    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
63	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  currentToken.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  currentToken.length()  -  1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  currentToken.length()  -  1);  }	  ||    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
64	[BUG]  [BUGGY]  parent  ==  null  &&  cmd!=  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  cmd!=  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  cmd!=  stopAtNonOption)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    if(cmd    ==    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
65	[BUG]  [BUGGY]  parent  ==  null  &&  cmd  ==  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  cmd  ==  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  cmd  ==  stopAtNonOption)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    if(cmd    ==    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
66	[BUG]  [BUGGY]  return(stopAtNonOption)?  null  :  stopToken;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(stopAtNonOption)?  null  :  stopToken;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(stopAtNonOption)?  null  :  stopToken;	  return(stopAtNonOption)?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
67	[BUG]  [BUGGY]  return(stopAtNonOption)?  null  :  stopAtNonOption.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(stopAtNonOption)?  null  :  stopAtNonOption.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(stopAtNonOption)?  null  :  stopAtNonOption.toString();	  return(stopAtNonOption)?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
68	[BUG]  [BUGGY]  return(stopAtNonOption)?  null  :  stopAtNonOption.options;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(stopAtNonOption)?  null  :  stopAtNonOption.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(stopAtNonOption)?  null  :  stopAtNonOption.options;	  return(stopAtNonOption)?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
69	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||!stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||!stopAtNonOption)  {  cmd  =  new  CommandLine();  }	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  ||  skipParsing)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  skipParsing)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  skipParsing)  {  cmd  =  new  CommandLine();  }	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  ||  currentOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  currentOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  currentOption)  {  cmd  =  new  CommandLine();  }	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  allowParsing(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  allowParsing(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	allowParsing(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
73	[BUG]  [BUGGY]  parent  ==  null  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  aughtExceptionHandler(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	aughtExceptionHandler(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
75	[BUG]  [BUGGY]  allowParsing(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  allowParsing(stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	allowParsing(stopAtNonOption);	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
76	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd.addChangeListener(this);  }	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
77	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
78	[BUG]  [BUGGY]  if(currentToken!=  null)  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(currentToken!=  null)  {  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(currentToken!=  null)  {  cmd.addChangeListener(this);  }	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
79	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
80	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption,  cmd;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption,  cmd;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption,  cmd;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
81	[BUG]  [BUGGY]  cmd  =  new  Commandline();  cmd.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  Commandline();  cmd.addChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  Commandline();  cmd.addChangeListener(this);	  if(stopAtNonOption)    {    cmd    =    new    Commandline();    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
82	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
83	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
84	[BUG]  [BUGGY]  options.addArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArgument(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArgument(argument,  stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
85	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  null);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument,  null);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
86	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  StopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  StopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument,  StopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
87	[BUG]  [BUGGY]  this.cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.cmd  =  new  CommandLine();	  this.cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
88	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  this.cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
89	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(!stopAtNonOption)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(!stopAtNonOption)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  this.cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
90	[BUG]  [BUGGY]  return(arguments  ==  null)?  null  :  arguments.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(arguments  ==  null)?  null  :  arguments.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(arguments  ==  null)?  null  :  arguments.toString();	  return(this.parameters    ==    null)?    null    :    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
91	[BUG]  [BUGGY]  return(arguments!=  null)?  null  :  arguments.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(arguments!=  null)?  null  :  arguments.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(arguments!=  null)?  null  :  arguments.toString();	  return(this.parameters    ==    null)?    null    :    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
92	[BUG]  [BUGGY]  return(arguments  ==  null)?  null  :  this.parameters.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(arguments  ==  null)?  null  :  this.parameters.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(arguments  ==  null)?  null  :  this.parameters.toString();	  return(this.parameters    ==    null)?    null    :    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
93	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  currentOption.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
94	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  options.getOptionGroup(argument);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  cmd  =  new  CommandLine(true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(true);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(true);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
96	[BUG]  [BUGGY]  cmd  =  new  CommandLine(stackToken);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(stackToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(stackToken);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
97	[BUG]  [BUGGY]  cmd  =  new  CommandLine(0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(0);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(0);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
98	[BUG]  [BUGGY]  this.options.removeChangeListener(this);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.options.removeChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.options.removeChangeListener(this);	  this.options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
99	[BUG]  [BUGGY]  this.options.setChangeListener(this);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.options.setChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.options.setChangeListener(this);	  this.options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
100	[BUG]  [BUGGY]  cmd.addArg(argument[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument[0],  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument[0],  stopAtNonOption);	  cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
101	[BUG]  [BUGGY]  cmd.addArg(arguments[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(arguments[0]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(arguments[0]);	  cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
102	[BUG]  [BUGGY]  cmd.addArg(argument[0],  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument[0],  blockAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument[0],  blockAtNonOption);	  cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
103	[BUG]  [BUGGY]  cmd.addArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArgument(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArgument(argument,  stopAtNonOption);	  cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
104	[BUG]  [BUGGY]  cmd.addArg(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument,  stopAtNonOption);	  cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
105	[BUG]  [BUGGY]  cmd.addArgument(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArgument(argument,  currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArgument(argument,  currentToken);	  cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
106	[BUG]  [BUGGY]  parseExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parseExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parseExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(0,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
107	[BUG]  [BUGGY]  parseExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parseExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parseExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(0,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
108	[BUG]  [BUGGY]  parsingExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parsingExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parsingExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(0,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
109	[BUG]  [BUGGY]  return  this.parameters!=  null?  null  :  this.parameters.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters!=  null?  null  :  this.parameters.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters!=  null?  null  :  this.parameters.toString();	  return    this.parameters.toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
110	[BUG]  [BUGGY]  return  this.parameters  ==  null?  null  :  this.parameters.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters  ==  null?  null  :  this.parameters.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters  ==  null?  null  :  this.parameters.toString();	  return    this.parameters.toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
111	[BUG]  [BUGGY]  return  this.parameters.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters.toString()  + "n ";  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters.toString()  + "n ";	  return    this.parameters.toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
112	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  null  :  this.cmd.toString();	  return(this.cmd    ==    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
113	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.clone();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  null  :  this.cmd.clone();	  return(this.cmd    ==    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
114	[BUG]  [BUGGY]  return(currentToken!=  null)?  null  :  currentToken.trim();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken!=  null)?  null  :  currentToken.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken!=  null)?  null  :  currentToken.trim();	  return(currentToken    ==    null)?    null    :    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.substring(1);	  return(currentToken    ==    null)?    null    :    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
116	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken);	  Option    cmd    =    options.parseOption(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
117	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  currentToken);	  Option    cmd    =    options.parseOption(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
118	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  options);	  Option    cmd    =    options.parseOption(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
119	[BUG]  [BUGGY]  options.addArg(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArg(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArg(argument,  stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
120	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  endAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  endAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument,  endAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
121	[BUG]  [BUGGY]  options.addArgument(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArgument(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArgument(argument);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
122	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  skipParsing);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  skipParsing);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument,  skipParsing);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
123	[BUG]  [BUGGY]  if(this.defaultParser!=  null)return  null;  if(this.defaultParser!=  null)return  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.defaultParser!=  null)return  null;  if(this.defaultParser!=  null)return  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.defaultParser!=  null)return  null;  if(this.defaultParser!=  null)return  null;	  return(this.defaultParser!=    null)?    null    :    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
124	[BUG]  [BUGGY]  if(this.defaultParser!=  null)return  null;  if(this.defaultParser!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.defaultParser!=  null)return  null;  if(this.defaultParser!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.defaultParser!=  null)return  null;  if(this.defaultParser!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }	  return(this.defaultParser!=    null)?    null    :    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
125	[BUG]  [BUGGY]  parse(currentToken)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken)  {  cmd  =  new  CommandLine();  }	  pullParsing(currentToken)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
126	[BUG]  [BUGGY]  parsing(currentToken)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parsing(currentToken)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parsing(currentToken)  {  cmd  =  new  CommandLine();  }	  pullParsing(currentToken)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
127	[BUG]  [BUGGY]  if(stopAtNonOption)  {  pullParsing(currentToken)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  pullParsing(currentToken)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  pullParsing(currentToken)  {  cmd  =  new  CommandLine();  }	  pullParsing(currentToken)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
128	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  endAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  endAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument,  endAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    skipParsing);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
129	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentToken.parseOption(currentOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentToken.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
130	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[currentToken]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[currentToken]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(arguments[currentToken]);	  Option    cmd    =    currentOption.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
131	[BUG]  [BUGGY]  return  this.parameters.length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters.length  -  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters.length  -  1;	  return    this.parameters.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
132	[BUG]  [BUGGY]  return  arguments.length;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  arguments.length;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  arguments.length;	  return    this.parameters.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
133	[BUG]  [BUGGY]  return  this.parameters.length  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters.length  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters.length  +  1;	  return    this.parameters.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
134	[BUG]  [BUGGY]  return  this.parameters.length  -  arguments.length;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters.length  -  arguments.length;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters.length  -  arguments.length;	  return    this.parameters.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
135	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getGroup();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getGroup();	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  currentOption.getOptionGroup();	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
137	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  }	  parent    ==    null    ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
138	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
139	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
140	[BUG]  [BUGGY]  parent!=  null  &&  currentToken!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null  &&  currentToken!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null  &&  currentToken!=  null)  {  cmd  =  new  CommandLine();  }	  parent    ==    null    &&    currentToken!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
141	[BUG]  [BUGGY]  parent  ==  null  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  }	  parent    ==    null    &&    currentToken!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
142	[BUG]  [BUGGY]  options.addArg(argument[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArg(argument[0]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArg(argument[0]);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument[0]);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
143	[BUG]  [BUGGY]  return(arguments!=  null)?  this.parameters  :  arguments;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(arguments!=  null)?  this.parameters  :  arguments;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(arguments!=  null)?  this.parameters  :  arguments;	  return(this.parameters!=    null)?    this.parameters    :    arguments;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
144	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  this.parameters  :  arguments;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  this.parameters  :  arguments;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  this.parameters  :  arguments;	  return(this.parameters!=    null)?    this.parameters    :    arguments;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
145	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  arguments  :  this.parameters;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  arguments  :  this.parameters;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  arguments  :  this.parameters;	  return(this.parameters!=    null)?    this.parameters    :    arguments;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
146	[BUG]  [BUGGY]  parse(options,  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(options,  stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(options,  stopAtNonOption)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
147	[BUG]  [BUGGY]  options.addAll(stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addAll(stopAtNonOption)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addAll(stopAtNonOption)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
148	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
149	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  if(stopAtNonOption)  {  cmd.addArg(argument,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  if(stopAtNonOption)  {  cmd.addArg(argument,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  if(stopAtNonOption)  {  cmd.addArg(argument,  stopAtNonOption);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
150	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
151	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
152	[BUG]  [BUGGY]  options.addArg(argument[1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArg(argument[1]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArg(argument[1]);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
153	[BUG]  [BUGGY]  Option  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  options.getGroup();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  options.getGroup();	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
154	[BUG]  [BUGGY]  Option  group  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  currentOption.getOptionGroup();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  currentOption.getOptionGroup();	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
155	[BUG]  [BUGGY]  Option  group  =  options.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  options.getArgumentGroup();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  options.getArgumentGroup();	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
156	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(!stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(!stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
157	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
158	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(arguments);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
159	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(currentOption);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
160	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  null  :  this.parameters.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  null  :  this.parameters.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  null  :  this.parameters.toString();	  return(this.parameters    ==    null)?    null    :    this.parameters;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
161	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  null  :  this.parameters.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  null  :  this.parameters.clone();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  null  :  this.parameters.clone();	  return(this.parameters    ==    null)?    null    :    this.parameters;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
162	[BUG]  [BUGGY]  return(this.defaultParser!=  null?  this.defaultParser  :  defaultParser);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.defaultParser!=  null?  this.defaultParser  :  defaultParser);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.defaultParser!=  null?  this.defaultParser  :  defaultParser);	  return(this.defaultParser    ==    null?    this.defaultParser    :    defaultParser);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
163	[BUG]  [BUGGY]  return(defaultParser  ==  null?  this.defaultParser  :  defaultParser);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(defaultParser  ==  null?  this.defaultParser  :  defaultParser);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(defaultParser  ==  null?  this.defaultParser  :  defaultParser);	  return(this.defaultParser    ==    null?    this.defaultParser    :    defaultParser);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
164	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
165	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
166	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  StopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  StopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument,  StopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
167	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  null);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument,  null);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
168	[BUG]  [BUGGY]  parse(currentToken,  argument)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  argument)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  argument)  {  cmd  =  currentToken.substring(1);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
169	[BUG]  [BUGGY]  parse(currentToken,  arguments)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  arguments)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  arguments)  {  cmd  =  currentToken.substring(1);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
170	[BUG]  [BUGGY]  parse(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
171	[BUG]  [BUGGY]  parse(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
172	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  options,  stopAtNonOption);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  options,  stopAtNonOption);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
173	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  arguments,  stopAtNonOption);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  arguments,  stopAtNonOption);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
174	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  currentToken,  stopAtNonOption);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
175	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  cmd,  stopAtNonOption);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  cmd,  stopAtNonOption);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
176	[BUG]  [BUGGY]  return(this.options!=  null)?  this.options  :  options;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options!=  null)?  this.options  :  options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options!=  null)?  this.options  :  options;	  return(this.options!=    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
177	[BUG]  [BUGGY]  return(this.options!=  null)?  arguments  :  this.options;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options!=  null)?  arguments  :  this.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options!=  null)?  arguments  :  this.options;	  return(this.options!=    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
178	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
179	[BUG]  [BUGGY]  return(this.parameters!=  null)?  null  :  this.parameters.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters!=  null)?  null  :  this.parameters.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters!=  null)?  null  :  this.parameters.toString();	  return(this.parameters!=    null)?    null    :    this.parameters;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
180	[BUG]  [BUGGY]  Options  cmd  =  options.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Options  cmd  =  options.addChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Options  cmd  =  options.addChangeListener(this);	  options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
181	[BUG]  [BUGGY]  options.removeChangeListener(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.removeChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.removeChangeListener(this);	  options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
182	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.toLowerCase();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.toLowerCase();	  return(currentToken    ==    null)?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
183	[BUG]  [BUGGY]  allowParsing(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  allowParsing(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	allowParsing(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
184	[BUG]  [BUGGY]  parent  ==  null  ||  stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  ||  stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  ||  stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
185	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
186	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
187	[BUG]  [BUGGY]  options.addArg(argument,  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArg(argument,  cmd);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArg(argument,  cmd);	  options.addArg(argument);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
188	[BUG]  [BUGGY]  options.addArg(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArg(argument,  currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArg(argument,  currentToken);	  options.addArg(argument);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
189	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  }	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    parent);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
190	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    parent);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
191	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(0,  currentToken.length());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(0,  currentToken.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.substring(0,  currentToken.length());	  return(currentToken    ==    null)?    null    :    currentToken.substring(currentToken.length());    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
192	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length()  -  1);	  return(currentToken    ==    null)?    null    :    currentToken.substring(currentToken.length());    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
193	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length()  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length()  +  1);	  return(currentToken    ==    null)?    null    :    currentToken.substring(currentToken.length());    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
194	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length(),  arguments.length());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length(),  arguments.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.substring(currentToken.length(),  arguments.length());	  return(currentToken    ==    null)?    null    :    currentToken.substring(currentToken.length());    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
195	[BUG]  [BUGGY]  if(this.options!=  null)return  null;  if(this.options!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.options!=  null)return  null;  if(this.options!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.options!=  null)return  null;  if(this.options!=  null)return  null;  if(!stopAtNonOption)  {  return  false;  }	  return(this.options!=    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
196	[BUG]  [BUGGY]  if(this.options!=  null)return  null;  if(this.options!=  null)return  null;  if(this.options!=  null)  {  return  this.options;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.options!=  null)return  null;  if(this.options!=  null)return  null;  if(this.options!=  null)  {  return  this.options;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.options!=  null)return  null;  if(this.options!=  null)return  null;  if(this.options!=  null)  {  return  this.options;  }	  return(this.options!=    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
197	[BUG]  [BUGGY]  parent  =  cmd.getParent();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  cmd.getParent();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  cmd.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
198	[BUG]  [BUGGY]  parent  =  this.parent.getParent();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  this.parent.getParent();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  this.parent.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
199	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.options();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.options();	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
200	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options.clone();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.options.clone();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.options.clone();	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
201	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options.null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.options.null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.options.null;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
202	[BUG]  [BUGGY]  if(stopAtNonOption)  {  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  OptionGroup    group    =    options.getOptionGroup();    cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
203	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  Option  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  Option  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  OptionGroup    group    =    options.getOptionGroup();    cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
204	[BUG]  [BUGGY]  return(this.defaultParser!=  null?  null  :  this.defaultParser);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.defaultParser!=  null?  null  :  this.defaultParser);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.defaultParser!=  null?  null  :  this.defaultParser);	  return(this.defaultParser    ==    null?    null    :    this.defaultParser);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
205	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  this.options.clone();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  null  :  this.options.clone();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  null  :  this.options.clone();	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
206	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  this.options.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  null  :  this.options.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  null  :  this.options.toString();	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
207	[BUG]  [BUGGY]  return  this.cmd.substring(0,  this.currentToken.length());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.cmd.substring(0,  this.currentToken.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.cmd.substring(0,  this.currentToken.length());	  return    this.cmd.substring(0,    this.currentToken.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
208	[BUG]  [BUGGY]  return  cmd.substring(0,  this.currentToken.length());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  cmd.substring(0,  this.currentToken.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  cmd.substring(0,  this.currentToken.length());	  return    this.cmd.substring(0,    this.currentToken.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
209	[BUG]  [BUGGY]  return  this.currentToken.substring(0,  this.currentToken.length());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.currentToken.substring(0,  this.currentToken.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.currentToken.substring(0,  this.currentToken.length());	  return    this.cmd.substring(0,    this.currentToken.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
210	[BUG]  [BUGGY]  parse(cmd,  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(cmd,  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(cmd,  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
211	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  optionGroup.parseOption(options);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
212	[BUG]  [BUGGY]  cmd  =  new  CommandLine(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(stopAtNonOption);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
213	[BUG]  [BUGGY]  cmd  =  new  CommandLine(skippedParsing);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(skippedParsing);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(skippedParsing);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
214	[BUG]  [BUGGY]  cmd  =  new  CommandLine(options);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(options);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
215	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  options.getOptionGroup(options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  options.getOptionGroup(options);	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
216	[BUG]  [BUGGY]  return(this.defaultParser  ==  null)?  null  :  this.defaultParser.options;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.defaultParser  ==  null)?  null  :  this.defaultParser.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.defaultParser  ==  null)?  null  :  this.defaultParser.options;	  return(this.defaultParser    ==    null)?    null    :    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
217	[BUG]  [BUGGY]  return(this.defaultParser  ==  null)?  null  :  this.defaultParser.toString();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.defaultParser  ==  null)?  null  :  this.defaultParser.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.defaultParser  ==  null)?  null  :  this.defaultParser.toString();	  return(this.defaultParser    ==    null)?    null    :    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
218	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  cmd;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  cmd;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  cmd;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
219	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  currentOption.getOptionGroup(argument);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
220	[BUG]  [BUGGY]  cmd.addArg(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument);	  cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
221	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  arguments;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  null  :  arguments;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  null  :  arguments;	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
222	[BUG]  [BUGGY]  return(this.options  ==  null)?  null  :  options.options;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  null  :  options.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  null  :  options.options;	  return(this.options    ==    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
223	[BUG]  [BUGGY]  if(skipParsing)  {  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(skipParsing)  {  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(skipParsing)  {  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    if(cmd    ==    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
224	[BUG]  [BUGGY]  this.options.addChangeListener(this,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.options.addChangeListener(this,  expectedOpts);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.options.addChangeListener(this,  expectedOpts);	  this.options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
225	[BUG]  [BUGGY]  return  this.parameters!=  null?  null  :  this.parameters.length;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters!=  null?  null  :  this.parameters.length;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters!=  null?  null  :  this.parameters.length;	  return    this.parameters.length;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
226	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  else  {  cmd.addArg(argument);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  else  {  cmd.addArg(argument);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  else  {  cmd.addArg(argument);  }	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
227	[BUG]  [BUGGY]  cmd.addArg(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument,  blockAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument,  blockAtNonOption);	  cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
228	[BUG]  [BUGGY]  cmd.removeChangeListener(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.removeChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.removeChangeListener(this);	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
229	[BUG]  [BUGGY]  cmd.addChangeListener(this,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addChangeListener(this,  this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addChangeListener(this,  this);	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
230	[BUG]  [BUGGY]  cmd.addChangeListener(this,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addChangeListener(this,  options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addChangeListener(this,  options);	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
231	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  cmd.addArg(new  CommandLine());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  stopAtNonOption)  {  cmd.addArg(new  CommandLine());  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  stopAtNonOption)  {  cmd.addArg(new  CommandLine());	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
232	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  expectedOpts);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(options,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
233	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument[0],  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument[0],  stopAtNonOption);	  cmd    =    new    CommandLine();    cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
234	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  blockAtNonOption);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  blockAtNonOption);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
235	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  options);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  options);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  options);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
236	[BUG]  [BUGGY]  return(this.options!=  null)?  options  :  options;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options!=  null)?  options  :  options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options!=  null)?  options  :  options;	  return(this.options!=    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
237	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(cmd  ==  null)  {  cmd  =  currentToken.substring(2);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  if(cmd  ==  null)  {  cmd  =  currentToken.substring(2);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  if(cmd  ==  null)  {  cmd  =  currentToken.substring(2);  }	  if(stopAtNonOption)    {    if(cmd!=    null)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
238	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(cmd!=  null)  {  cmd  =  currentToken.substring(2);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  if(cmd!=  null)  {  cmd  =  currentToken.substring(2);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  if(cmd!=  null)  {  cmd  =  currentToken.substring(2);  }	  if(stopAtNonOption)    {    if(cmd!=    null)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
239	[BUG]  [BUGGY]  return(options!=  null)?  null  :  options.options;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options!=  null)?  null  :  options.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options!=  null)?  null  :  options.options;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
240	[BUG]  [BUGGY]  parse(currentToken,  stopAtNonOption)  {  if(cmd!=  null)  {  cmd  =  currentToken.substring(2);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  stopAtNonOption)  {  if(cmd!=  null)  {  cmd  =  currentToken.substring(2);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  stopAtNonOption)  {  if(cmd!=  null)  {  cmd  =  currentToken.substring(2);  }	  if(stopAtNonOption)    {    if(currentToken!=    null)    {    cmd    =    currentToken.substring(2);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
241	[BUG]  [BUGGY]  parse(currentToken.substring(0,  stopAtNonOption))  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken.substring(0,  stopAtNonOption))  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken.substring(0,  stopAtNonOption))  {  cmd  =  currentToken.substring(1);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
242	[BUG]  [BUGGY]  parse(currentToken,  block)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  block)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  block)  {  cmd  =  currentToken.substring(1);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
243	[BUG]  [BUGGY]  parse(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(0,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
244	[BUG]  [BUGGY]  parse(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(0,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
245	[BUG]  [BUGGY]  pending)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  pending)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	pending)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
246	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
247	[BUG]  [BUGGY]  return(this.options!=  null)?  null  :  arguments;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options!=  null)?  null  :  arguments;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options!=  null)?  null  :  arguments;	  return(this.options!=    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
248	[BUG]  [BUGGY]  options.addArg(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addArg(argument,  currentOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addArg(argument,  currentOption);	  options.addArg(argument);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
249	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
250	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  new  CommandLine(this.cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  null  :  new  CommandLine(this.cmd);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  null  :  new  CommandLine(this.cmd);	  return(this.cmd!=    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
251	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
252	[BUG]  [BUGGY]  return  this.defaultParser.options();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options();	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
253	[BUG]  [BUGGY]  return  this.defaultParser.options  |  options;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options  |  options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options  |  options;	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
254	[BUG]  [BUGGY]  return  this.defaultParser.options  &&  arguments.length  >  0;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options  &&  arguments.length  >  0;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options  &&  arguments.length  >  0;	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
255	[BUG]  [BUGGY]  if(skipParsing)  {  if(cmd!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(skipParsing)  {  if(cmd!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(skipParsing)  {  if(cmd!=  null)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    if(cmd!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
256	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.startsWith( "- "));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.startsWith( "- "));  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  cmd.startsWith( "- "));	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
257	[BUG]  [BUGGY]  return(this.cmd!=  null)?  false  :  this.cmd;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd!=  null)?  false  :  this.cmd;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd!=  null)?  false  :  this.cmd;	  return(this.cmd    ==    null)?    false    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
258	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  true  :  this.cmd;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  true  :  this.cmd;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  true  :  this.cmd;	  return(this.cmd    ==    null)?    false    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
259	[BUG]  [BUGGY]  if(options!=  null)  {  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(options!=  null)  {  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(options!=  null)  {  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  OptionGroup    group    =    options.getOptionGroup();    cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
260	[BUG]  [BUGGY]  if(stopAtNonOption)  {  if(cmd  ==  null)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  if(cmd  ==  null)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  if(cmd  ==  null)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  if(stopAtNonOption)    {    if(cmd    ==    null)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
261	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parse(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parse(argument);	  Option    cmd    =    currentOption.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
262	[BUG]  [BUGGY]  if(this.defaultParser!=  null)?  null  :  this.defaultParser;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.defaultParser!=  null)?  null  :  this.defaultParser;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.defaultParser!=  null)?  null  :  this.defaultParser;	  return(this.defaultParser!=    null)?    null    :    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
263	[BUG]  [BUGGY]  parsing)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parsing)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parsing)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
264	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  null  :  arguments;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  null  :  arguments;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  null  :  arguments;	  return(this.parameters    ==    null)?    null    :    this.parameters;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
265	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  null  :  this.parameters[0];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  null  :  this.parameters[0];  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  null  :  this.parameters[0];	  return(this.parameters    ==    null)?    null    :    this.parameters;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
266	[BUG]  [BUGGY]  return  this.parameters.toString(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters.toString(argument);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters.toString(argument);	  return    this.parameters.toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
267	[BUG]  [BUGGY]  return  this.parameters.toString()  +  arguments.length;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.parameters.toString()  +  arguments.length;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.parameters.toString()  +  arguments.length;	  return    this.parameters.toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
268	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  arguments[1]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  arguments[1]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument,  arguments[1]);	  cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
269	[BUG]  [BUGGY]  ||  currentToken.startsWith( "- "))  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  currentToken.startsWith( "- "))  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  currentToken.startsWith( "- "))  {  cmd  =  currentToken.substring(1);  }	  ||    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
270	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
271	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.getArgument();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.getArgument();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.getArgument();	  return(options    ==    null)?    null    :    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
272	[BUG]  [BUGGY]  return(this.parameters!=  null)?  arguments  :  this.parameters;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters!=  null)?  arguments  :  this.parameters;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters!=  null)?  arguments  :  this.parameters;	  return(this.parameters!=    null)?    this.parameters    :    arguments;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
273	[BUG]  [BUGGY]  return(this.defaultParser  ==  null?  this.defaultParser  :  this.defaultParser);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.defaultParser  ==  null?  this.defaultParser  :  this.defaultParser);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.defaultParser  ==  null?  this.defaultParser  :  this.defaultParser);	  return(this.defaultParser    ==    null?    this.defaultParser    :    defaultParser);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
274	[BUG]  [BUGGY]  return(this.defaultParser!=  null?  this.defaultParser  :  this.defaultParser);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.defaultParser!=  null?  this.defaultParser  :  this.defaultParser);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.defaultParser!=  null?  this.defaultParser  :  this.defaultParser);	  return(this.defaultParser    ==    null?    this.defaultParser    :    defaultParser);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
275	[BUG]  [BUGGY]  parent  =  group.getParser(currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  group.getParser(currentOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  group.getParser(currentOption);	  parent    =    group.getParser();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
276	[BUG]  [BUGGY]  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this,  options);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.cmd  =  new  CommandLine();  cmd.addChangeListener(this,  options);	  this.cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
277	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
278	[BUG]  [BUGGY]  OptionGroup  group  =  options.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getArgumentGroup();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getArgumentGroup();	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
279	[BUG]  [BUGGY]  optionGroup.removeChangeListener(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  optionGroup.removeChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	optionGroup.removeChangeListener(this);	  optionGroup.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
280	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  null  :  this.cmd  +  1;	  return(this.cmd    ==    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
281	[BUG]  [BUGGY]  pendingParsing)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  pendingParsing)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	pendingParsing)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
282	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
283	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  group  =  options.getOption( "group ");  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  group  =  options.getOption( "group ");	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
284	[BUG]  [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  }  else  {  cmd.addArg(argument);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  }  else  {  cmd.addArg(argument);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  parent);  }  else  {  cmd.addArg(argument);  }	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    parent);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
285	[BUG]  [BUGGY]  if(stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  cmd  =  currentToken.substring(1);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
286	[BUG]  [BUGGY]  parent!=  null  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent!=  null  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent!=  null  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
287	[BUG]  [BUGGY]  return(this.options  ==  null)?  options  :  options;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.options  ==  null)?  options  :  options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.options  ==  null)?  options  :  options;	  return(this.options    ==    null)?    options    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
288	[BUG]  [BUGGY]  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	&&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  ||!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
289	[BUG]  [BUGGY]  pulsing(currentToken)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  pulsing(currentToken)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	pulsing(currentToken)  {  cmd  =  new  CommandLine();  }	  pullParsing(currentToken)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
290	[BUG]  [BUGGY]  return(currentToken!=  null)?  null  :  currentToken.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken!=  null)?  null  :  currentToken.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken!=  null)?  null  :  currentToken.toString();	  return(currentToken!=    null)?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
291	[BUG]  [BUGGY]  return  this.cmd.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.cmd.toString()  + "n ";  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.cmd.toString()  + "n ";	  return    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
292	[BUG]  [BUGGY]  if(stopAtNonOption)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(stopAtNonOption)  {  return  this;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(stopAtNonOption)  {  return  this;  }	  return    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
293	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	throw  new  IllegalArgumentException( " ");	  return    null;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
294	[BUG]  [BUGGY]  options.addChangeListener(this,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  options.addChangeListener(this,  expectedOpts);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	options.addChangeListener(this,  expectedOpts);	  options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
295	[BUG]  [BUGGY]  aughtExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  aughtExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	aughtExceptionHandler(currentToken,  argument,  stopAtNonOption)  {  cmd  =  currentToken.substring(2);  }	  if(stopAtNonOption)    {    if(currentToken!=    null)    {    cmd    =    currentToken.substring(2);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
296	[BUG]  [BUGGY]  parentToken  =  currentToken.substring(0,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parentToken  =  currentToken.substring(0,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parentToken  =  currentToken.substring(0,  stopAtNonOption);	  if(stopAtNonOption)    {    if(currentToken!=    null)    {    cmd    =    currentToken.substring(2);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
297	[BUG]  [BUGGY]  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  currentToken!=  null)  {  cmd  =  new  CommandLine();  }	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
298	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
299	[BUG]  [BUGGY]  if(this.cmd!=  null)?  null  :  this.cmd;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.cmd!=  null)?  null  :  this.cmd;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.cmd!=  null)?  null  :  this.cmd;	  return(this.cmd!=    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
300	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
301	[BUG]  [BUGGY]  parsingExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parsingExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parsingExceptionHandler(currentToken,  arguments,  stopAtNonOption)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  aughtExceptionHandler(currentToken,    argument,    stopAtNonOption)    {    cmd    =    currentToken.substring(0,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
302	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(!stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(!stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
303	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[1]);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
304	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Options  cmd  =  options.getOption(currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Options  cmd  =  options.getOption(currentToken);	  options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
305	[BUG]  [BUGGY]  return(currentToken!=  null)?  null  :  currentToken.substring(currentToken.length());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken!=  null)?  null  :  currentToken.substring(currentToken.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken!=  null)?  null  :  currentToken.substring(currentToken.length());	  return(currentToken    ==    null)?    null    :    currentToken.substring(currentToken.length());    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
306	[BUG]  [BUGGY]  parent  ==  null  &&  cmd!=  null)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  cmd!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  cmd!=  null)  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    if(cmd!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
307	[BUG]  [BUGGY]  parent  ==  null  &&  cmd!=  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  cmd!=  null;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  cmd!=  null;	  if(stopAtNonOption)    {    if(cmd!=    null)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
308	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  optionGroup.getOption(currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  optionGroup.getOption(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
309	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument[1]);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
310	[BUG]  [BUGGY]  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||  currentToken!=  null)  {  cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||  currentToken!=  null)  {  cmd  =  new  CommandLine();	  ||    stopAtNonOption)    {    cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
311	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
312	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
313	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
314	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
315	[BUG]  [BUGGY]  return(options  ==  null)?  null  :  options.options,  expectedOpts;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(options  ==  null)?  null  :  options.options,  expectedOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(options  ==  null)?  null  :  options.options,  expectedOpts;	  return(options    ==    null)?    null    :    options.options;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
316	[BUG]  [BUGGY]  if(cmd  ==  null)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  this.cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
317	[BUG]  [BUGGY]  if(cmd!=  null)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd!=  null)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd!=  null)  {  this.cmd  =  new  CommandLine();  cmd.addChangeListener(this);  }	  this.cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
318	[BUG]  [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.trim();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.cmd  ==  null)?  null  :  this.cmd.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.cmd  ==  null)?  null  :  this.cmd.trim();	  return(this.cmd    ==    null)?    null    :    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
319	[BUG]  [BUGGY]  if(this.options!=  null)?  null  :  this.options;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(this.options!=  null)?  null  :  this.options;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(this.options!=  null)?  null  :  this.options;	  return(this.options!=    null)?    null    :    this.options;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
320	[BUG]  [BUGGY]  return  this.defaultParser.options  &&  this.defaultToken!=  null  &&  this.defaultToken.length()  >  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options  &&  this.defaultToken!=  null  &&  this.defaultToken.length()  >  0;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options  &&  this.defaultToken!=  null  &&  this.defaultToken.length()  >  0;	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
321	[BUG]  [BUGGY]  return  this.defaultParser.options  ||  arguments.length  ==  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.options  ||  arguments.length  ==  0;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.options  ||  arguments.length  ==  0;	  return    this.defaultParser.options;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
322	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  blockAtNonOption;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  blockAtNonOption;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  blockAtNonOption;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
323	[BUG]  [BUGGY]  parent  ==  null)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  if(stopAtNonOption)    {    if(cmd!=    null)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
324	[BUG]  [BUGGY]  warning  =  stopAtNonOption?  null  :  warning.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  warning  =  stopAtNonOption?  null  :  warning.toString();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	warning  =  stopAtNonOption?  null  :  warning.toString();	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
325	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  [Delete]  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	[Delete]	  if(stopAtNonOption)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
326	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }	  cmd    =    new    CommandLine();    cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
327	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
328	[BUG]  [BUGGY]  return  this.currentToken.substring(0,  this.cmd.length());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.currentToken.substring(0,  this.cmd.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.currentToken.substring(0,  this.cmd.length());	  return    this.cmd.substring(0,    this.currentToken.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
329	[BUG]  [BUGGY]  parent  =  group.getParent();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  group.getParent();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  group.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
330	[BUG]  [BUGGY]  this.options.addChangeListener(cmd);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.options.addChangeListener(cmd);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.options.addChangeListener(cmd);	  this.options.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
331	[BUG]  [BUGGY]  cmd.addAsParser(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addAsParser(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addAsParser(this);	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
332	[BUG]  [BUGGY]  cmd.addValueListener(this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addValueListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addValueListener(this);	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
333	[BUG]  [BUGGY]  cmd.addParser(this);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addParser(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addParser(this);	  cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
334	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  stopAtNonOption);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
335	[BUG]  [BUGGY]  warning)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  warning)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	warning)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
336	[BUG]  [BUGGY]  cmd  =  new  CommandLine(skipped);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine(skipped);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine(skipped);	  cmd    =    new    CommandLine();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
337	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  arguments);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  arguments);	  Option    cmd    =    options.parseOption(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
338	[BUG]  [BUGGY]  Option  cmd  =  option.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  option.parseOption(argument,  currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  option.parseOption(argument,  currentToken);	  Option    cmd    =    options.parseOption(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
339	[BUG]  [BUGGY]  cmd  =  currentToken.substring(0,  currentToken.length()  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  currentToken.substring(0,  currentToken.length()  -  2);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  currentToken.substring(0,  currentToken.length()  -  2);	  cmd    =    currentToken.substring(1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
340	[BUG]  [BUGGY]  return  this.cmd.toString()  + ": "  +  this.optionGroup.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.cmd.toString()  + ": "  +  this.optionGroup.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.cmd.toString()  + ": "  +  this.optionGroup.toString();	  return    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
341	[BUG]  [BUGGY]  return(argument  ==  null)?  null  :  arguments.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(argument  ==  null)?  null  :  arguments.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(argument  ==  null)?  null  :  arguments.toString();	  return(this.parameters    ==    null)?    null    :    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
342	[BUG]  [BUGGY]  return(this.parameters  ==  null)?  null  :  arguments[0].toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parameters  ==  null)?  null  :  arguments[0].toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parameters  ==  null)?  null  :  arguments[0].toString();	  return(this.parameters    ==    null)?    null    :    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
343	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  return  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  ||!stopAtNonOption)  {  return  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	||!stopAtNonOption)  {  return  new  IllegalArgumentException( " ");  }	  ||!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
344	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument,  stopAtNonOption);  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument,    stopAtNonOption);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
345	[BUG]  [BUGGY]  cmd.addArg(argument[1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument[1]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument[1]);	  cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
346	[BUG]  [BUGGY]  cmd.addArg(argument[0], " ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(argument[0], " ");  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(argument[0], " ");	  cmd.addArg(argument[0]);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
347	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }	  cmd    =    new    CommandLine();    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
348	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();	  OptionGroup    group    =    options.getOptionGroup();    cmd    =    new    CommandLine();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
349	[BUG]  [BUGGY]  cmd  =  this.currentToken.substring(0,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  this.currentToken.substring(0,  stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  this.currentToken.substring(0,  stopAtNonOption);	  cmd    =    currentToken.substring(0,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
350	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.stopAtNonOption  :  options.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.stopAtNonOption  :  options.stopAtNonOption;  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.stopAtNonOption  :  options.stopAtNonOption;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
351	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.startsWith( "- ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.startsWith( "- ");  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  cmd.startsWith( "- ");	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
352	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArgument(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArgument(argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup();  cmd  =  new  CommandLine();  cmd.addArgument(argument);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
353	[BUG]  [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd  =  new  CommandLine();  cmd.addArgument(argument);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd  =  new  CommandLine();  cmd.addArgument(argument);  }	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArgument(argument);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
354	[BUG]  [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	if(cmd  ==  null)  {  cmd  =  new  CommandLine();  cmd.addArg(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cmd    =    new    CommandLine();    cmd.addArg(argument);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
355	[BUG]  [BUGGY]  parse(currentToken,  arguments)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parse(currentToken,  arguments)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parse(currentToken,  arguments)  {  cmd  =  currentToken.substring(0,  stopAtNonOption);  }	  parse(currentToken,    stopAtNonOption)    {    cmd    =    currentToken.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
356	[BUG]  [BUGGY]  return(this.parsing  ==  null)?  null  :  this.parameters;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(this.parsing  ==  null)?  null  :  this.parameters;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(this.parsing  ==  null)?  null  :  this.parameters;	  return(this.parameters!=    null)?    null    :    this.parameters;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
357	[BUG]  [BUGGY]  this.cmd  =  new  Commandline();  cmd.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.cmd  =  new  Commandline();  cmd.addChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.cmd  =  new  Commandline();  cmd.addChangeListener(this);	  if(stopAtNonOption)    {    cmd    =    new    Commandline();    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
358	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  cmd.addChangeListener(this);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  cmd.addChangeListener(this);	  if(stopAtNonOption)    {    cmd    =    new    Commandline();    cmd.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
359	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  argument);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  argument);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
360	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  arguments);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  arguments);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
361	[BUG]  [BUGGY]  return  this.defaultParser.parse(argument,  arguments[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return  this.defaultParser.parse(argument,  arguments[0],  stopAtNonOption);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return  this.defaultParser.parse(argument,  arguments[0],  stopAtNonOption);	  return    this.defaultParser.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
362	[BUG]  [BUGGY]  return(stopAtNonOption)?  null  :  stopAtNonOption  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(stopAtNonOption)?  null  :  stopAtNonOption  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(stopAtNonOption)?  null  :  stopAtNonOption  +  1;	  return(stopAtNonOption)?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
363	[BUG]  [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  ==  null  &&  stopAtNonOption)  {  cmd  =  new  CommandLine();  cmd.addArg(argument,  skipParsing);  }	  parent    ==    null    &&    stopAtNonOption)    {    cmd    =    new    CommandLine();    cmd.addArg(argument,    skipParsing);    }    else    {    cmd.addArg(argument);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
364	[BUG]  [BUGGY]  this.parent  ==  null  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  this.parent  ==  null  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	this.parent  ==  null  &&!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
365	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  block);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  block);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	Option  cmd  =  currentOption.parseOption(argument,  block);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
366	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(0,  currentToken.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.substring(0,  currentToken.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.substring(0,  currentToken.length()  -  1);	  return(currentToken    ==    null)?    null    :    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
367	[BUG]  [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.trim()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  return(currentToken  ==  null)?  null  :  currentToken.trim()  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	return(currentToken  ==  null)?  null  :  currentToken.trim()  +  1;	  return(currentToken    ==    null)?    null    :    currentToken.trim();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
368	[BUG]  [BUGGY]  parent  =  group.getParser(currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  group.getParser(currentToken);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  group.getParser(currentToken);	  parent    =    group.getParser();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
369	[BUG]  [BUGGY]  parent  =  group.getParserSection();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  parent  =  group.getParserSection();  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	parent  =  group.getParserSection();	  parent    =    group.getParser();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
370	[BUG]  [BUGGY]  cmd.addArg(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.addArg(stopAtNonOption);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.addArg(stopAtNonOption);	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
371	[BUG]  [BUGGY]  cmd.add(new  CommandLine());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  cmd.add(new  CommandLine());  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	cmd.add(new  CommandLine());	  if(stopAtNonOption)    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
372	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments[0]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      }  checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments[0]);  [BUGGY]      return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	OptionGroup  group  =  options.getOptionGroup(arguments[0]);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
