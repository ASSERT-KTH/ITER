projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(currentToken==null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(currentToken!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(currentToken!=null){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returncmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}else{cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[0]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument,skipParsing);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnnull;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken!=null)?null:currentToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options!=null)?null:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?null:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options!=null)?options:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132optionGroup.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentToken.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null||stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null||stopAtNonOption){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&currentToken!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(currentToken!=null){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null)?null:this.defaultParser;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser!=null)?null:this.defaultParser;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null?null:this.defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd!=null)?null:this.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:this.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null||!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters!=null)?null:this.parameters;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:this.parameters;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.length;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[0]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd==null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null?this.defaultParser:defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?false:this.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[1]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandline();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,parent);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd==null){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd!=null){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132pullParsing(currentToken){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:arguments.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters!=null)?this.parameters:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.cmd=newCommandLine();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.substring(0,this.currentToken.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(stopAtNonOption)?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132aughtExceptionHandler(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132aughtExceptionHandler(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?options:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=parent.getParent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.options.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||!stopAtNonOption){thrownewIllegalArgumentException(".");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options||arguments.length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addChangeListener(this);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.defaultParser==null)returnnull;if(this.defaultParser!=null)returnnull;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,currentToken.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.cmd!=null)returnnull;if(this.cmd!=null)returnnull;if(!stopAtNonOption){returnfalse;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?false:this.cmd.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?false:this.cmd.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?false:this.cmd.trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=currentToken.substring(2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,stopAtNonOption){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption)returnnull;if(currentToken!=null){returncurrentToken;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption)returnnull;if(currentToken==null){returncurrentToken;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){returnnull;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parseExceptionHandler(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parseExceptionHandler(currentToken,arguments,stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,stopAtNonOption+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,stopAtNonOption)+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,stopAtNonOption-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentToken.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=optionGroup.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||!stopAtNonOption){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||skipParsing){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||currentOption){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?options:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?this.options:options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?arguments:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=optionGroup.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returncmd.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd!=null)?null:this.cmd.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Stringcmd=this.cmd.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParser(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParser(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.getOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options!=null)?null:options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption&&cmd.length()>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroup.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=currentToken.substring(1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd=currentToken.substring(0,currentToken.length()-1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&cmd!=stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&cmd==stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(stopAtNonOption)?null:stopToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(stopAtNonOption)?null:stopAtNonOption.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(stopAtNonOption)?null:stopAtNonOption.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||!stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||skipParsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||currentOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132allowParsing(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132aughtExceptionHandler(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132allowParsing(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd.addChangeListener(this);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(currentToken!=null){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption?null:stopToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption,cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandline();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument,StopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){this.cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){this.cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(arguments==null)?null:arguments.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(arguments!=null)?null:arguments.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(arguments==null)?null:this.parameters.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=currentOption.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(stackToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.options.removeChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.options.setChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument[0],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument[0],blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArgument(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parseExceptionHandler(currentToken,arguments,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parseExceptionHandler(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parsingExceptionHandler(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters!=null?null:this.parameters.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters==null?null:this.parameters.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.toString()+"n";
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:this.cmd.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:this.cmd.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken!=null)?null:currentToken.trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,endAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.defaultParser!=null)returnnull;if(this.defaultParser!=null)returnnull;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.defaultParser!=null)returnnull;if(this.defaultParser!=null)returnnull;if(!stopAtNonOption){returnfalse;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parsing(currentToken){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){pullParsing(currentToken){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument,endAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentToken.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(arguments[currentToken]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.length-1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnarguments.length;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.length+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.length-arguments.length;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=currentOption.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArgument(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[0]);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null&&currentToken!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null||currentToken!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(arguments!=null)?this.parameters:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?this.parameters:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?arguments:this.parameters;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(options,stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addAll(stopAtNonOption){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();if(stopAtNonOption){cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=currentOption.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getArgumentGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[1]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[1]);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:this.parameters.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:this.parameters.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser!=null?this.defaultParser:defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(defaultParser==null?this.defaultParser:defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,StopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,argument){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,arguments){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,arguments,stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,options,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options!=null)?this.options:options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options!=null)?arguments:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters!=null)?null:this.parameters.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.removeChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132allowParsing(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null||stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,parent);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,parent);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(0,currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(currentToken.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(currentToken.length()+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(currentToken.length(),arguments.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.options!=null)returnnull;if(this.options!=null)returnnull;if(!stopAtNonOption){returnfalse;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.options!=null)returnnull;if(this.options!=null)returnnull;if(this.options!=null){returnthis.options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=cmd.getParent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=this.parent.getParent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.options();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.options.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.options.null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){Optiongroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser!=null?null:this.defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?null:this.options.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?null:this.options.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.substring(0,this.currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returncmd.substring(0,this.currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.currentToken.substring(0,this.currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(cmd,stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument[0]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=optionGroup.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(skippedParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null)?null:this.defaultParser.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null)?null:this.defaultParser.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption?null:cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=currentOption.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?null:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?null:options.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(skipParsing){if(cmd==null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.options.addChangeListener(this,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters!=null?null:this.parameters.length;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.removeChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addChangeListener(this,this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addChangeListener(this,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||stopAtNonOption){cmd.addArg(newCommandLine());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(options,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument[0],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options!=null)?options:options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd==null){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd!=null){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options!=null)?null:options.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,stopAtNonOption){if(cmd!=null){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken.substring(0,stopAtNonOption)){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,block){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,arguments,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132pending){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options!=null)?null:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addArg(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:newCommandLine(this.cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options|options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options&&arguments.length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(skipParsing){if(cmd!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption&&cmd.startsWith("-"));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd!=null)?false:this.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?true:this.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(options!=null){OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(cmd==null){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.defaultParser!=null)?null:this.defaultParser;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:this.parameters[0];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.toString(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.parameters.toString()+arguments.length;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||currentToken.startsWith("-")){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters!=null)?arguments:this.parameters;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null?this.defaultParser:this.defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser!=null?this.defaultParser:this.defaultParser);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParser(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.cmd=newCommandLine();cmd.addChangeListener(this,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getArgumentGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132optionGroup.removeChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:this.cmd+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132pendingParsing){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optiongroup=options.getOption("group");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,parent);}else{cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=currentToken.substring(1);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent!=null&&!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.options==null)?options:options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132&&!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132pulsing(currentToken){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken!=null)?null:currentToken.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.toString()+"n";
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){returnthis;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132thrownewIllegalArgumentException("");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132options.addChangeListener(this,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132aughtExceptionHandler(currentToken,argument,stopAtNonOption){cmd=currentToken.substring(2);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parentToken=currentToken.substring(0,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||currentToken!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.cmd!=null)?null:this.cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(defaultToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parsingExceptionHandler(currentToken,arguments,stopAtNonOption){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument[1]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken!=null)?null:currentToken.substring(currentToken.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&cmd!=null){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&cmd!=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=optionGroup.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument[0]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||currentToken!=null){cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addChangeListener(this);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument[0]);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument[0]);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.options,expectedOpts;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){this.cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd!=null){this.cmd=newCommandLine();cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:this.cmd.trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(this.options!=null)?null:this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options&&this.defaultToken!=null&&this.defaultToken.length()>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options||arguments.length==0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption?null:blockAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132warning=stopAtNonOption?null:warning.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132[Delete]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArgument(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.currentToken.substring(0,this.cmd.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.options.addChangeListener(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addAsParser(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addValueListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addParser(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132warning){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine(skipped);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=option.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=currentToken.substring(0,currentToken.length()-2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.toString()+":"+this.optionGroup.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(argument==null)?null:arguments.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parameters==null)?null:arguments[0].toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132||!stopAtNonOption){returnnewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(argument[0],"");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=this.currentToken.substring(0,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption?options.stopAtNonOption:options.stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption&&cmd.startsWith("-");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();cmd=newCommandLine();cmd.addArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArgument(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parse(currentToken,arguments){cmd=currentToken.substring(0,stopAtNonOption);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.parsing==null)?null:this.parameters;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.cmd=newCommandline();cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.stopAtNonOption=stopAtNonOption&&cmd.addChangeListener(this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(currentToken,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.parse(argument,arguments[0],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(stopAtNonOption)?null:stopAtNonOption+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent==null&&stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,skipParsing);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132this.parent==null&&!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.substring(0,currentToken.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken.trim()+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParser(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132parent=group.getParserSection();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.addArg(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd.add(newCommandLine());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(arguments[0]);
