projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[expectedOpts.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[expectedOpts.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length+1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-4]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[2];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=argument.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(),argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()+1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()-1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()*2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[arguments.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.toLowerCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.length()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().substring(0,argument.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Optiongroup=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,arguments.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=argument.substring(0,argument.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,argument.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[ARGUMENTS.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()-2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expected
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[3];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<arguments.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=argument.substring(0,argument.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,argument.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=argument.substring(0,arguments.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];System.arraycopy(arguments,0,expectedOpts,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,group,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Optiongroup=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Optiongroup=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Optiongroup=options.getOption(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument.toLowerCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,arguments.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])ARGUMENTS.toArray(newString[argument.length()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,false);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,true,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleRawArgument(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().substring(0,argument.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().substring(0,arguments.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().substring(0,arguments.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,arguments,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.length()+1];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.length()];expectedOpts[currentToken.length()]=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[5];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length()];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length()];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()!=0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,expectedOpts,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,expectedOpts,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,preferredOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,0,argument.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,0,arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,1,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,0,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(currentOption,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken().trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken()+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,0,argument.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,0,arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,1,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=argument.toString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=argument.toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,arguments,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.size()+1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.size()-1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=arguments.toArray(newString[argument.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<arguments.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<argument.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120For(inti=0;i<arguments.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])args.toArray(newString[argument.length()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=argument.getToken(),currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken(),currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments[currentOption.getToken()],argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken(),argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,option);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<argument.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[size()];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length/2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,null,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,arguments,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,blockParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+3];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length()];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length()];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,expectedOpts,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,expectedOpts,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[arguments.size()+1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[arguments.size()-1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=arguments.toArray(newString[arguments.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-1];for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument+1).toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument/1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Option[]expectedOpts=newOption[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().toLowerCase().trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,0,argument.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,0,arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,blockAtNonOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.length-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expected
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expected
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expected
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expected
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Option[]expectedOpts=newOption[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,arguments.length()));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.tokenTo(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=argument.tokenTo(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argumentargument=currentOption.tokenTo(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,arguments,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<arguments.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<argument.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[size()];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.toUpperCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.toLowerCase(),true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.toLowerCase()+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()+2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()/2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().toLowerCase(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().toLowerCase()+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().toUpperCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Option[]expectedOpts=newOption[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,false);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,true,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument.toLowerCase(),true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockAtNonOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockParsing,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockParsing,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[6];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-3]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.size()+1];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.size()];expectedOpts[currentToken.length()]=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.size()];expectedOpts[currentToken.length()]=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.size()];expectedOpts[currentToken.length()]=Argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length-1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Option[]expectedOpts=newOption[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length+2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length+3]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.size()];expectedOpts[currentToken.length()]=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[args.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||argument.length()==0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];for(inti=0;i<arguments.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=arguments[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=options.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getString();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.get(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,stopAtNonOption,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[6];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,properties);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length*1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-1));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,blockAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(),arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(),argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.size()];expectedOpts[currentToken.length()]=Argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];System.arraycopy(arguments,0,expectedOpts,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,1,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];for(inti=0;i<arguments.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,options,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.size()];expectedOpts[currentToken.length()+1]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleOption(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,argument.length()));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,properties);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentToken,endAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=argument.substring(0,argument.length()));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,blockParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,properties,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,properties,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=arguments[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=argument;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,preferredOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,properties);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().trim(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=newString[currentToken.length()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument*1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument-2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument-1+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().substring(0,argument.length()));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=arguments[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=newString[currentToken.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=currentToken.substring(0,currentToken.length()-1);expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length*1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockAtNonOption,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||argument.length()==0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()!=0){String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument)+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.length+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length*4]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.toLowerCase(),arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1]);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,argument.toLowerCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().trim(),argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken,endAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,currentToken,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1]);for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1);for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,false);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,currentToken,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,preferredOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,group,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,null,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1]);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArrayList<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.size()+1];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=argument;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentToken,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleUnknownArgument(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,currentToken,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,options,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Optiongroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.size()+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(argument)+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1]);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.size()];expectedOpts[currentToken.length()]=Argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<arguments.length;++i){expectedOpts[i]=argument[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<arguments.length;++i){expectedOpts[i]=argument;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<arguments.length;++i){expectedOpts[i]=arguments[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument.trim());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument.toUpperCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().trim().toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120List<String>expectedOpts=newArrayList<String>(arguments.length+1]);for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.size()+1];expectedOpts[currentToken.length()]=argument;
