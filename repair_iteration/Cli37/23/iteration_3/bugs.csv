bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handleMissingError(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingError(argument,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingError(argument,  currentOption);	  handleMissingError(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
2	[BUG]  [BUGGY]  handleMissingError(argument,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingError(argument,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingError(argument,  null);	  handleMissingError(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
3	[BUG]  [BUGGY]  handleMissingError(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingError(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingError(argument,  currentToken);	  handleMissingError(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
4	[BUG]  [BUGGY]  handleMissingError(argument,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingError(argument,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingError(argument,  0);	  handleMissingError(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
5	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[3];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[3];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[3];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
6	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
7	[BUG]  [BUGGY]  String  currentToken  =  argument.substring(0,  argument.length());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  argument.substring(0,  argument.length());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  argument.substring(0,  argument.length());	  String    currentToken    =    argument.substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
8	[BUG]  [BUGGY]  String  currentToken  =  arguments.substring(0,  argument.length());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  arguments.substring(0,  argument.length());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  arguments.substring(0,  argument.length());	  String    currentToken    =    argument.substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
9	[BUG]  [BUGGY]  String  currentToken  =  argument.substring(0,  arguments.length());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  argument.substring(0,  arguments.length());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  argument.substring(0,  arguments.length());	  String    currentToken    =    argument.substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
10	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  handleError(argument,  group,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  group,  currentOption);	  handleError(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
13	[BUG]  [BUGGY]  handleError(argument,  group,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  group,  0);	  handleError(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
14	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  argument);	  String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  stopAtNonOption);	  String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  0);	  String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  argument);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  argument);	  String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  handleParsing(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  currentToken);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
19	[BUG]  [BUGGY]  handleParsing(argument,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  group);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
20	[BUG]  [BUGGY]  handleParsing(argument,  group,  currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  group,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  group,  currentOption);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
21	[BUG]  [BUGGY]  handleParsing(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  stopAtNonOption);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
22	[BUG]  [BUGGY]  parse(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  stopAtNonOption);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
23	[BUG]  [BUGGY]  parse(argument,  group,  currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  currentOption,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  currentOption,  stopAtNonOption);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
24	[BUG]  [BUGGY]  parse(argument,  currentOption,  group);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentOption,  group);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  group);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
25	[BUG]  [BUGGY]  parse(argument,  currentOption,  block);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentOption,  block);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  block);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
26	[BUG]  [BUGGY]  Option  group  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option  group  =  options.getOption(argument,  stopAtNonOption);	  Option    group    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
27	[BUG]  [BUGGY]  Option  group  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.getOption(argument,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option  group  =  options.getOption(argument,  currentToken);	  Option    group    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
28	[BUG]  [BUGGY]  Option  group  =  options.getOption(argument,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.getOption(argument,  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option  group  =  options.getOption(argument,  true);	  Option    group    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
29	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    handleToken(argument);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
30	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    handleToken(argument);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
31	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    handleToken(argument);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
32	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument.toLowerCase());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken(argument.toLowerCase());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument.toLowerCase());	  String    currentToken    =    getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
33	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken(argument,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument,  0);	  String    currentToken    =    getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
34	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument,  null);	  String    currentToken    =    getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
35	[BUG]  [BUGGY]  String  currentToken  =  arguments.substring(0,  arguments.length());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  arguments.substring(0,  arguments.length());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  arguments.substring(0,  arguments.length());	  String    currentToken    =    arguments.substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
36	[BUG]  [BUGGY]  parse(argument,  null,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  group,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  group,  stopAtNonOption);	  parse(argument,    null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
37	[BUG]  [BUGGY]  parse(argument,  null,  block);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  block);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  block);	  parse(argument,    null,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
38	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])ARGUMENTS.toArray(new  String[argument.length()]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])ARGUMENTS.toArray(new  String[argument.length()]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])ARGUMENTS.toArray(new  String[argument.length()]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    -    2]);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
39	[BUG]  [BUGGY]  handleArgument(argument,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  false);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
40	[BUG]  [BUGGY]  handleArgument(argument,  true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  true,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  true,  stopAtNonOption);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
41	[BUG]  [BUGGY]  handleRawArgument(argument,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleRawArgument(argument,  true);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleRawArgument(argument,  true);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
42	[BUG]  [BUGGY]  String  currentToken  =  getToken().substring(0,  argument.length());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().substring(0,  argument.length());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().substring(0,  argument.length());	  String    currentToken    =    getToken().substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
43	[BUG]  [BUGGY]  String  currentToken  =  getToken().substring(0,  arguments.length()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().substring(0,  arguments.length()  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().substring(0,  arguments.length()  -  1);	  String    currentToken    =    getToken().substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
44	[BUG]  [BUGGY]  String  currentToken  =  getToken().substring(0,  arguments.length());  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().substring(0,  arguments.length());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().substring(0,  arguments.length());	  String    currentToken    =    getToken().substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
45	[BUG]  [BUGGY]  handleMissingName(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  arguments,  null);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
46	[BUG]  [BUGGY]  handleMissingName(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null,  group);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
47	[BUG]  [BUGGY]  handleMissingName(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null,  currentOption);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
48	[BUG]  [BUGGY]  handleMissingName(argument,  null,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null,  currentToken);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
49	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.length()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.length()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.length()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[currentToken.length()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
50	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  arguments;	  String[]    expectedOpts    =    new    String[currentToken.length()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
51	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[currentToken.length()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
52	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[5];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[5];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[5];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[4];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
53	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
54	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
55	[BUG]  [BUGGY]  handleMissingName(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  group,  stopAtNonOption);	  handleMissingName(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
56	[BUG]  [BUGGY]  handleMissingName(argument,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  group);	  handleMissingName(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
57	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
58	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
59	[BUG]  [BUGGY]  ||  arguments.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
60	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  expectedOpts,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  expectedOpts,  stopAtNonOption);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
61	[BUG]  [BUGGY]  handleToken(argument,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  expectedOpts,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  expectedOpts,  currentOption);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  handleToken(argument,  group,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  currentOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  currentOption,  expectedOpts);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  preferredOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  preferredOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  preferredOpts);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  handleToken(argument,  options,  currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  options,  currentOption);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
65	[BUG]  [BUGGY]  handleToken(argument,  options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  options,  expectedOpts);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
66	[BUG]  [BUGGY]  handleToken(argument,  options,  group);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  options,  group);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
67	[BUG]  [BUGGY]  handleError(argument,  0,  argument.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  0,  argument.length);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  0,  argument.length);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
68	[BUG]  [BUGGY]  handleError(argument,  0,  arguments.length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  0,  arguments.length);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  0,  arguments.length);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
69	[BUG]  [BUGGY]  handleError(argument,  1,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  1,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  1,  0);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
70	[BUG]  [BUGGY]  handleError(argument,  0,  argument);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  0,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  0,  argument);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
71	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
72	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
73	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
74	[BUG]  [BUGGY]  handleError(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  currentToken);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
75	[BUG]  [BUGGY]  handleError(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  currentOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  currentOption,  expectedOpts);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
76	[BUG]  [BUGGY]  handleError(currentOption,  argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(currentOption,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(currentOption,  argument);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
77	[BUG]  [BUGGY]  parse(argument,  null,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  currentOption,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentOption,  expectedOpts);	  parse(argument,    null,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
78	[BUG]  [BUGGY]  parse(argument,  null,  group,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  group,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  group,  currentOption);	  parse(argument,    null,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
79	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken().trim();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken().trim();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getToken().trim();	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken()  +  1;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getToken()  +  1;	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  handleMissingName(argument,  0,  argument.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  0,  argument.length);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  0,  argument.length);	  handleMissingName(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
82	[BUG]  [BUGGY]  handleMissingName(argument,  0,  arguments.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  0,  arguments.length);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  0,  arguments.length);	  handleMissingName(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
83	[BUG]  [BUGGY]  handleMissingName(argument,  1,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  1,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  1,  0);	  handleMissingName(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
84	[BUG]  [BUGGY]  handleMissingArgument(argument,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  group);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
85	[BUG]  [BUGGY]  Argument  currentToken  =  argument.toString();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.toString();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  argument.toString();	  Argument    currentToken    =    argument.getToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  Argument  currentToken  =  argument.toLowerCase();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  argument.toLowerCase();	  Argument    currentToken    =    argument.getToken();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
87	[BUG]  [BUGGY]  handleArgument(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  arguments,  null);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
88	[BUG]  [BUGGY]  handleArgument(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  group);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
89	[BUG]  [BUGGY]  handleArgument(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  0);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
90	[BUG]  [BUGGY]  handleArgument(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  currentOption);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
91	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  +  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  +  1]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
92	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  -  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  -  1]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
93	[BUG]  [BUGGY]  String[]  expectedOpts  =  arguments.toArray(new  String[argument.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  arguments.toArray(new  String[argument.size()  ]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  arguments.toArray(new  String[argument.size()  ]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
94	[BUG]  [BUGGY]  handleToken(argument,  group,  currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  currentOption,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  currentOption,  stopAtNonOption);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
95	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  group,  stopAtNonOption);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
96	[BUG]  [BUGGY]  handleToken(argument,  options,  currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  currentOption,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  options,  currentOption,  stopAtNonOption);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
97	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  block);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  block);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	For(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  handleArgument(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  currentToken);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
102	[BUG]  [BUGGY]  handleArgument(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  currentOption,  expectedOpts);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
103	[BUG]  [BUGGY]  handleArgument(argument,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  group);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
104	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    requiredOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
105	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    requiredOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
106	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    requiredOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
107	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])args.toArray(new  String[argument.length()]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])args.toArray(new  String[argument.length()]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])args.toArray(new  String[argument.length()]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
108	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);	  String[]    expectedOpts    =    new    String[0];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
109	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  argument);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  argument);	  String[]    expectedOpts    =    new    String[0];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
110	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  1);	  String[]    expectedOpts    =    new    String[0];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
111	[BUG]  [BUGGY]  Argument  currentToken  =  argument.getToken(),  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.getToken(),  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  argument.getToken(),  currentOption);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
112	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken(),  currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken(),  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getToken(),  currentOption);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
113	[BUG]  [BUGGY]  Argument  currentToken  =  arguments[currentOption.getToken()  ],  argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments[currentOption.getToken()  ],  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments[currentOption.getToken()  ],  argument);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
114	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken(),  argument);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken(),  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getToken(),  argument);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
115	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
116	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
117	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  group);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  group);	  handleToken(argument,    group,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
118	[BUG]  [BUGGY]  handleToken(argument,  group,  options);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  options);	  handleToken(argument,    group,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
119	[BUG]  [BUGGY]  handleToken(argument,  group,  option);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  option);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  option);	  handleToken(argument,    group,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
120	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
121	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[size()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[size()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[size()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
122	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  /  2]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  /  2]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  /  2]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    -    2]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
123	[BUG]  [BUGGY]  handleError(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  null,  stopAtNonOption);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
124	[BUG]  [BUGGY]  handleError(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  null,  group);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
125	[BUG]  [BUGGY]  handleError(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  arguments,  null);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
126	[BUG]  [BUGGY]  handleError(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  null,  0);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
127	[BUG]  [BUGGY]  handleMissingName(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  blockParsing);	  handleMissingName(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
128	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken(argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getToken(argument);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
129	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  null);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
130	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  0);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
131	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
132	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
133	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  3];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  3];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  3];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
134	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
135	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
136	[BUG]  [BUGGY]  parse(argument,  currentOption,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentOption,  expectedOpts,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  expectedOpts,  stopAtNonOption);	  parse(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
137	[BUG]  [BUGGY]  parse(argument,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  expectedOpts,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  expectedOpts,  currentOption);	  parse(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
138	[BUG]  [BUGGY]  parse(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  expectedOpts);	  parse(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
139	[BUG]  [BUGGY]  parse(argument,  group,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  currentOption,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  currentOption,  expectedOpts);	  parse(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
140	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  +  1]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  +  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  +  1]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
141	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  -  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  -  1]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
142	[BUG]  [BUGGY]  String[]  expectedOpts  =  arguments.toArray(new  String[arguments.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  arguments.toArray(new  String[arguments.size()  ]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  arguments.toArray(new  String[arguments.size()  ]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
143	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
144	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
145	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
146	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  +  1).toLowerCase();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument  +  1).toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  +  1).toLowerCase();	  String    currentToken    =(String)arguments.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
147	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  /  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument  /  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  /  1);	  String    currentToken    =(String)arguments.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
148	[BUG]  [BUGGY]  handleToken(argument,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  expectedOpts);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
149	[BUG]  [BUGGY]  handleToken(argument,  cmd);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  cmd);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  cmd);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
150	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
151	[BUG]  [BUGGY]  Option[]  expectedOpts  =  new  Option[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option[]  expectedOpts  =  new  Option[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option[]  expectedOpts  =  new  Option[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
152	[BUG]  [BUGGY]  String  currentToken  =  getToken().toLowerCase().trim();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().toLowerCase().trim();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().toLowerCase().trim();	  String    currentToken    =    getToken().trim();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
153	[BUG]  [BUGGY]  parse(argument,  null,  0,  argument.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  0,  argument.length);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  0,  argument.length);	  parse(argument,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
154	[BUG]  [BUGGY]  parse(argument,  null,  0,  arguments.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  0,  arguments.length);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  0,  arguments.length);	  parse(argument,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
155	[BUG]  [BUGGY]  parse(argument,  null,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  1);	  parse(argument,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
156	[BUG]  [BUGGY]  parse(argument,  null,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  currentToken,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentToken,  stopAtNonOption);	  parse(argument,    null,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
157	[BUG]  [BUGGY]  parse(argument,  null,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  currentToken,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentToken,  expectedOpts);	  parse(argument,    null,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
158	[BUG]  [BUGGY]  parse(argument,  null,  currentToken,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  currentToken,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentToken,  0);	  parse(argument,    null,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
159	[BUG]  [BUGGY]  parse(argument,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  null);	  parse(argument,    null,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
160	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockAtNonOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  blockAtNonOption,  expectedOpts);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
161	[BUG]  [BUGGY]  handleToken(argument,  group,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  blockAtNonOption);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
162	[BUG]  [BUGGY]  handleToken(argument,  block);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  block);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
163	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument.length  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.length  -  1);	  String    currentToken    =(String)arguments.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
164	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
165	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
166	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
167	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
168	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
169	[BUG]  [BUGGY]  Option[]  expectedOpts  =  new  Option[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option[]  expectedOpts  =  new  Option[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option[]  expectedOpts  =  new  Option[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
170	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
171	[BUG]  [BUGGY]  String  currentToken  =  arguments.substring(0,  arguments.length()));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  arguments.substring(0,  arguments.length()));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  arguments.substring(0,  arguments.length()));	  String    currentToken    =    arguments.substring(0,    arguments.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
172	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
173	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
174	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.tokenTo(currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.tokenTo(currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.tokenTo(currentOption);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
175	[BUG]  [BUGGY]  Argument  currentToken  =  argument.tokenTo(currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.tokenTo(currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  argument.tokenTo(currentOption);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
176	[BUG]  [BUGGY]  Argument  argument  =  currentOption.tokenTo(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  argument  =  currentOption.tokenTo(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  argument  =  currentOption.tokenTo(argument);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
177	[BUG]  [BUGGY]  handleMissingArgument(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  arguments,  null);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
178	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  null,  group);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
179	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  null,  currentToken);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
180	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  null,  0);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
181	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  if(argument.length()    ==    0)    {    List    <    String>    expectedOpts    =    new    ArrayList    <    String>();    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
182	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[	  if(argument.length()    ==    0)    {    List    <    String>    expectedOpts    =    new    ArrayList    <    String>();    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
183	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[	  if(argument.length()    ==    0)    {    List    <    String>    expectedOpts    =    new    ArrayList    <    String>();    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
184	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  if(argument.length()!=    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
185	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
186	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  argument.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
187	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[size()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[size()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[size()  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
188	[BUG]  [BUGGY]  handleArgument(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  group,  stopAtNonOption);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
189	[BUG]  [BUGGY]  handleArgument(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  currentToken,  stopAtNonOption);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
190	[BUG]  [BUGGY]  parse(argument,  properties,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  null,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  null,  stopAtNonOption);	  parse(argument,    properties,    null);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
191	[BUG]  [BUGGY]  parse(argument,  properties,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  this);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  this);	  parse(argument,    properties,    null);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
192	[BUG]  [BUGGY]  parse(argument,  properties,  currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  currentOption);	  parse(argument,    properties,    null);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
193	[BUG]  [BUGGY]  parse(argument,  properties,  group);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  group);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  group);	  parse(argument,    properties,    null);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
194	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.toUpperCase());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument.toUpperCase());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.toUpperCase());	  String    currentToken    =(String)arguments.get(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
195	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase(),  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.toLowerCase(),  true);	  String    currentToken    =(String)arguments.get(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
196	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase()  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.toLowerCase()  +  1);	  String    currentToken    =(String)arguments.get(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
197	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  +  2]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  +  2]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  +  2]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    *    2]);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
198	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  /  2]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  /  2]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  /  2]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    *    2]);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
199	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
200	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
201	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
202	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
203	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  String[]    expectedOpts    =    new    String[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
204	[BUG]  [BUGGY]  parse(argument,  currentToken,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  0);	  parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
205	[BUG]  [BUGGY]  String  currentToken  =  getToken().toLowerCase(argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().toLowerCase(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().toLowerCase(argument);	  String    currentToken    =    getToken().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
206	[BUG]  [BUGGY]  String  currentToken  =  getToken().toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().toLowerCase()  +  1;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().toLowerCase()  +  1;	  String    currentToken    =    getToken().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
207	[BUG]  [BUGGY]  String  currentToken  =  getToken().toUpperCase();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().toUpperCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().toUpperCase();	  String    currentToken    =    getToken().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
208	[BUG]  [BUGGY]  handleMissingArgument(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  group,  stopAtNonOption);	  handleMissingArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
209	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
210	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
211	[BUG]  [BUGGY]  Option[]  expectedOpts  =  new  Option[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option[]  expectedOpts  =  new  Option[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option[]  expectedOpts  =  new  Option[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
212	[BUG]  [BUGGY]  handleMissingArgument(argument,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  false);	  handleMissingArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
213	[BUG]  [BUGGY]  handleMissingArgument(argument,  true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  true,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  true,  stopAtNonOption);	  handleMissingArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
214	[BUG]  [BUGGY]  handleMissingArgument(argument.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument.toLowerCase(),  true);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument.toLowerCase(),  true);	  handleMissingArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
215	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  currentToken,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  currentToken,  expectedOpts);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
216	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  currentToken,  stopAtNonOption);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
217	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  currentToken,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  currentToken,  null);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
218	[BUG]  [BUGGY]  parse(argument,  blockAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  blockAtNonOption,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockAtNonOption,  expectedOpts);	  parse(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
219	[BUG]  [BUGGY]  parse(argument,  blockAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  blockAtNonOption,  group);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockAtNonOption,  group);	  parse(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
220	[BUG]  [BUGGY]  handleError(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  group,  stopAtNonOption);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
221	[BUG]  [BUGGY]  handleError(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  currentToken,  stopAtNonOption);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
222	[BUG]  [BUGGY]  parse(argument,  blockParsing,  currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  blockParsing,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockParsing,  currentOption);	  parse(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
223	[BUG]  [BUGGY]  parse(argument,  blockParsing,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  blockParsing,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockParsing,  stopAtNonOption);	  parse(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
224	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[6];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[6];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[6];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[4];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
225	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  3]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  3]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  3]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    -    1]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
226	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[currentToken.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
227	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;	  String[]    expectedOpts    =    new    String[currentToken.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
228	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  currentToken,  expectedOpts);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
229	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  currentToken,  null);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
230	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  currentToken,  0);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
231	[BUG]  [BUGGY]  parse(argument,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  expectedOpts);	  parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
232	[BUG]  [BUGGY]  parse(argument,  group,  currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  currentOption);	  parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
233	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;	  String[]    expectedOpts    =    new    String[arguments.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
234	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;	  String[]    expectedOpts    =    new    String[arguments.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
235	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
236	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  -  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
237	[BUG]  [BUGGY]  Option[]  expectedOpts  =  new  Option[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option[]  expectedOpts  =  new  Option[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option[]  expectedOpts  =  new  Option[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
238	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  2]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  2]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  2]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    +    1]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
239	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  3]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  3]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  3]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    +    1]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
240	[BUG]  [BUGGY]  handleArg(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  currentOption);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
241	[BUG]  [BUGGY]  handleArg(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  group,  stopAtNonOption);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
242	[BUG]  [BUGGY]  handleArg(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  currentToken,  stopAtNonOption);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
243	[BUG]  [BUGGY]  handleArg(argument,  group);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  group);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
244	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  arguments;	  String[]    expectedOpts    =    new    String[argument.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
245	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[args.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[args.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[args.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[argument.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
246	[BUG]  [BUGGY]  parse(argument,  null,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  group,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  group,  expectedOpts);	  parse(argument,    null,    group);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
247	[BUG]  [BUGGY]  parse(argument,  null,  group,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  group,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  group,  0);	  parse(argument,    null,    group);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
248	[BUG]  [BUGGY]  ||  argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
249	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
250	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }	  String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
251	[BUG]  [BUGGY]  parse(argument,  properties,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  currentToken,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  currentToken,  null);	  parse(argument,    properties,    null);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
252	[BUG]  [BUGGY]  Argument  currentToken  =  options.getToken();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  options.getToken();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  options.getToken();	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
253	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getString();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getString();	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
254	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.get(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.get(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.get(argument);	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
255	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
256	[BUG]  [BUGGY]  parse(argument,  null,  currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  currentOption,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentOption,  stopAtNonOption);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
257	[BUG]  [BUGGY]  parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  stopAtNonOption);	  parse(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
258	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  blockAtNonOption);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
259	[BUG]  [BUGGY]  handleToken(argument,  stopAtNonOption,  currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  stopAtNonOption,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  stopAtNonOption,  currentOption);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
260	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  options);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  options);	  handleToken(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
261	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[6];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[6];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[6];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
262	[BUG]  [BUGGY]  handleToken(argument,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  options,  stopAtNonOption);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
263	[BUG]  [BUGGY]  handleToken(argument,  properties);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  properties);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  properties);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
264	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument,  stopAtNonOption);	  String    currentToken    =    getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
265	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  *  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  *  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  *  1]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    -    1]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
266	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  1));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  1));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  1));	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    -    1]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
267	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	  if(argument.length()    ==    0)    {    List    <    String>    expectedOpts    =    new    ArrayList    <    String>();    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
268	[BUG]  [BUGGY]  handleToken(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  stopAtNonOption);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
269	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockAtNonOption,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  blockAtNonOption,  group);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
270	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  arguments);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  arguments);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
271	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
272	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  null,  stopAtNonOption);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
273	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  1]);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  1]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
274	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
275	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  null);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
276	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  0);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
277	[BUG]  [BUGGY]  handleToken(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  stopAtNonOption);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
278	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;	  String[]    expectedOpts    =    new    String[argument.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
279	[BUG]  [BUGGY]  handleArgument(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  blockAtNonOption);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
280	[BUG]  [BUGGY]  parse(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  stopAtNonOption);	  parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
281	[BUG]  [BUGGY]  parse(argument,  group,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  0);	  parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
282	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);	  String[]    expectedOpts    =    new    String[4];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
283	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  0);	  String[]    expectedOpts    =    new    String[4];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
284	[BUG]  [BUGGY]  parse(argument,  null,  1,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  1,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  1,  0);	  parse(argument,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
285	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
286	[BUG]  [BUGGY]  handleMissingName(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null,  stopAtNonOption);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
287	[BUG]  [BUGGY]  handleMissingName(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null,  0);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
288	[BUG]  [BUGGY]  handleMissingName(argument,  options,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  options,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  options,  null);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
289	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  +  1]  =  argument;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  +  1]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  +  1]  =  argument;	  String[]    expectedOpts    =    new    String[arguments.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
290	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
291	[BUG]  [BUGGY]  handleArgument(argument,  options);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  options);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
292	[BUG]  [BUGGY]  handleArgument(argument,  block);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  block);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
293	[BUG]  [BUGGY]  handleOption(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleOption(argument,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleOption(argument,  currentOption);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
294	[BUG]  [BUGGY]  handleParsing(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  currentOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  currentOption,  expectedOpts);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
295	[BUG]  [BUGGY]  String  currentToken  =  arguments.substring(0,  argument.length()));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  arguments.substring(0,  argument.length()));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  arguments.substring(0,  argument.length()));	  String    currentToken    =    arguments.substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
296	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  properties);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  properties);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  properties);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
297	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  arguments);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  arguments);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
298	[BUG]  [BUGGY]  handleMissingArgument(argument,  options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  options);	  handleMissingArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
299	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  currentToken);	  String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
300	[BUG]  [BUGGY]  parse(argument,  null,  currentToken,  endAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  currentToken,  endAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentToken,  endAtNonOption);	  parse(argument,    null,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
301	[BUG]  [BUGGY]  String  currentToken  =  argument.substring(0,  argument.length()));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  argument.substring(0,  argument.length()));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  argument.substring(0,  argument.length()));	  String    currentToken    =    argument.substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
302	[BUG]  [BUGGY]  handleMissingArgument(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  blockParsing);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
303	[BUG]  [BUGGY]  parse(argument,  null,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  blockAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  blockAtNonOption);	  parse(argument,    null,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
304	[BUG]  [BUGGY]  handleError(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  blockAtNonOption);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
305	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  ];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
306	[BUG]  [BUGGY]  handleArgument(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  stopAtNonOption);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
307	[BUG]  [BUGGY]  handleArgument(argument,  properties,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  properties,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  properties,  null);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
308	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
309	[BUG]  [BUGGY]  handleError(argument,  properties,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  properties,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  properties,  null);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
310	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
311	[BUG]  [BUGGY]  handleMissingName(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  blockAtNonOption);	  handleMissingName(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
312	[BUG]  [BUGGY]  handleArg(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  currentToken);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
313	[BUG]  [BUGGY]  handleArg(argument,  options);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  options);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
314	[BUG]  [BUGGY]  handleArg(argument,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  null);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
315	[BUG]  [BUGGY]  handleMissingError(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingError(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingError(argument,  stopAtNonOption);	  handleMissingError(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
316	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
317	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
318	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
319	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  currentToken,  stopAtNonOption);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  argument;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  argument;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  argument;  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
322	[BUG]  [BUGGY]  parse(argument,  currentOption,  preferredOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentOption,  preferredOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  preferredOpts);	  parse(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
323	[BUG]  [BUGGY]  parse(argument,  currentOption,  properties);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentOption,  properties);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  properties);	  parse(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
324	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
325	[BUG]  [BUGGY]  parse(argument,  group,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  null);	  parse(argument,    null,    group);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
326	[BUG]  [BUGGY]  String  currentToken  =  getToken().trim(argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().trim(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().trim(argument);	  String    currentToken    =    getToken().trim();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
327	[BUG]  [BUGGY]  handleError(argument,  options);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  options);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
328	[BUG]  [BUGGY]  String  currentToken  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[currentToken.length()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
329	[BUG]  [BUGGY]  parse(argument,  block);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  block);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  block);	  parse(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
330	[BUG]  [BUGGY]  handleMissingName(argument,  options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  options);	  handleMissingName(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
331	[BUG]  [BUGGY]  handleMissingArgument(argument,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  arguments);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  arguments);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
332	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  *  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument  *  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  *  1);	  String    currentToken    =(String)arguments.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
333	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  -  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument  -  2);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  -  2);	  String    currentToken    =(String)arguments.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
334	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument  -  1  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  -  1  +  1);	  String    currentToken    =(String)arguments.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
335	[BUG]  [BUGGY]  String  currentToken  =  getToken().substring(0,  argument.length()));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().substring(0,  argument.length()));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().substring(0,  argument.length()));	  String    currentToken    =    getToken().substring(0,    argument.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
336	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
337	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
338	[BUG]  [BUGGY]  String  currentToken  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[currentToken.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
339	[BUG]  [BUGGY]  String  currentToken  =  currentToken.substring(0,  currentToken.length()  -  1);  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  currentToken.substring(0,  currentToken.length()  -  1);  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  currentToken.substring(0,  currentToken.length()  -  1);  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[currentToken.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
340	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
341	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  *  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  String[]    expectedOpts    =    new    String[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
342	[BUG]  [BUGGY]  parse(argument,  blockAtNonOption,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  blockAtNonOption,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockAtNonOption,  currentToken);	  parse(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
343	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    handleToken(argument);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
344	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
345	[BUG]  [BUGGY]  ||  argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
346	[BUG]  [BUGGY]  ||  arguments.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }	  ||    arguments.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
347	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }	  Argument[]    expectedOpts    =    new    Argument[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
348	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  null);	  String[]    expectedOpts    =    new    String[2];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
349	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  true);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
350	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument)+  1;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument)+  1;	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
351	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.length  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument.length  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.length  +  1);	  String    currentToken    =(String)arguments.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
352	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  *  4]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  *  4]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  *  4]);	  String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    -    4]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
353	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase(),  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase(),  arguments);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.toLowerCase(),  arguments);	  String    currentToken    =(String)arguments.get(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
354	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    requiredOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
355	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    requiredOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
356	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  argument);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  null,  argument);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
357	[BUG]  [BUGGY]  handleArgument(argument,  null,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  null);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
358	[BUG]  [BUGGY]  handleArgument(argument,  null,  argument.toLowerCase());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  argument.toLowerCase());  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  argument.toLowerCase());	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
359	[BUG]  [BUGGY]  handleArgument(argument,  null,  argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null,  argument);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
360	[BUG]  [BUGGY]  parse(argument,  currentToken,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  arguments,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  arguments,  stopAtNonOption);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
361	[BUG]  [BUGGY]  parse(argument,  currentToken,  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  argument,  stopAtNonOption);	  parse(argument,    currentOption,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
362	[BUG]  [BUGGY]  String  currentToken  =  getToken().trim(),  argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().trim(),  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().trim(),  argument);	  String    currentToken    =    getToken().trim();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
363	[BUG]  [BUGGY]  handleMissingArgument(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  blockAtNonOption);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
364	[BUG]  [BUGGY]  parse(argument,  currentToken,  endAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  currentToken,  endAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken,  endAtNonOption);	  parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
365	[BUG]  [BUGGY]  handleArgument(argument,  currentToken,  currentOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentToken,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  currentToken,  currentOption);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
366	[BUG]  [BUGGY]  handleMissingName(argument,  null,  block);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null,  block);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
367	[BUG]  [BUGGY]  parse(argument,  properties,  null,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  null,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  null,  0);	  parse(argument,    null,    0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
368	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
369	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
370	[BUG]  [BUGGY]  handleMissingName(argument,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  true);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  true);	  handleMissingName(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
371	[BUG]  [BUGGY]  handleMissingName(argument,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  false);	  handleMissingName(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
372	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }	  String[]    expectedOpts    =    new    String[argument.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
373	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  if(argument.length()!=    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
374	[BUG]  [BUGGY]  handleError(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  group,  currentToken);	  handleError(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
375	[BUG]  [BUGGY]  handleError(argument,  group,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  group,  options);	  handleError(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
376	[BUG]  [BUGGY]  handleParsing(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  blockAtNonOption);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
377	[BUG]  [BUGGY]  handleParsing(argument,  currentToken,  currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleParsing(argument,  currentToken,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  currentToken,  currentOption);	  handleParsing(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
378	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  preferredOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  preferredOpts,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  preferredOpts,  expectedOpts);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
379	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  currentOption);	  String[]    expectedOpts    =    new    String[0];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
380	[BUG]  [BUGGY]  parse(argument,  properties,  group,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  properties,  group,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  group,  null);	  parse(argument,    properties,    null);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
381	[BUG]  [BUGGY]  parse(argument,  null,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  null,  group,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  group,  currentToken);	  parse(argument,    null,    group);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
382	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
383	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expected    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
384	[BUG]  [BUGGY]  handleError(argument,  null,  argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  null,  argument);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
385	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
386	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
387	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ArrayList  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	ArrayList  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  if(argument.length()    ==    0)    {    List    <    String>    expectedOpts    =    new    ArrayList    <    String>();    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
388	[BUG]  [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
389	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  }	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
390	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
391	[BUG]  [BUGGY]  handleToken(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentToken);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
392	[BUG]  [BUGGY]  handleToken(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  currentToken);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
393	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[arguments.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
394	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[arguments.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
395	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  argument;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  argument;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  argument;  }	  String[]    expectedOpts    =    new    String[2];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
396	[BUG]  [BUGGY]  handleMissingArgument(argument,  block);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  block);	  handleMissingArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
397	[BUG]  [BUGGY]  handleToken(argument,  currentToken,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentToken,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentToken,  blockAtNonOption);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
398	[BUG]  [BUGGY]  handleUnknownArgument(argument,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleUnknownArgument(argument,  true);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleUnknownArgument(argument,  true);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
399	[BUG]  [BUGGY]  handleError(argument,  currentToken,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  currentToken,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  currentToken,  currentOption);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
400	[BUG]  [BUGGY]  handleToken(argument,  group,  options,  currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  options,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  options,  currentOption);	  handleToken(argument,    group,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
401	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option  group  =  options.getOptionGroup(argument);	  Option    group    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
402	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.size()  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.size()  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.size()  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  Argument[]    expectedOpts    =    new    Argument[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
403	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument)+  1;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument)+  1;	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
404	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
405	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts	  if(argument.length()!=    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
406	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  Argument;	  String[]    expectedOpts    =    new    String[currentToken.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
407	[BUG]  [BUGGY]  handleError(argument,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  1);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  1);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
408	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  argument[i];  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  argument[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  argument[i];  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
409	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  argument;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  argument;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  argument;  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
410	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  arguments.length;  ++i)  {  expectedOpts[i]  =  arguments[i];  }	  for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
411	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument.trim());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken(argument.trim());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument.trim());	  String    currentToken    =    getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
412	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument.toUpperCase());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken(argument.toUpperCase());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument.toUpperCase());	  String    currentToken    =    getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
413	[BUG]  [BUGGY]  String  currentToken  =  getToken().trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  getToken().trim().toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().trim().toLowerCase();	  String    currentToken    =    getToken().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
414	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(arguments.length  +  1]);  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	  String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
415	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	  if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[0];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
416	[BUG]  [BUGGY]  parse(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  parse(argument,  group,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group,  currentToken);	  parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
417	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  +  1];  expectedOpts[currentToken.length()  ]  =  argument;	  String[]    expectedOpts    =    new    String[argument.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
