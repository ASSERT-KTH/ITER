bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  ]);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  ]);  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  ]);		non-compiled	[CE]  illegal  start  of  type	47	None	add
2	[BUG]  [BUGGY]    String[]  expectedOpts  =(String[])arguments.toArray(new  String[expectedOpts.size()  ]);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String[]  expectedOpts  =(String[])arguments.toArray(new  String[expectedOpts.size()  ]);  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String[]  expectedOpts  =(String[])arguments.toArray(new  String[expectedOpts.size()  ]);		non-compiled	[CE]  illegal  start  of  type	47	None	add
3	[BUG]  [BUGGY]    String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  ]);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  ]);  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  ]);		non-compiled	[CE]  illegal  start  of  type	47	None	add
4	[BUG]  [BUGGY]    String[]  expectedOpts  =(String[])arguments.clone();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String[]  expectedOpts  =(String[])arguments.clone();  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String[]  expectedOpts  =(String[])arguments.clone();		non-compiled	[CE]  illegal  start  of  type	47	None	add
5	[BUG]  [BUGGY]    String[]  expectedOpts  =  new  String[expectedOpts.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String[]  expectedOpts  =  new  String[expectedOpts.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String[]  expectedOpts  =  new  String[expectedOpts.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;		non-compiled	[CE]  illegal  start  of  type	47	None	add
6	[BUG]  [BUGGY]  handleMissingArgument(argument);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]  handleMissingArgument(argument);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument);	handleToken(argument);  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
7	[BUG]  [BUGGY]  handleError(argument);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]  handleError(argument);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument);	handleToken(argument);  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
8	[BUG]  [BUGGY]  handleArgument(argument);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]  handleArgument(argument);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument);	handleToken(argument);  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
9	[BUG]  [BUGGY]  handleToken(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]  handleToken(argument,  currentOption);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption);	handleToken(argument);  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
10	[BUG]  [BUGGY]    String  currentToken  =(String)arguments.get(argument);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String  currentToken  =(String)arguments.get(argument);  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String  currentToken  =(String)arguments.get(argument);		non-compiled	[CE]  illegal  start  of  type	47	None	add
11	[BUG]  [BUGGY]    Argument  currentToken  =  currentOption.getToken();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    Argument  currentToken  =  currentOption.getToken();  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    Argument  currentToken  =  currentOption.getToken();		non-compiled	[CE]  illegal  start  of  type	47	None	add
12	[BUG]  [BUGGY]    parse(argument,  null);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    parse(argument,  null);  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    parse(argument,  null);		non-compiled	[CE]  illegal  start  of  type	47	None	add
13	[BUG]  [BUGGY]    parse(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    parse(argument,  currentOption);  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    parse(argument,  currentOption);		non-compiled	[CE]  illegal  start  of  type	47	None	add
14	[BUG]  [BUGGY]    String  currentToken  =  getToken();  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    String  currentToken  =  getToken();  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    String  currentToken  =  getToken();		non-compiled	[CE]  illegal  start  of  type	47	None	add
15	[BUG]  [BUGGY]  handleMissingName(argument);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]  handleMissingName(argument);  [BUGGY]  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument);	handleToken(argument);  	non-compiled	[CE]  illegal  start  of  type	46	None	replace
16	[BUG]  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
17	[BUG]  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]		non-compiled	[CE]  illegal  start  of  type	47	None	add
18	[BUG]  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]		non-compiled	[CE]  illegal  start  of  type	47	None	add
19	[BUG]  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
20	[BUG]  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  [BUGGY]    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [BUGGY]  handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	    if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }		non-compiled	[CE]  illegal  start  of  type	47	None	add
