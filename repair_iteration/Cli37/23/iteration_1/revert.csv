projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[expectedOpts.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[expectedOpts.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length+1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length-4]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[2];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];System.arraycopy(arguments,0,expectedOpts,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=argument.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=arguments.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(),argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()+1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()-1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()*2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[arguments.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument.toLowerCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=(String)arguments.get(argument+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[currentToken.length()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,group,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Argument[]expectedOpts=newArgument[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().trim();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken().substring(0,argument.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[4];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120Optiongroup=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,arguments.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=argument.substring(0,argument.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=arguments.substring(0,argument.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[argument.size()];expectedOpts[currentToken.length()]=argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleError(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingError(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]}handleToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingName(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120StringcurrentToken=getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+2];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=requiredOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleMissingArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArgument(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleToken(argument,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleArg(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,currentOption,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,null,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,properties,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120||arguments.length()==0){String[]expectedOpts=newString[1];System.arraycopy(arguments,0,expectedOpts,expectedOpts,expectedOpts);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120ArgumentcurrentToken=currentOption.tokenTo(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[ARGUMENTS.size()]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120String[]expectedOpts=(String[])arguments.toArray(newString[argument.length()-2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120handleParsing(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expected
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[arguments.length+1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()!=0){String[]expectedOpts=newString[1];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){List<String>expectedOpts=newArrayList<String>();for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120parse(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java120if(argument.length()==0){String[]expectedOpts=newString[0];for(inti=0;i<expectedOpts.length;++i){expectedOpts[i]=expectedOpts[i];}
