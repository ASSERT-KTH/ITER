bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  1]);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  1]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  1]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    ]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  1]);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  1]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  +  1]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    ]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  2]);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  2]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  2]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    ]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  4]);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  4]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length  -  4]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length    ]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
9	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
10	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
11	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[2];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[2];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[2];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
12	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[4];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
13	[BUG]  [BUGGY]  Argument  currentToken  =  argument.getToken();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  argument.getToken();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  argument.getToken();	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  arguments.getToken();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  arguments.getToken();	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument);	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  +  1]);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  +  1]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  +  1]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  -  1]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  -  1]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  -  1]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  *  2]);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  *  2]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  *  2]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  ]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  ]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[arguments.size()  ]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[expectedOpts.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  ]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.size()  ]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[expectedOpts.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)arguments.get(argument  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  -  1);	      String    currentToken    =(String)arguments.get(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)arguments.get(argument.toLowerCase());  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument.toLowerCase());	      String    currentToken    =(String)arguments.get(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  String  currentToken  =(String)arguments.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)arguments.get(argument  +  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =(String)arguments.get(argument  +  1);	      String    currentToken    =(String)arguments.get(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[currentToken.length()  ];  expectedOpts[currentToken.length()  ]  =  argument;	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  handleMissingArgument(argument,  null);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  null);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  currentOption);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  currentToken);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  currentToken);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  handleMissingArgument(argument,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  true);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  true);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  currentOption,  expectedOpts);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  expectedOpts);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  handleToken(argument,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  group);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  handleToken(argument,  group,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  group,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  group,  currentOption);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  handleToken(argument,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  options);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  options);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  parse(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  null,  currentOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentOption);	      parse(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  parse(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  null,  0);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  0);	      parse(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  parse(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  null,  group);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  group);	      parse(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  parse(argument,  null,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  null,  currentToken);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  currentToken);	      parse(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[4];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[4];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[4];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  handleMissingName(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  currentOption);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  handleMissingName(argument,  null);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  null);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  currentToken);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  currentToken);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  handleMissingName(argument,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  0);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  0);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  handleArgument(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  currentOption);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  handleArgument(argument,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  null);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  handleArgument(argument,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  true);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  true);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
51	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument[]  expectedOpts  =  new  Argument[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  handleError(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  currentOption);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  handleError(argument,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  null);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  handleError(argument,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  group);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  group);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  handleError(argument,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  0);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  0);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  String  currentToken  =  getToken().trim();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  getToken().trim();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().trim();	      String    currentToken    =    getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
59	[BUG]  [BUGGY]  String  currentToken  =  getToken().toLowerCase();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  getToken().toLowerCase();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().toLowerCase();	      String    currentToken    =    getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  String  currentToken  =  getToken().substring(0,  argument.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  getToken().substring(0,  argument.length()  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken().substring(0,  argument.length()  -  1);	      String    currentToken    =    getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[4];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[4];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[4];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  currentToken);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentToken);	      parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
66	[BUG]  [BUGGY]  parse(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  currentOption,  expectedOpts);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  expectedOpts);	      parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
67	[BUG]  [BUGGY]  parse(argument,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  group);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  group);	      parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  parse(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  blockParsing);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockParsing);	      parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  Option  group  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  group  =  options.getOption(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Option  group  =  options.getOption(argument);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
70	[BUG]  [BUGGY]  String  currentToken  =  arguments.substring(0,  arguments.length()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  arguments.substring(0,  arguments.length()  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  arguments.substring(0,  arguments.length()  -  1);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
71	[BUG]  [BUGGY]  String  currentToken  =  argument.substring(0,  argument.length()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  argument.substring(0,  argument.length()  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  argument.substring(0,  argument.length()  -  1);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
72	[BUG]  [BUGGY]  String  currentToken  =  arguments.substring(0,  argument.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  arguments.substring(0,  argument.length()  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  arguments.substring(0,  argument.length()  -  1);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
73	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  ];  expectedOpts[currentToken.length()  ]  =  argument;	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    expectedOpts[currentToken.length()    ]    =    argument;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  handleError(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleError(argument,  stopAtNonOption);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  handleMissingError(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingError(argument);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingError(argument);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
77	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  }  handleToken(argument);	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
79	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument);	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  handleMissingName(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingName(argument,  stopAtNonOption);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  String  currentToken  =  getToken(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =  getToken(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String  currentToken  =  getToken(argument);	      String    currentToken    =    getToken();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
82	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  2];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
83	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  requiredOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
85	[BUG]  [BUGGY]  handleMissingArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleMissingArgument(argument,  stopAtNonOption);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  handleArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArgument(argument,  stopAtNonOption);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  blockAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  blockAtNonOption);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
88	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  currentOption,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleToken(argument,  currentOption,  stopAtNonOption);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  handleArg(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArg(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleArg(argument,  stopAtNonOption);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
90	[BUG]  [BUGGY]  parse(argument,  currentOption,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  currentOption,  stopAtNonOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  currentOption,  stopAtNonOption);	      parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
91	[BUG]  [BUGGY]  parse(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  null,  stopAtNonOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  null,  stopAtNonOption);	      parse(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  parse(argument,  properties,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  properties,  null);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  properties,  null);	      parse(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts);  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
94	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  ||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	||  arguments.length()  ==  0)  {  String[]  expectedOpts  =  new  String[1];  System.arraycopy(arguments,  0,  expectedOpts,  expectedOpts,  expectedOpts);  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    System.arraycopy(arguments,    0,    expectedOpts,    expectedOpts,    expectedOpts);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
95	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument);	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
96	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[ARGUMENTS.size()  ]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[ARGUMENTS.size()  ]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[ARGUMENTS.size()  ]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[expectedOpts.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
97	[BUG]  [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  -  2]);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  -  2]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	String[]  expectedOpts  =(String[])arguments.toArray(new  String[argument.length()  -  2]);	      String[]    expectedOpts    =(String[])arguments.toArray(new    String[argument.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
98	[BUG]  [BUGGY]  handleParsing(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleParsing(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	handleParsing(argument,  currentOption);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
99	[BUG]  [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expected	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
101	[BUG]  [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[arguments.length  +  1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[arguments.length    +    1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
102	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
103	[BUG]  [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()!=  0)  {  String[]  expectedOpts  =  new  String[1];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
104	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  List  <  String>  expectedOpts  =  new  ArrayList  <  String>();  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i]	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i]    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
105	[BUG]  [BUGGY]  parse(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  parse(argument,  blockAtNonOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	parse(argument,  blockAtNonOption);	      parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
106	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	if(argument.length()  ==  0)  {  String[]  expectedOpts  =  new  String[0];  for(int  i  =  0;  i  <  expectedOpts.length;  ++i)  {  expectedOpts[i]  =  expectedOpts[i];  }	      if(argument.length()    ==    0)    {    String[]    expectedOpts    =    new    String[1];    for(int    i    =    0;    i    <    expectedOpts.length;    ++i)    {    expectedOpts[i]    =    expectedOpts[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
