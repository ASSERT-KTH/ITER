projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=properties;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionMutator();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCollection();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=currentOption.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newProperties();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newLinkedList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getOpts());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newLinkedList();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionGroups();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newString[arguments.length];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList<Option>();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptions(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getSelectedOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(token);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getArgumentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getOptionGroups());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=optionOptions;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOption[arguments.size()];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentMutator();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionArguments();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=option.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionArg();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument);currentToken=cmd.substring(0,cmd.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument);currentToken=cmd.toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102if(!skipParsing){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getArg();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getArg1();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCurrentArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getSelectedOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getSelectedOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionOpts();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentToken.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newString[arguments.length+1];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newString[arguments.length-1];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newString[arguments.length*2];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments.length+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments.length,arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments.length+2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102This.options=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102options=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(defaultToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList<OptionOption>(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(optionOptions.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getDefaultParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptions(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptions(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentToken.getOptionGroup(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptions(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptions(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getRequiredOption(),options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=this.currentToken.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getOption(this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102allowParsing(true){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102allowParsing(false){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102pendingTree(){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102allowState(true){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArg();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getRequiredOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getRequiredOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getRequiredOption(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getOptionOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getOptionOpts());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCurrent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCurrentToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCurrentSegment();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument);currentToken=cmd.substring(0,cmd.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Stringargument=options.getOption(argument);currentToken=argument.substring(0,cmd.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Stringargument=options.getOption(argument);currentToken=arguments.substring(0,arguments.length()-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getCurrent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getCurrentToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCmd(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentToken.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,currentToken,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102if(currentToken!=null){Optioncmd=options.getOption(argument);currentToken=cmd.toLowerCase();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102if(currentToken==null){Optioncmd=options.getOption(argument);currentToken=cmd.toLowerCase();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102if(currentToken!=null){Optioncmd=options.getOption(argument);currentToken=cmd.toLowerCase();}else{this.stopAtNonOption=stopAtNonOption;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionParameters();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newProperties(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newProperties(){};
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(this.currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(currentToken,this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,this.currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getRequiredOpts());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newLinkedList<Option>();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList<Option>(1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getArg();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getCurrentArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getValue();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionArg(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionArg(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionArg(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getSelectedOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getAllOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=currentOption.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102options=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOption[arguments.size()+1];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOption[arguments.size()-1];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOption[args.size()];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument);currentToken=cmd!=null?null:cmd.toLowerCase();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=option.getOptionGroups();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=optionOptions||options.getRequiredOptions()!=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=optionOptions&&options.getRequiredOptions().length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionArg(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.getArg1();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArg1();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=this.currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList<Option>(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList<Option>(options.getOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=option.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(token);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptions(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionArguments(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=options.getOptionCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getArgumentOpts());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102pending){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102[Delete]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,this.currentToken-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,this.currentToken+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,this.currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=currentOption.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(argument,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup(argument,currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.getArg0();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)this.options.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptions(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionGroup(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptions(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCmd(argument,this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionCollection(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102OptioncurrentOption=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOption[arguments.size()*2];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newProperties(argumentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newProperties(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentParent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument,this.currentToken,this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(this.currentToken,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=(Option)options.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newOptionGroup(argumentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument)?options.getOption(argument):null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOption(argument)?options.getArgument():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentFor(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=currentOption.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optionscmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102currentToken=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments.size());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=options.getOptionOptionGroups();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getArgumentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(options.getOptionArguments());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newLinkedList(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102this.options=newArrayList(arguments.length*2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102Optioncmd=options.getCurrentParser(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102OptioncurrentToken=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102currentToken=cmd.substring(0,cmd.length());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102allowSkipParsing("stopAtNonOption")){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102allowSkipParsing("stopAtNonOption");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java102allowSkipParsing("stopAtNonOption"))thrownewIllegalStateException("");
