bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Options  cmd  =  options.getCurrentParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  options.getCurrentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Options  cmd  =  currentOption.getParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  currentOption.getParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  this.options  =  new  Properties();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  Properties();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Properties();	  this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  this.options  =  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  null;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  null;	  this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  ArrayList(options.getOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getOptions());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  this.options  =  new  LinkedList(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  LinkedList(options.getRequiredOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  LinkedList(options.getRequiredOptions());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOpts());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  ArrayList(options.getOpts());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getOpts());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  ArrayList(arguments.length);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments.length);	  this.options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  this.options  =  new  LinkedList();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  LinkedList();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  LinkedList();	  this.options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  ArrayList(arguments);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments);	  this.options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup(currentToken);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionCmd(argument);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(argument);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup(argument,  currentToken);	      Option    cmd    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  this.options  =  options.getOptionGroups();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  options.getOptionGroups();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionGroups();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  this.options  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  options.getRequiredOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getRequiredOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getCurrentParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getArgument();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgument();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getCmd();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getCmd();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCmd();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionCmd();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd();	      Option    cmd    =    options.getOptionMutator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionParser();	      Option    cmd    =    options.getOptionMutator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  this.options  =  new  String[arguments.length];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  String[arguments.length];  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  String[arguments.length];	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList  <  Option>();	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  Option  cmd  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption();	      Option    cmd    =    options.getOptionCollection();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getCurrentOption();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentOption();	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getRequiredOption(argument);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getRequiredOption(argument);	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(this.currentToken);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(this.currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getCurrentOption();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)options.getCurrentOption();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getCurrentOption();	      Option    cmd    =(Option)options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getRequiredOption();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)options.getRequiredOption();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getRequiredOption();	      Option    cmd    =(Option)options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getParser();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)options.getParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getParser();	      Option    cmd    =(Option)options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getRequiredOption();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)this.options.getRequiredOption();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getRequiredOption();	      Option    cmd    =(Option)this.options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCurrentOption();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)this.options.getCurrentOption();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCurrentOption();	      Option    cmd    =(Option)this.options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(arguments[0]);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(arguments[0]);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  this.options  =  options.getOptions(argument);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  options.getOptions(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptions(argument);	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  options.getSelectedOption(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getSelectedOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getSelectedOption(argument);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(token);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(token);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getArgument();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)this.options.getArgument();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getArgument();	      Option    cmd    =(Option)this.options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getArgument();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)options.getArgument();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getArgument();	      Option    cmd    =(Option)options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  Options  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Options  cmd  =  options.getArgumentParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  options.getArgumentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptions();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptions();	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptionGroups());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  ArrayList(options.getOptionGroups());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getOptionGroups());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  this.options  =  optionOptions;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  optionOptions;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  optionOptions;	  this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getArgumentParser();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  ];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  Option[arguments.size()  ];  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Option[arguments.size()  ];	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentMutator();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getArgumentMutator();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentMutator();	      Option    cmd    =    options.getOptionMutator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionArg(argument);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionArg(argument);	      Option    cmd    =    options.getOptionMutator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getCmd();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)options.getCmd();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getCmd();	      Option    cmd    =(Option)options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  this.options  =  options.getOptionArguments();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  options.getOptionArguments();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionArguments();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  this.options  =  option.getOptions();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  option.getOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  option.getOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken);  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  this.options  =  new  OptionGroup();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  OptionGroup();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionGroup();	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  Options  cmd  =  options.getCmd();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Options  cmd  =  options.getCmd();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  options.getCmd();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCmd();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =(Option)this.options.getCmd();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCmd();	      Option    cmd    =(Option)this.options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOptionArg();  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionArg();	      Option    cmd    =    options.getOptionMutator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.substring(0,  cmd.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.substring(0,  cmd.length()  -  1);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.substring(0,  cmd.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  if(!skipParsing)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  if(!skipParsing)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	if(!skipParsing)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  this.options  =  new  Options();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  this.options  =  new  Options();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Options();	  this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
