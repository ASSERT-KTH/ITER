bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getArg();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getArg();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getArg();	  Option    cmd    =(Option)this.options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getArg1();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getArg1();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getArg1();	  Option    cmd    =(Option)this.options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCurrentArgument();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getCurrentArgument();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCurrentArgument();	  Option    cmd    =(Option)this.options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  options.getSelectedOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getSelectedOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getSelectedOption(currentToken);	  Option    cmd    =    options.getSelectedOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  options.getSelectedOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getSelectedOption(argument,  currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getSelectedOption(argument,  currentToken);	  Option    cmd    =    options.getSelectedOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
6	[BUG]  [BUGGY]  this.options  =  options.getOptionOptions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptionOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionOptions();	  this.options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  this.options  =  options.getOptionOpts();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptionOpts();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionOpts();	  this.options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  Options  cmd  =  options.getArgument();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Options  cmd  =  options.getArgument();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  options.getArgument();	  Options    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCmd(currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(currentToken);	  Option    cmd    =    options.getOptionCmd(argument);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCmd(argument,  currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(argument,  currentToken);	  Option    cmd    =    options.getOptionCmd(argument);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(this.currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCmd(this.currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(this.currentToken);	  Option    cmd    =    options.getOptionCmd(argument);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionGroup(currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getOptionGroup(currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getOptionGroup(currentToken);	  Option    cmd    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getOption(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getOption(argument);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentToken.getOption(options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentToken.getOption(options);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
16	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(arguments,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments,  expectedOpts);	  this.options    =    new    ArrayList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  this.options  =  new  String[arguments.length  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  String[arguments.length  +  1];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  String[arguments.length  +  1];	  this.options    =    new    String[arguments.length];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  this.options  =  new  String[arguments.length  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  String[arguments.length  -  1];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  String[arguments.length  -  1];	  this.options    =    new    String[arguments.length];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  this.options  =  new  String[arguments.length  *  2];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  String[arguments.length  *  2];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  String[arguments.length  *  2];	  this.options    =    new    String[arguments.length];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(arguments.length  +  1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments.length  +  1);	  this.options    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments.length,  arguments.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(arguments.length,  arguments.length);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments.length,  arguments.length);	  this.options    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments.length  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(arguments.length  +  2);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments.length  +  2);	  this.options    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  This.options  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  This.options  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	This.options  =  new  ArrayList(options.getRequiredOptions());	  this.options    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  options  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  options  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	options  =  new  ArrayList(options.getRequiredOptions());	  this.options    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(arguments);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  OptionGroup(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionGroup(arguments);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
26	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(options);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  OptionGroup(options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionGroup(options);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
27	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  OptionGroup(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionGroup(argument);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(defaultToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(defaultToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(defaultToken);	  Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(arguments);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(arguments);	  Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCurrentToken();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentToken();	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrent();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCurrent();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrent();	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList  <  OptionOption>(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList  <  OptionOption>(options.getRequiredOptions());	  this.options    =    optionOptions;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  this.options  =  new  ArrayList(optionOptions.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(optionOptions.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(optionOptions.getRequiredOptions());	  this.options    =    optionOptions;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  options.getDefaultParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getDefaultParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getDefaultParser();	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  this.options  =  new  Options(arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Options(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Options(arguments);	  this.options    =    new    Options();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
36	[BUG]  [BUGGY]  this.options  =  new  Options(options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Options(options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Options(options);	  this.options    =    new    Options();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOptionGroup(argument,  options);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentToken.getOptionGroup(argument,  options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentToken.getOptionGroup(argument,  options);	  Option    cmd    =    options.getOptionGroup(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken,  argument);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken,  argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup(currentToken,  argument);	  Option    cmd    =    options.getOptionGroup(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken,  expectedOpts);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.getOptionGroup(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionGroup(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getOptionGroup(argument,  currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getOptionGroup(argument,  currentToken);	  Option    cmd    =    options.getOptionGroup(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  this.options  =  options.getOptions(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptions(argument,  currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptions(argument,  currentToken);	  this.options    =    options.getOptions(argument);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
42	[BUG]  [BUGGY]  this.options  =  options.getOptions(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptions(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptions(currentToken);	  this.options    =    options.getOptions(argument);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getRequiredOption(),  options);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getRequiredOption(),  options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getRequiredOption(),  options);	  Option    cmd    =(Option)this.options.getRequiredOption();    	non-compiled	[CE]  ';'  expected	32	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  this.currentToken.getOption(options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  this.currentToken.getOption(options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  this.currentToken.getOption(options);	  Option    cmd    =    options.getOption(this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
45	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(this.currentToken);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getOption(this.currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getOption(this.currentToken);	  Option    cmd    =    options.getOption(this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
46	[BUG]  [BUGGY]  allowParsing(true)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  allowParsing(true)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	allowParsing(true)  {  throw  new  IllegalStateException( " ");  }	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
47	[BUG]  [BUGGY]  allowParsing(false)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  allowParsing(false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	allowParsing(false)  {  throw  new  IllegalStateException( " ");  }	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
48	[BUG]  [BUGGY]  pendingTree()  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionError      [CONTEXT]      {      [BUGGY]  pendingTree()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	pendingTree()  {  throw  new  IllegalStateException( " ");  }	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
49	[BUG]  [BUGGY]  allowState(true)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            AssertionError      [CONTEXT]      {      [BUGGY]  allowState(true)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	allowState(true)  {  throw  new  IllegalStateException( " ");  }	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  options.getArg();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArg();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArg();	  Option    cmd    =    options.getOptionArg();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getRequiredOption(currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getRequiredOption(currentToken);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getRequiredOption(argument,  currentToken);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
53	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getRequiredOption(argument,  expectedOpts);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Options  cmd  =  options.getCurrentOption();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  options.getCurrentOption();	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptionOptions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(options.getOptionOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getOptionOptions());	  this.options    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
56	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptionOpts());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(options.getOptionOpts());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getOptionOpts());	  this.options    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArgument(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgument(argument);	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getParser();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getParser();	  Option    cmd    =(Option)options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.getCurrentParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getCurrentParser();	  Option    cmd    =(Option)options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCurrent();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getCurrent();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCurrent();	  Option    cmd    =(Option)this.options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
61	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getCurrentToken();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCurrentToken();	  Option    cmd    =(Option)this.options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCurrentSegment();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getCurrentSegment();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCurrentSegment();	  Option    cmd    =(Option)this.options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(arguments[1]);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(arguments[1]);	  Option    cmd    =    options.getOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  arguments[1]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  arguments[1]);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(arguments[0],  arguments[1]);	  Option    cmd    =    options.getOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.substring(0,  cmd.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.substring(0,  cmd.length());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.substring(0,  cmd.length());	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.substring(0,    cmd.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
66	[BUG]  [BUGGY]  String  argument  =  options.getOption(argument);  currentToken  =  argument.substring(0,  cmd.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  String  argument  =  options.getOption(argument);  currentToken  =  argument.substring(0,  cmd.length()  -  1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	String  argument  =  options.getOption(argument);  currentToken  =  argument.substring(0,  cmd.length()  -  1);	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.substring(0,    cmd.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
67	[BUG]  [BUGGY]  String  argument  =  options.getOption(argument);  currentToken  =  arguments.substring(0,  arguments.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  String  argument  =  options.getOption(argument);  currentToken  =  arguments.substring(0,  arguments.length()  -  1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	String  argument  =  options.getOption(argument);  currentToken  =  arguments.substring(0,  arguments.length()  -  1);	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.substring(0,    cmd.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getCurrent();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.getCurrent();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getCurrent();	  Option    cmd    =(Option)options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.getCurrentToken();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getCurrentToken();	  Option    cmd    =(Option)options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentCmd();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArgumentCmd();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentCmd();	  Option    cmd    =    options.getArgumentMutator();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCurrentParser();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCurrentParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCurrentParser();	  Option    cmd    =    options.getOptionParser();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  Option  cmd  =  options.getCmd(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCmd(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCmd(argument);	  Option    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
73	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getOption(argument,  currentToken);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
74	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(argument,  options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentToken.getOption(argument,  options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentToken.getOption(argument,  options);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
75	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  skipParsing);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  skipParsing);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  skipParsing);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  if(currentToken!=  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  if(currentToken!=  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	if(currentToken!=  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
78	[BUG]  [BUGGY]  if(currentToken  ==  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  if(currentToken  ==  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	if(currentToken  ==  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
79	[BUG]  [BUGGY]  if(currentToken!=  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  else  {  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  if(currentToken!=  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  else  {  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	if(currentToken!=  null)  {  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd.toLowerCase();  }  else  {  this.stopAtNonOption  =  stopAtNonOption;  }	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
80	[BUG]  [BUGGY]  this.options  =  options.getOptionParameters();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptionParameters();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionParameters();	  this.options    =    options.getOptionArguments();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
81	[BUG]  [BUGGY]  this.options  =  new  Properties(arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Properties(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Properties(arguments);	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  this.options  =  new  Properties()  {  }  ;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Properties()  {  }  ;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Properties()  {  }  ;	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.currentToken,  argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(this.currentToken,  argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(this.currentToken,  argument);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
84	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  this.currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  this.currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(currentToken,  this.currentToken);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  null);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  null);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
86	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOpts());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOpts());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getRequiredOpts());	  this.options    =    new    ArrayList(options.getOpts());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  LinkedList  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList  <  Option>(1);	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
89	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getArg();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.getArg();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getArg();	  Option    cmd    =(Option)options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
90	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getCurrentArgument();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.getCurrentArgument();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getCurrentArgument();	  Option    cmd    =(Option)options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
91	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getValue();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getValue();	  Option    cmd    =(Option)this.options.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
92	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionArg(currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionArg(currentToken);	  Option    cmd    =    options.getOptionArg(argument);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
93	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionArg(argument,  currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionArg(argument,  currentToken);	  Option    cmd    =    options.getOptionArg(argument);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
94	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(argument,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionArg(argument,  true);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionArg(argument,  true);	  Option    cmd    =    options.getOptionArg(argument);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
95	[BUG]  [BUGGY]  this.options  =  options.getSelectedOptions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getSelectedOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getSelectedOptions();	  this.options    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  this.options  =  options.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getAllOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getAllOptions();	  this.options    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getParser();	  Options    cmd    =    currentOption.getParser();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Options  cmd  =  currentOption.getCurrentParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  currentOption.getCurrentParser();	  Options    cmd    =    currentOption.getParser();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  options  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  options  =  options.getOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	options  =  options.getOptions();	  this.options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
100	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Option[arguments.size()  +  1];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Option[arguments.size()  +  1];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
101	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Option[arguments.size()  -  1];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Option[arguments.size()  -  1];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  this.options  =  new  Option[args.size()  ];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Option[args.size()  ];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Option[args.size()  ];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  null);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  null);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
104	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  0);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  0);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
105	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParsing();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCurrentParsing();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentParsing();	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
106	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd!=  null?  null  :  cmd.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument);  currentToken  =  cmd!=  null?  null  :  cmd.toLowerCase();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument);  currentToken  =  cmd!=  null?  null  :  cmd.toLowerCase();	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
107	[BUG]  [BUGGY]  this.options  =  option.getOptionGroups();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  option.getOptionGroups();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  option.getOptionGroups();	  this.options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
108	[BUG]  [BUGGY]  this.options  =  optionOptions  ||  options.getRequiredOptions()!=  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  optionOptions  ||  options.getRequiredOptions()!=  null;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  optionOptions  ||  options.getRequiredOptions()!=  null;	  this.options    =    optionOptions;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
109	[BUG]  [BUGGY]  this.options  =  optionOptions  &&  options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  optionOptions  &&  options.getRequiredOptions().length  >  0;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  optionOptions  &&  options.getRequiredOptions().length  >  0;	  this.options    =    optionOptions;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
110	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(argument,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionArg(argument,  null);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionArg(argument,  null);	  Option    cmd    =    options.getOptionArg(argument);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
111	[BUG]  [BUGGY]  Option  cmd  =(Option)options.getArg1();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.getArg1();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.getArg1();	  Option    cmd    =(Option)options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
112	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getCurrentParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getCurrentParser();	  Option    cmd    =(Option)this.options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
113	[BUG]  [BUGGY]  Option  cmd  =  options.getArg1();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArg1();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArg1();	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
114	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(argument,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCmd(argument,  null);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(argument,  null);	  Option    cmd    =    options.getOptionCmd(argument);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  Option  cmd  =  this.currentOption.getOption(options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  this.currentOption.getOption(options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  this.currentOption.getOption(options);	  Option    cmd    =    options.getOption(this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
116	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCurrentOption(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentOption(argument);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
117	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
118	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOptions());	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
119	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(null);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(null);	  Option    cmd    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
120	[BUG]  [BUGGY]  this.options  =  options.getOptionRequiredOptions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptionRequiredOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionRequiredOptions();	  this.options    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  Option  cmd  =  options.getArg(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArg(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArg(argument);	  Option    cmd    =    options.getOptionArg();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
122	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options);	  this.options    =    new    ArrayList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
123	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  option.getOption(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  option.getOption(argument);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
124	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentOptions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArgumentOptions();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentOptions();	  Option    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
125	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCmd(token);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(token);	  Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
126	[BUG]  [BUGGY]  this.options  =  options.getOptions(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptions(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptions(argument,  expectedOpts);	  this.options    =    options.getOptions(argument);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
127	[BUG]  [BUGGY]  this.options  =  new  OptionOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  OptionOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionOptions();	  this.options    =    new    Options();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
128	[BUG]  [BUGGY]  this.options  =  options.getOptionArguments(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptionArguments(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionArguments(argument);	  this.options    =    options.getOptionArguments();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
129	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Options  cmd  =  options.getOptionCmd();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  options.getOptionCmd();	  Options    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
130	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getArgumentOpts());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(options.getArgumentOpts());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getArgumentOpts());	  this.options    =    new    ArrayList(options.getOpts());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
131	[BUG]  [BUGGY]  pending)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  pending)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	pending)  {  throw  new  IllegalStateException( " ");  }	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	58	None	replace
132	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  [Delete]  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	[Delete]	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
133	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  -  1);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken  -  1);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  +  1);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken  +  1);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
135	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  0);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  0);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
136	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  currentOption.getCurrentParser();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  currentOption.getCurrentParser();	  Options    cmd    =    currentOption.getParser();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
137	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken,  null);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup(argument,  currentToken,  null);	  Option    cmd    =    options.getOptionGroup(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
138	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionGroup(argument,  currentToken,  0);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup(argument,  currentToken,  0);	  Option    cmd    =    options.getOptionGroup(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
139	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.getArg0();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.getArg0();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.getArg0();	  Option    cmd    =(Option)this.options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
140	[BUG]  [BUGGY]  Option  cmd  =(Option)this.options.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)this.options.clone();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)this.options.clone();	  Option    cmd    =(Option)this.options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
141	[BUG]  [BUGGY]  this.options  =  new  Options(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Options(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Options(argument);	  this.options    =    new    Options();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
142	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  OptionGroup(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionGroup(options.getRequiredOptions());	  this.options    =    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
143	[BUG]  [BUGGY]  this.options  =  new  Options(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Options(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Options(options.getRequiredOptions());	  this.options    =    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
144	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(argument,  this.currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCmd(argument,  this.currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCmd(argument,  this.currentToken);	  Option    cmd    =    options.getOptionCmd(argument);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCollection(currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionCollection(currentToken);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionCollection(currentToken);	  Option    cmd    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
146	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  currentOption  =  options.getOption(argument);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
147	[BUG]  [BUGGY]  this.options  =  new  Option[arguments.size()  *  2];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Option[arguments.size()  *  2];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Option[arguments.size()  *  2];	  this.options    =    new    Option[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
148	[BUG]  [BUGGY]  this.options  =  new  Properties(argumentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Properties(argumentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Properties(argumentToken);	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
149	[BUG]  [BUGGY]  this.options  =  new  Properties(argument);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  Properties(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  Properties(argument);	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
150	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParent();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCurrentParent();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentParent();	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
151	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  this.options);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  this.options);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  this.options);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
152	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.currentToken,  arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(this.currentToken,  arguments);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(this.currentToken,  arguments);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
153	[BUG]  [BUGGY]  Option  cmd  =(Option)options.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =(Option)options.clone();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =(Option)options.clone();	  Option    cmd    =(Option)options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
154	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(argumentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  OptionGroup(argumentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  OptionGroup(argumentToken);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
155	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument)?  options.getOption(argument):  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument)?  options.getOption(argument):  null;  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument)?  options.getOption(argument):  null;	  Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
156	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument)?  options.getArgument()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(argument)?  options.getArgument()  :  null;  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOption(argument)?  options.getArgument()  :  null;	  Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentGroup();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArgumentGroup();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentGroup();	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
158	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentFor(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArgumentFor(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentFor(argument);	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
159	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getCmd();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Options  cmd  =  currentOption.getCmd();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  currentOption.getCmd();	  Options    cmd    =    currentOption.getParser();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
160	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(argument);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Options  cmd  =  currentOption.parseOption(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Options  cmd  =  currentOption.parseOption(argument);	  Options    cmd    =    currentOption.getParser();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
161	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOptionGroup();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getOptionGroup();	  Option    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
162	[BUG]  [BUGGY]  currentToken  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  currentToken  =  options.getOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	currentToken  =  options.getOption(argument);	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
163	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(arguments.size());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments.size());	  this.options    =    new    ArrayList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
164	[BUG]  [BUGGY]  this.options  =  options.getOptionOptionGroups();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  options.getOptionOptionGroups();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  options.getOptionOptionGroups();	  this.options    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
165	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentOption();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getArgumentOption();  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getArgumentOption();	  Option    cmd    =    options.getArgumentParser();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  this.options  =  new  List(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  List(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  List(options.getRequiredOptions());	  this.options    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
167	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptionArguments());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(options.getOptionArguments());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(options.getOptionArguments());	  this.options    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
168	[BUG]  [BUGGY]  this.options  =  new  LinkedList(arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  LinkedList(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  LinkedList(arguments);	  this.options    =    new    LinkedList();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
169	[BUG]  [BUGGY]  this.options  =  new  ArrayList(arguments.length  *  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  this.options  =  new  ArrayList(arguments.length  *  2);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	this.options  =  new  ArrayList(arguments.length  *  2);	  this.options    =    new    ArrayList(arguments.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
170	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getCurrentParser(argument);  [BUGGY]      this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  cmd  =  options.getCurrentParser(argument);	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  currentToken  =  options.getOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	Option  currentToken  =  options.getOption(argument);	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.substring(0,    cmd.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
172	[BUG]  [BUGGY]  currentToken  =  cmd.substring(0,  cmd.length());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  currentToken  =  cmd.substring(0,  cmd.length());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	currentToken  =  cmd.substring(0,  cmd.length());	  Option    cmd    =    options.getOption(argument);    currentToken    =    cmd.substring(0,    cmd.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
173	[BUG]  [BUGGY]  allowSkipParsing( "stopAtNonOption "))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  allowSkipParsing( "stopAtNonOption "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	allowSkipParsing( "stopAtNonOption "))  {  throw  new  IllegalStateException( " ");  }	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
174	[BUG]  [BUGGY]  allowSkipParsing( "stopAtNonOption ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  allowSkipParsing( "stopAtNonOption ");  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	allowSkipParsing( "stopAtNonOption ");	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
175	[BUG]  [BUGGY]  allowSkipParsing( "stopAtNonOption "))  throw  new  IllegalStateException( " ");  [CE]  [FE]                          AssertionError      [CONTEXT]      {      [BUGGY]  allowSkipParsing( "stopAtNonOption "))  throw  new  IllegalStateException( " ");  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	allowSkipParsing( "stopAtNonOption "))  throw  new  IllegalStateException( " ");	  if(!skipParsing)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
