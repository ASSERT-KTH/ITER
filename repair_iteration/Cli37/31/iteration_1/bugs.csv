bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  throw  new  MissingOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  throw  new  MissingOptionException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
2	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  return;  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  return;  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
3	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null  ||  option.isRequired())  {  return;  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null  ||  option.isRequired())  {  return;  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(option);  if(option!=  null  ||  option.isRequired())  {  return;  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
4	[BUG]  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  if(option  ==  null)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return;  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	if(option  ==  null)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return;  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
6	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  throw  new  MissingOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  throw  new  MissingOptionException( " ");  }		non-compiled	[CE]  illegal  start  of  type	63	None	add
7	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null  ||  cmd.isRequired())  {  throw  new  MissingOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null  ||  cmd.isRequired())  {  throw  new  MissingOptionException( " ");  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(option);  if(cmd!=  null  ||  cmd.isRequired())  {  throw  new  MissingOptionException( " ");  }		non-compiled	[CE]  illegal  start  of  type	63	None	add
8	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null  ||  cmd.isRequired())  {  throw  new  MissingException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null  ||  cmd.isRequired())  {  throw  new  MissingException( " ");  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(option);  if(cmd!=  null  ||  cmd.isRequired())  {  throw  new  MissingException( " ");  }		non-compiled	[CE]  illegal  start  of  type	63	None	add
9	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  return;  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  return;  }		non-compiled	[CE]  illegal  start  of  type	63	None	add
10	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(option);  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	63	None	add
11	[BUG]  [BUGGY]  if(option  ==  null)  {  option  =  options.getOption(option);  if(option!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  if(option  ==  null)  {  option  =  options.getOption(option);  if(option!=  null)  {  return;  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	if(option  ==  null)  {  option  =  options.getOption(option);  if(option!=  null)  {  return;  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.checkRequiredOptions();  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.checkRequiredOptions();  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.addOption(opt,  value);  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.addOption(opt,  value);  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.addOption(opt,  value);  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
14	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(opt);  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	63	None	add
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  if(cmd!=  null)  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]  Option  cmd  =  options.getOption(opt);  if(cmd!=  null)  {  cmd.addOption(option);  }  [BUGGY]    [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	Option  cmd  =  options.getOption(opt);  if(cmd!=  null)  {  cmd.addOption(option);  }	}  	non-compiled	[CE]  illegal  start  of  type	62	None	replace
16	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.removeOption(opt);  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  checkRequiredOptions()  throws  MissingOptionException  {  if  (!expectedOpts.isEmpty())  {  throw  new  MissingOptionException(expectedOpts);  }  [BUGGY]    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.removeOption(opt);  }  [BUGGY]  }  [CLASS]  DefaultParser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	    Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  cmd.removeOption(opt);  }		non-compiled	[CE]  illegal  start  of  type	63	None	add
