bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  cmd  =  options.getParser();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  cmd  =  options.getParser();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  cmd  =  options.getParser();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
2	[BUG]  [BUGGY]    this.options  =  properties;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    this.options  =  properties;  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    this.options  =  properties;		non-compiled	[CE]  illegal  start  of  expression	31	None	add
3	[BUG]  [BUGGY]    this.options  =  options;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    this.options  =  options;		non-compiled	[CE]  illegal  start  of  expression	31	None	add
4	[BUG]  [BUGGY]    Options  cmd  =  options.getParser();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Options  cmd  =  options.getParser();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Options  cmd  =  options.getParser();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  cmd  =  options.getOption(argument);  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  cmd  =  options.getOption(argument);		non-compiled	[CE]  illegal  start  of  expression	31	None	add
6	[BUG]  [BUGGY]  this.stopAtNonOption  =  null;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  null;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  null;	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
7	[BUG]  [BUGGY]  this.stopAtNonOption  =  false;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  false;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  false;	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  this.stopAtNonOption  =  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  true;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  true;	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument);  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument);	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
11	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption;	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
12	[BUG]  [BUGGY]    Option  cmd  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  cmd  =  options.getRequiredOptions();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  cmd  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
13	[BUG]  [BUGGY]    Option  currentOption  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  currentOption  =  options.getRequiredOptions();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  currentOption  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
14	[BUG]  [BUGGY]    if(!skipParsing)  {  this.options  =  options;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    if(!skipParsing)  {  this.options  =  options;  }  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    if(!skipParsing)  {  this.options  =  options;  }		non-compiled	[CE]  illegal  start  of  expression	31	None	add
15	[BUG]  [BUGGY]    Option  currentToken  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  currentToken  =  options.getRequiredOptions();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  currentToken  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
16	[BUG]  [BUGGY]    Option  currentToken  =  options.getToken();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  currentToken  =  options.getToken();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  currentToken  =  options.getToken();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
17	[BUG]  [BUGGY]    Option  currentToken  =  options.getRequiredOption();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]    Option  currentToken  =  options.getRequiredOption();  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	    Option  currentToken  =  options.getRequiredOption();		non-compiled	[CE]  illegal  start  of  expression	31	None	add
18	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getRequiredOptions()  :  null;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getRequiredOptions()  :  null;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getRequiredOptions()  :  null;	this.stopAtNonOption  =  stopAtNonOption;  	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
