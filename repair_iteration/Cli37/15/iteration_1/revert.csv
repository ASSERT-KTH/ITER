projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=properties;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=false;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=true;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!skipParsing){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getRequiredOptions():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.asList(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.copyOf(arguments,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=false;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getSelectedOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argumentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOptions():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOption():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Options.EMPTY_STRING;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>2;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=this.options.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken()+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getImplicitRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=true;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgumentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption||!skipParsing){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.cloneOptions;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.options=options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getAssignedOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newProperties();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().add(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCmd();
