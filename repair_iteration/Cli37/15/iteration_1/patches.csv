bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getCurrentOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentOption();	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptions();	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  this.options  =  arguments;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  arguments;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  arguments;	      this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  this.options  =  Arrays.asList(arguments);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  Arrays.asList(arguments);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.asList(arguments);	      this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  this.options  =  Arrays.copyOf(arguments,  arguments);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  Arrays.copyOf(arguments,  arguments);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.copyOf(arguments,  arguments);	      this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  This.stopAtNonOption  =  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  This.stopAtNonOption  =  false;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	This.stopAtNonOption  =  false;	  this.stopAtNonOption    =    true;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getRequiredOption(argument);	      Option    currentToken    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelectedOption();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getSelectedOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getSelectedOption();	      Option    currentToken    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  false;  }	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption)  {  this.stopAtNonOption  =  true;  }	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argument);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentOption  =  options.getRequiredOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption();	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  stopToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOptions()  :  null;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOptions()  :  null;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOptions()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getRequiredOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  null;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  null;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getRequiredOptions()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList(options.getRequiredOptions());	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList  <  Option>(options.getRequiredOptions());	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  option  =  options.getOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  option  =  options.getOption(argument);	      if(!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  this.options  =  Options.EMPTY_STRING;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  Options.EMPTY_STRING;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Options.EMPTY_STRING;	      if(!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  1;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  1;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  2;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  2;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  currentToken);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  currentToken);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getCurrentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getCurrentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  Options  cmd  =  options.getArgument();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getArgument();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getArgument();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  0);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  0);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.ERROR;	  this.stopAtNonOption    =    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getCurrentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  options.getCmd();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getCmd();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCmd();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getArgument();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgument();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getToken();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  this.options.getToken();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  this.options.getToken();	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getToken()  +  1;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken()  +  1;	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
38	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  arguments;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getToken(),  arguments;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  arguments;	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getImplicitRequiredOption();	      Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  This.stopAtNonOption  =  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  This.stopAtNonOption  =  true;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	This.stopAtNonOption  =  true;	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  Options  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getArgumentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getArgumentParser();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOptionCmd();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionCmd();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getToken(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(argument);	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.options  =  options;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption)  {  this.options  =  options;  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption)  {  this.options  =  options;  }	      if(!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  this.options  =  options;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(!stopAtNonOption)  {  this.options  =  options;  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(!stopAtNonOption)  {  this.options  =  options;  }	      if(!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  if(stopAtNonOption  ||!skipParsing)  {  this.options  =  options;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  if(stopAtNonOption  ||!skipParsing)  {  this.options  =  options;  }  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption  ||!skipParsing)  {  this.options  =  options;  }	      if(!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.DEFAULT;	  this.stopAtNonOption    =    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  this.options  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  options.getOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.getOptions();	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
50	[BUG]  [BUGGY]  this.options  =  options.cloneOptions;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  options.cloneOptions;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.cloneOptions;	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getOptions();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOptions();	      Option    currentToken    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption(argument);	      Option    currentToken    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  0;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  0;  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption();	      Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
55	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  null);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  null);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getOption(argument);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  This.options  =  options;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  This.options  =  options;  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	This.options  =  options;	      if(!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getRequiredOption(argument);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getRequiredOption(argument);	      Option    cmd    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  Option  currentToken  =  options.getAssignedOption();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  currentToken  =  options.getAssignedOption();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getAssignedOption();	      Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  this.options  =  new  OptionGroup();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  OptionGroup();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  OptionGroup();	      this.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  this.options  =  new  Properties();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.options  =  new  Properties();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  Properties();	      this.options    =    properties;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentParser();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getArgumentParser();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgumentParser();	      Option    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument);  [BUGGY]    skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken);  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  Options  cmd  =  options.getCmd();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;    [BUGGY]  Options  cmd  =  options.getCmd();  [BUGGY]    this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getCmd();	      Options    cmd    =    options.getParser();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
