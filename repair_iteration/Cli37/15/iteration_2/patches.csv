bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this);	  Option    cmd    =    options.getOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  arguments);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  arguments);	  Option    cmd    =    options.getOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
3	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getRequiredOption()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getRequiredOption()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getRequiredOption()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getSelectedOption()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  option;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  option;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getSelectedOption()  :  option;	  this.stopAtNonOption    =    stopAtNonOption?    options.getSelectedOption()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentOption();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Options  cmd  =  options.getCurrentOption();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getCurrentOption();	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  This.options  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  This.options  =  options.getOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	This.options  =  options.getOptions();	  This.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
7	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentArgument();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Options  cmd  =  options.getCurrentArgument();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getCurrentArgument();	  Options    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  1;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  1;	  this.stopAtNonOption    =    stopAtNonOption    ||    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  ==  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  ==  0;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  ==  0;	  this.stopAtNonOption    =    stopAtNonOption    ||    options.getRequiredOptions().length    >    0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Iterator  <  Option>  options  =  options.getOptions();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Iterator  <  Option>  options  =  options.getOptions();	  This.stopAtNonOption    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
11	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  expectedOpts);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(this.options);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(this.options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getRequiredOption(this.options);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options.getCmd());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(options.getCmd());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(options.getCmd());	  Option    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  currentOption.getOption(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  this.options.getOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  this.options.getOption(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(options);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  currentToken.getOption(options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  currentToken.getOption(options);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionParser();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionParser();	  Option    cmd    =    options.getArgumentParser();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.currentToken,  argument);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(this.currentToken,  argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(this.currentToken,  argument);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  0);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  0);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  null);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  null);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
21	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption(argument);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getImplicitRequiredOption(argument);	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
22	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitParsingOption();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getImplicitParsingOption();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getImplicitParsingOption();	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
23	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitOpt();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getImplicitOpt();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getImplicitOpt();	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
24	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  arguments.getRequiredOptions().contains(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  arguments.getRequiredOptions().contains(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  arguments.getRequiredOptions().contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    ||    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
25	[BUG]  [BUGGY]  this.stopAtNonOption  =  options  ||  stopAtNonOption.getRequiredOptions().contains(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  options  ||  stopAtNonOption.getRequiredOptions().contains(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  options  ||  stopAtNonOption.getRequiredOptions().contains(argument);	  this.stopAtNonOption    =    stopAtNonOption    ||    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
26	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOption(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption(options.getRequiredOptions());	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
27	[BUG]  [BUGGY]  this.options  =  Options.EMPTY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Options.EMPTY;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Options.EMPTY;	  if(!stopAtNonOption)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
28	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList(options.getOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList(options.getOptions());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOpts());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList(options.getOpts());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList(options.getOpts());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  this.options  =  new  ArrayList(options.getOptionGroups());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList(options.getOptionGroups());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList(options.getOptionGroups());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  3;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  3;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  3;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
32	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption(argument,  expectedOpts);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
33	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(this.options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOption(this.options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption(this.options);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
34	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  null);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption(argument,  null);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
35	[BUG]  [BUGGY]  this.options  =  Arrays.copyOf(arguments,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.copyOf(arguments,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.copyOf(arguments,  expectedOpts);	  this.options    =    Arrays.copyOf(arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  this.options  =  Arrays.copyOf(arguments,  arguments.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.copyOf(arguments,  arguments.length);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.copyOf(arguments,  arguments.length);	  this.options    =    Arrays.copyOf(arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  this.options  =  Arrays.copyOf(arguments,  currentToken);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.copyOf(arguments,  currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.copyOf(arguments,  currentToken);	  this.options    =    Arrays.copyOf(arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  Option  currentToken  =  arguments.getToken();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  arguments.getToken();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  arguments.getToken();	  Option    currentToken    =    this.options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
39	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getToken(argument);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  this.options.getToken(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  this.options.getToken(argument);	  Option    currentToken    =    this.options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
40	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  arguments);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  arguments);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getDefaultParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getDefaultParser();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getDefaultParser();	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getRequiredOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getRequiredOption(currentToken);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getRequiredOption(argument,  currentToken);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
45	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Options  cmd  =  options.getOptionCmd();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getOptionCmd();	  Options    cmd    =    options.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
46	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument,  currentToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument,  currentToken);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
47	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  arguments);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  arguments);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  arguments);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getCurrentToken();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentToken();	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrent();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getCurrent();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrent();	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  option  =  options.getOption(currentToken);	  Option    option    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  option  =  options.getOption(argument,  currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  option  =  options.getOption(argument,  currentToken);	  Option    option    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  option  =  options.getOption(argument,  0);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  option  =  options.getOption(argument,  0);	  Option    option    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
53	[BUG]  [BUGGY]  this.stopAtNonOption  =  currentToken?  null  :  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  currentToken?  null  :  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  currentToken?  null  :  stopAtNonOption;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
54	[BUG]  [BUGGY]  this.stopAtNonOption  =  null?  null  :  currentToken;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  null?  null  :  currentToken;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  null?  null  :  currentToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().add(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().add(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().add(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().add(argument);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
56	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument,  expectedOpts);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().add(argument);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
57	[BUG]  [BUGGY]  this.options  =  Option.EMPTY_STRING;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Option.EMPTY_STRING;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Option.EMPTY_STRING;	  this.options    =    Options.EMPTY_STRING;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentArgument();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getCurrentArgument();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentArgument();	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  options.getArg();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArg();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArg();	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
60	[BUG]  [BUGGY]  this.options  =  options.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.clone();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.clone();	  this.options    =    options.cloneOptions;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
61	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getSelectedOption();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getSelectedOption();	  Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getImplicitRequiredOption();	  Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList  <  Option>();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList  <  Option>();	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  this.options  =  new  String[arguments.length];  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  String[arguments.length];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  String[arguments.length];	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken()  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken()  /  1;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken()  /  1;	  Option    currentToken    =    options.getToken()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
66	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken()  -  1;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken()  -  1;	  Option    currentToken    =    options.getToken()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(currentToken);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  0);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  0);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  skipParsing);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  skipParsing);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  skipParsing);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
72	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(argument,  options);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  currentToken.getOption(argument,  options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  currentToken.getOption(argument,  options);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
73	[BUG]  [BUGGY]  this.options  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList();	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
74	[BUG]  [BUGGY]  this.options  =  new  Properties(arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  Properties(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  Properties(arguments);	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
75	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  |  StopAtNonOption.DEFAULT;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  |  StopAtNonOption.DEFAULT;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.DEFAULT  |  StopAtNonOption.DEFAULT;	  this.stopAtNonOption    =    StopAtNonOption.DEFAULT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
76	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOptions());	  this.options    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  LinkedList  <  Option>(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  LinkedList  <  Option>(options.getRequiredOptions());	  this.options    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getAllOptions());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getAllOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList  <  Option>(options.getAllOptions());	  this.options    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
79	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  1);	  Option    cmd    =    options.getOption(argument,    0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  0,  arguments.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  0,  arguments.length);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  0,  arguments.length);	  Option    cmd    =    options.getOption(argument,    0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  null;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  arguments  =  null;	  Option    currentToken    =    options.getToken(),    arguments;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
82	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  this.options;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(),  this.options;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  this.options;	  Option    currentToken    =    options.getToken(),    arguments;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
83	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  this.arguments;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(),  this.arguments;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  this.arguments;	  Option    currentToken    =    options.getToken(),    arguments;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
84	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(options);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  OptionGroup(options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  OptionGroup(options);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
85	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(arguments);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  OptionGroup(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  OptionGroup(arguments);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
86	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(argument,  expectedOpts);	  Option    currentToken    =    options.getToken(argument);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
87	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(argument,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(argument,  null);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(argument,  null);	  Option    currentToken    =    options.getToken(argument);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
88	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(argument,  this.options);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(argument,  this.options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(argument,  this.options);	  Option    currentToken    =    options.getToken(argument);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
89	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getOption(currentToken);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
90	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getOption(argument,  expectedOpts);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
91	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(argument,  null);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getOption(argument,  null);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
92	[BUG]  [BUGGY]  Option  currentToken  =  options.getAssignedOption(argument);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getAssignedOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getAssignedOption(argument);	  Option    currentToken    =    options.getAssignedOption();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
93	[BUG]  [BUGGY]  this.options  =  options.getOptionGroups();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.getOptionGroups();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.getOptionGroups();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
94	[BUG]  [BUGGY]  this.options  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.getRequiredOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.getRequiredOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
95	[BUG]  [BUGGY]  this.options  =  options.getOptionGroup();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.getOptionGroup();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.getOptionGroup();	  this.options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
96	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  2;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().length  >  2;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    2;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
97	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelectedOption(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getSelectedOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getSelectedOption(argument);	  Option    currentToken    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
98	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument,  expectedOpts);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts));  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts));	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument,    expectedOpts);    	non-compiled	[CE]  ';'  expected	25	None	replace
100	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  arguments.getRequiredOptions().contains(argument,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  arguments.getRequiredOptions().contains(argument,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  arguments.getRequiredOptions().contains(argument,  expectedOpts);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
101	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR  ||  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.ERROR  ||  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.ERROR  ||  stopAtNonOption;	  this.stopAtNonOption    =    StopAtNonOption.ERROR;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
102	[BUG]  [BUGGY]  this.options  =  Arrays.asList(options);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.asList(options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.asList(options);	  this.options    =    Arrays.asList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
103	[BUG]  [BUGGY]  this.options  =  Arrays.asList(arguments,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.asList(arguments,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.asList(arguments,  expectedOpts);	  this.options    =    Arrays.asList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  this.options  =  options.asList(arguments);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.asList(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.asList(arguments);	  this.options    =    Arrays.asList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  1;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  1;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
106	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(argumentOpts);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  startToken;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  startToken;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  startToken;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    stopToken;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
108	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCurrentParser();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionCurrentParser();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionCurrentParser();	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
109	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  null,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  null,  0);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  null,  0);	  Option    cmd    =    options.getOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
110	[BUG]  [BUGGY]  this.options  =  new  LinkedList(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  LinkedList(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  LinkedList(options.getRequiredOptions());	  this.options    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
111	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  OptionGroup(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  OptionGroup(argument);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
112	[BUG]  [BUGGY]  This.stopAtNonOption  =  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  This.stopAtNonOption  =  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	This.stopAtNonOption  =  null;	  This.stopAtNonOption    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
113	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArgument(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgument(argument);	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
114	[BUG]  [BUGGY]  Option  cmd  =  options.getArgument(arguments[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArgument(arguments[0]);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgument(arguments[0]);	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
115	[BUG]  [BUGGY]  Option  currentToken  =  options.getArgument();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getArgument();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getArgument();	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
116	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption(argument);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getCurrentOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentOption(argument);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
117	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  null);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  null);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
118	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  0);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  0);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
119	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionCurrentParser();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Options  cmd  =  options.getOptionCurrentParser();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getOptionCurrentParser();	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
120	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().indexOf(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().indexOf(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().indexOf(argument);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().add(argument);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
121	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentOption(currentToken);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getCurrentOption(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentOption(currentToken);	  Option    cmd    =    options.getCurrentOption();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts)+  1;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().contains(argument,  expectedOpts)+  1;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().contains(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
123	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(argument)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(argument)+  1;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(argument)+  1;	  Option    currentToken    =    options.getToken(argument);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
124	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptionGroup();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOptionGroup();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOptionGroup();	  Option    currentToken    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
125	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken  +  1;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  currentToken  +  1;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
126	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length!=  0;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length!=  0;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length!=  0;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
127	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptionGroups());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptionGroups());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  ArrayList  <  Option>(options.getOptionGroups());	  this.options    =    new    ArrayList    <    Option>(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
128	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  option  =  options.getOption(token);	  Option    option    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getOption(token);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
130	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  -  1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken  -  1);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
131	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken  +  1);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken  +  1);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
132	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentOptions();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArgumentOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgumentOptions();	  Option    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
133	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  2;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  ==  2;	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().length    >    2;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  currentOption.getOption(argument);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
135	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(currentToken);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionCmd(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionCmd(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
136	[BUG]  [BUGGY]  if(stopAtNonOption)  {  this.options  =  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  if(stopAtNonOption)  {  this.options  =  null;  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption)  {  this.options  =  null;  }	  if(!stopAtNonOption)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
137	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  +  1;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.DEFAULT  +  1;	  this.stopAtNonOption    =    StopAtNonOption.DEFAULT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
138	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.token);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(this.token);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
139	[BUG]  [BUGGY]  this.options  =  optionOptions;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  optionOptions;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  optionOptions;	  this.options    =    arguments;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
140	[BUG]  [BUGGY]  this.options  =  options.cloneOptions();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.cloneOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.cloneOptions();	  this.options    =    options.cloneOptions;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
141	[BUG]  [BUGGY]  if(stopAtNonOption  &&!skipParsing)  {  this.options  =  options;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  if(stopAtNonOption  &&!skipParsing)  {  this.options  =  options;  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption  &&!skipParsing)  {  this.options  =  options;  }	  if(stopAtNonOption    ||!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
142	[BUG]  [BUGGY]  if(stopAtNonOption  ||  skipParsing)  {  this.options  =  options;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  if(stopAtNonOption  ||  skipParsing)  {  this.options  =  options;  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	if(stopAtNonOption  ||  skipParsing)  {  this.options  =  options;  }	  if(stopAtNonOption    ||!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
143	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentCmd();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArgumentCmd();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgumentCmd();	  Option    cmd    =    options.getOptionCmd();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
144	[BUG]  [BUGGY]  this.options  =  Lists.newArrayList(arguments);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Lists.newArrayList(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Lists.newArrayList(arguments);	  this.options    =    Arrays.asList(arguments);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
145	[BUG]  [BUGGY]  this.options  =  new  Options();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  Options();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  Options();	  this.options    =    new    Properties();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
146	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentOption  =  options.getRequiredOption(arguments);	  if(stopAtNonOption)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
147	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  this.options);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  this.options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOption(argument,  this.options);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
148	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument,  currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument,  currentToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().add(argument,  currentToken);	  this.stopAtNonOption    =    stopAtNonOption    &&    options.getRequiredOptions().add(argument);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
149	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  null,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  null,  null);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  null,  null);	  Option    cmd    =    options.getOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
150	[BUG]  [BUGGY]  this.options  =  option;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  option;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  option;	  if(!stopAtNonOption)    {    this.options    =    options;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
151	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  new  OptionGroup(options.getRequiredOptions());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  new  OptionGroup(options.getRequiredOptions());  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  arguments  =  new  OptionGroup(options.getRequiredOptions());	  Option    currentToken    =    options.getToken(),    arguments;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
152	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  new  String[0];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  new  String[0];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  arguments  =  new  String[0];	  Option    currentToken    =    options.getToken(),    arguments;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
153	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  new  String[options.getRequiredOptions().size()  ];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getToken(),  arguments  =  new  String[options.getRequiredOptions().size()  ];  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getToken(),  arguments  =  new  String[options.getRequiredOptions().size()  ];	  Option    currentToken    =    options.getToken(),    arguments;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
154	[BUG]  [BUGGY]  this.options  =  new  OptionGroup(argumentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  OptionGroup(argumentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  OptionGroup(argumentToken);	  this.options    =    new    OptionGroup();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
155	[BUG]  [BUGGY]  Option  currentToken  =(this.options!=  null)?  this.options.getToken()  :  argument;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =(this.options!=  null)?  this.options.getToken()  :  argument;  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =(this.options!=  null)?  this.options.getToken()  :  argument;	  Option    currentToken    =    this.options.getToken();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
156	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getToken()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  options.getToken()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  options.getToken()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getSelectedOption()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
157	[BUG]  [BUGGY]  this.options  =  options;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options;  }  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options;  }	  if(stopAtNonOption    ||!skipParsing)    {    this.options    =    options;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
158	[BUG]  [BUGGY]  This.options  =  options.cloneOptions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  This.options  =  options.cloneOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	This.options  =  options.cloneOptions();	  This.options    =    options;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
159	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  argument;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  argument;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  argument;	  this.stopAtNonOption    =    stopAtNonOption?    null    :    currentToken;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
160	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  ||  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  ||  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.DEFAULT  ||  stopAtNonOption;	  this.stopAtNonOption    =    StopAtNonOption.DEFAULT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
161	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  &&  arguments.length  >  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  StopAtNonOption.DEFAULT  &&  arguments.length  >  0;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  StopAtNonOption.DEFAULT  &&  arguments.length  >  0;	  this.stopAtNonOption    =    StopAtNonOption.DEFAULT;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
162	[BUG]  [BUGGY]  this.options  =  Arrays.copyOf(arguments,  options);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.copyOf(arguments,  options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.copyOf(arguments,  options);	  this.options    =    Arrays.copyOf(arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
163	[BUG]  [BUGGY]  Options  cmd  =  options.getArgument(argument);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Options  cmd  =  options.getArgument(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getArgument(argument);	  Options    cmd    =    options.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
164	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup();  [CE]  method  getOptionGroup  in  class  Options  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionGroup();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionGroup();	  Option    cmd    =    options.getOptions();    	non-compiled	[CE]  method  getOptionGroup  in  class  Options  cannot  be  applied  to  given  types;	2	None	replace
165	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroups();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionGroups();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionGroups();	  Option    cmd    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	2	None	replace
166	[BUG]  [BUGGY]  this.options  =  options.getOptions(),  options.getRequiredOptions();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  options.getOptions(),  options.getRequiredOptions();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  options.getOptions(),  options.getRequiredOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  ';'  expected	49	None	replace
167	[BUG]  [BUGGY]  Options  cmd  =  options.getCurrentParser(argument);  [CE]  cannot  find  symbol  argument  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Options  cmd  =  options.getCurrentParser(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Options  cmd  =  options.getCurrentParser(argument);	  Options    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  cannot  find  symbol  argument	27	None	replace
168	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &  options.getSelectedOptions()  :  null;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &  options.getSelectedOptions()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  &  options.getSelectedOptions()  :  null;	  this.stopAtNonOption    =    stopAtNonOption?    options.getSelectedOptions()    :    null;    	non-compiled	[CE]  ';'  expected	15	None	replace
169	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  this.options);  [CE]  cannot  find  symbol  argument  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  this.options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  this.options);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  cannot  find  symbol  argument	7	None	replace
170	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentGroup();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArgumentGroup();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgumentGroup();	  Option    cmd    =    options.getArgument();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
171	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken);  [CE]  method  getOptionGroup  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionGroup(currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionGroup(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  method  getOptionGroup  in  class  Options  cannot  be  applied  to  given  types;	29	None	replace
172	[BUG]  [BUGGY]  this.options  =  new  Properties(argumentToken);  [CE]  cannot  find  symbol  argumentToken  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  Properties(argumentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  Properties(argumentToken);	  this.options    =    new    Properties();    	non-compiled	[CE]  cannot  find  symbol  argumentToken	61	None	replace
173	[BUG]  [BUGGY]  this.options  =  new  Properties(argument);  [CE]  cannot  find  symbol  argument  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  new  Properties(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  new  Properties(argument);	  this.options    =    new    Properties();    	non-compiled	[CE]  cannot  find  symbol  argument	61	None	replace
174	[BUG]  [BUGGY]  Option  cmd  =  options.getArgumentOption();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getArgumentOption();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getArgumentOption();	  Option    cmd    =    options.getArgumentParser();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
175	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd(argument);  [CE]  cannot  find  symbol  argument  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionCmd(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionCmd(argument);	  Option    cmd    =    options.getOptionCmd();    	non-compiled	[CE]  cannot  find  symbol  argument	42	None	replace
176	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionArg(argument);  [CE]  cannot  find  symbol  argument  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOptionArg(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOptionArg(argument);	  Option    cmd    =    options.getOptionCmd();    	non-compiled	[CE]  cannot  find  symbol  argument	42	None	replace
177	[BUG]  [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  cannot  find  symbol  argument  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getRequiredOption(argument,  expectedOpts);	  Option    cmd    =    options.getRequiredOption(argument);    	non-compiled	[CE]  cannot  find  symbol  argument	58	None	replace
178	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument)&&  arguments.length  >  0;  [CE]  cannot  find  symbol  argument  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument)&&  arguments.length  >  0;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.stopAtNonOption  =  stopAtNonOption  ||  options.getRequiredOptions().contains(argument)&&  arguments.length  >  0;	  this.stopAtNonOption    =    stopAtNonOption    ||    options.getRequiredOptions().contains(argument);    	non-compiled	[CE]  cannot  find  symbol  argument	24	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument,  this.currentToken);  [CE]  cannot  find  symbol  argument  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  option  =  options.getOption(argument,  this.currentToken);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  option  =  options.getOption(argument,  this.currentToken);	  Option    option    =    options.getOption(argument);    	non-compiled	[CE]  cannot  find  symbol  argument	19	None	replace
180	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptionGroups();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  currentToken  =  options.getOptionGroups();  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  currentToken  =  options.getOptionGroups();	  Option    currentToken    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	51	None	replace
181	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  this.options);  [CE]  cannot  find  symbol  argument  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  this.options);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  this.options);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  cannot  find  symbol  argument	64	None	replace
182	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  this.skipParsing);  [CE]  cannot  find  symbol  argument  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getOption(argument,  this.currentToken,  this.skipParsing);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getOption(argument,  this.currentToken,  this.skipParsing);	  Option    cmd    =    options.getOption(argument,    this.currentToken);    	non-compiled	[CE]  cannot  find  symbol  argument	64	None	replace
183	[BUG]  [BUGGY]  Option  cmd  =  options.getCurrentParser(argument);  [CE]  cannot  find  symbol  argument  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  Option  cmd  =  options.getCurrentParser(argument);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	Option  cmd  =  options.getCurrentParser(argument);	  Option    cmd    =    options.getCurrentParser();    	non-compiled	[CE]  cannot  find  symbol  argument	33	None	replace
184	[BUG]  [BUGGY]  this.options  =  Arrays.asList(optionGroups);  [CE]  cannot  find  symbol  optionGroups  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;      [BUGGY]  this.options  =  Arrays.asList(optionGroups);  [BUGGY]      this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	this.options  =  Arrays.asList(optionGroups);	  this.options    =    Arrays.asList(arguments);    	non-compiled	[CE]  cannot  find  symbol  optionGroups	4	None	replace
