projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=properties;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=false;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=true;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!skipParsing){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getRequiredOptions():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.asList(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.copyOf(arguments,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=false;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getSelectedOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=false;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.stopAtNonOption=true;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argumentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:stopToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOptions():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOption():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Options.EMPTY_STRING;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>2;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=this.options.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken()+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getImplicitRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=true;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgumentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(!stopAtNonOption){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption||!skipParsing){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.cloneOptions;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.options=options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getAssignedOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newProperties();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().add(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getRequiredOption():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getSelectedOption():option;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.options=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length==0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Iterator<Option>options=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption(this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(options.getCmd());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentOption.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=this.options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentToken.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(this.currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getImplicitRequiredOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getImplicitParsingOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getImplicitOpt();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||arguments.getRequiredOptions().contains(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=options||stopAtNonOption.getRequiredOptions().contains(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Options.EMPTY;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOpts());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList(options.getOptionGroups());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length>3;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.copyOf(arguments,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.copyOf(arguments,arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.copyOf(arguments,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=arguments.getToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=this.options.getToken(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argumentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argumentToken,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getDefaultParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getOptionCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentToken();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrent();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=currentToken?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=null?null:currentToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().add(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().add(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Option.EMPTY_STRING;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArg();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.clone();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getSelectedOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getImplicitRequiredOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newString[arguments.length];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken()/1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken()-1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentToken.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newProperties(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT|StopAtNonOption.DEFAULT;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>(options.getOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newLinkedList<Option>(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>(options.getAllOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,0,arguments.length);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),arguments=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),this.options;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),this.arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(argument,this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getAssignedOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptionGroups();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().length>2;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getSelectedOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts));
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&arguments.getRequiredOptions().contains(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.ERROR||stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.asList(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.asList(arguments,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.asList(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(argumentOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:startToken;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newLinkedList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.stopAtNonOption=null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgument(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getArgument();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,currentToken,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getOptionCurrentParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().indexOf(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().contains(argument,expectedOpts)+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(argument)+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:currentToken+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length!=0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newArrayList<Option>(options.getOptionGroups());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(token);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getOption(token);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().length==2;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption){this.options=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(this.token);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=optionOptions;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.cloneOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption&&!skipParsing){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103if(stopAtNonOption||skipParsing){this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Lists.newArrayList(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentOption=options.getRequiredOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOption(argument,this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&&options.getRequiredOptions().add(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,null,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=option;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),arguments=newOptionGroup(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),arguments=newString[0];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getToken(),arguments=newString[options.getRequiredOptions().size()];
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newOptionGroup(argumentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=(this.options!=null)?this.options.getToken():argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?options.getToken():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103This.options=options.cloneOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption?null:argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT||stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=StopAtNonOption.DEFAULT&&arguments.length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.copyOf(arguments,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getArgument(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroups();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=options.getOptions(),options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionscmd=options.getCurrentParser(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption&options.getSelectedOptions():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getRequiredOption(argument,this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newProperties(argumentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=newProperties(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getArgumentOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionCmd(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOptionArg(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getRequiredOption(argument,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.stopAtNonOption=stopAtNonOption||options.getRequiredOptions().contains(argument)&&arguments.length>0;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optionoption=options.getOption(argument,this.currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103OptioncurrentToken=options.getOptionGroups();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken,this.options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getOption(argument,this.currentToken,this.skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103Optioncmd=options.getCurrentParser(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java103this.options=Arrays.asList(optionGroups);
