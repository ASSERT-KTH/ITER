bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(properties!=  null)  {  aughtException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  aughtException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  aughtException( "Properties  cannot  be  null. ");  }	  aughtException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  Parent  <?>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parent  <?>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parent  <?>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }	  parent    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
3	[BUG]  [BUGGY]  parent  ==  null  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent  ==  null  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  }	  parent    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name: "  +  properties.getPropertyNames());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name: "  +  properties.getPropertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Property  name: "  +  properties.getPropertyNames());	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(properties.getPropertyNames()));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(properties.getPropertyNames());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(properties.getPropertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ").equals(properties.getPropertyNames());	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(properties.getPropertyNames()));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "  +  properties.getPropertyNames());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "  +  properties.getPropertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " "  +  properties.getPropertyNames());	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(properties.getPropertyNames()));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
7	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name  not  defined: "  +  properties.getPropertyNames());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name  not  defined: "  +  properties.getPropertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Property  name  not  defined: "  +  properties.getPropertyNames());	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(properties.getPropertyNames()));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
8	[BUG]  [BUGGY]  Properties  properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    declared.       ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
11	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
12	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
13	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  e);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  e);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleMissingException( " ",  e);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleMissingException( ", ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
15	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
16	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw(new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
17	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw(new  IllegalStateException( " "));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
18	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " "));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " "));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " "));	  Throwables.throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
19	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ",  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ",  expectedOpts);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " ",  expectedOpts);	  Throwables.throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
20	[BUG]  [BUGGY]  Property[]  expectedOpts  =  this.currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  this.currentOption.getOptions();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  this.currentOption.getOptions();	  Property[]    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
21	[BUG]  [BUGGY]  Property[]  expectedOpts  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  options.getOptions();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  options.getOptions();	  Property[]    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
22	[BUG]  [BUGGY]  Property[]  expectedOpts  =  currentOption.getProperties();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  currentOption.getProperties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  currentOption.getProperties();	  Property[]    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler(properties.get(0),  expectedOpts.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties.get(0),  expectedOpts.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties.get(0),  expectedOpts.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler(properties.get(0),    expectedOpts.size())    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
24	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " "  +  propertyNames);	  Throwables.throw    new    UnrecognizedOptionException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
25	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Property  name  not  defined: "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Property  name  not  defined: "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( "Property  name  not  defined: "  +  propertyNames);	  Throwables.throw    new    UnrecognizedOptionException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
26	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "propertyNames: "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "propertyNames: "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( "propertyNames: "  +  propertyNames);	  Throwables.throw    new    UnrecognizedOptionException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
27	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Thread.currentThread().interrupt();	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
28	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  opt  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  opt  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  opt  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
29	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedOptionException( " ");  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
30	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
31	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  throw  new  UnrecognizedOptionException( " ");  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
32	[BUG]  [BUGGY]  Properties  properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
33	[BUG]  [BUGGY]  Properties  properties  {  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  {  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  {  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
34	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
35	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
36	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
37	[BUG]  [BUGGY]  Property[]  expectedOpts  =  currentOption.getOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  currentOption.getOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  currentOption.getOpts();	  Property[]    expectedOpts    =    getOpts();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getOpts().toArray(new  Property[0]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getOpts().toArray(new  Property[0]);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getOpts().toArray(new  Property[0]);	  Property[]    expectedOpts    =    getOpts();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  propertyNames.equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  propertyNames.equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " "  +  propertyNames.equals(propertyNames));	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " "  +  propertyNames);	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( "Property  name  not  defined: "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( "Property  name  not  defined: "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( "Property  name  not  defined: "  +  propertyNames);	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.values();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.values();	  Enumeration    <?>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(this.properties.properties());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(this.properties.properties());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(this.properties.properties());	  Enumeration    <?>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
44	[BUG]  [BUGGY]  ||  expectedOpts.contains(property))  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.contains(property))  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.contains(property))  {  return;  }	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
45	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property))  {  return;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property))  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(property  ==  null  ||  expectedOpts.contains(property))  {  return;  }	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
46	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property))  {  throw  new  UnrecognizedException( " ");  }	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
47	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " "));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " "));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " "));	  Throwables.throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " ")  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " ")  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " ")	  Throwables.throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( "Property  name  not  defined: ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( "Property  name  not  defined: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( "Property  name  not  defined: ");	  Throwables.throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  aught(Exception.class)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aught(Exception.class)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(Exception.class)  {  throw  new  UnrecognizedOptionException( " ");  }	  aught(UnrecognizedOptionException.class)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
51	[BUG]  [BUGGY]  aught(UnrecognizedOptionException.class)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aught(UnrecognizedOptionException.class)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(UnrecognizedOptionException.class)  {  throw  new  IllegalArgumentException( " ");  }	  aught(UnrecognizedOptionException.class)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
52	[BUG]  [BUGGY]  aught(UnrecognizedOptionException.class)  {  throw  new  UnrecognizedOptionException( " "));  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aught(UnrecognizedOptionException.class)  {  throw  new  UnrecognizedOptionException( " "));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(UnrecognizedOptionException.class)  {  throw  new  UnrecognizedOptionException( " "));  }	  aught(UnrecognizedOptionException.class)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
53	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()!=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()!=  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  properties.size()!=  0)  {  return;  }	  if(properties    ==    null    ||    expectedOpts.size()!=    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
54	[BUG]  [BUGGY]  ||  expectedOpts.size()!=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()!=  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()!=  0)  {  return;  }	  if(properties    ==    null    ||    expectedOpts.size()!=    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
55	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.iterator().next();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.iterator().next();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.properties.iterator().next();	  Enumeration    <?>    expectedOpts    =    properties.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
56	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.values().getAllOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.values().getAllOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.properties.values().getAllOpts();	  Enumeration    <?>    expectedOpts    =    properties.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
57	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.keySet();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.keySet();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.properties.keySet();	  Enumeration    <?>    expectedOpts    =    properties.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
58	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  properties.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts!=  null  ||  properties.size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts!=  null  ||  properties.size()  ==  0)  {  return;  }	  if(properties!=    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
60	[BUG]  [BUGGY]  if(properties!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  }  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  }	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
61	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "property  name= "  +  properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "property  name= "  +  properties.propertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "property  name= "  +  properties.propertyNames());	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
62	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");	  throw    new    UnrecognizedException(   "Properties    cannot    be    declared.   ");    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
63	[BUG]  [BUGGY]  Parchet.checkState(properties!=  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parchet.checkState(properties!=  null);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(properties!=  null);	  Parchet.checkState(properties    ==    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
64	[BUG]  [BUGGY]  Parchet.checkState(this.properties  ==  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parchet.checkState(this.properties  ==  null);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(this.properties  ==  null);	  Parchet.checkState(properties    ==    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
65	[BUG]  [BUGGY]  Parchet.checkState(propertyNames  ==  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parchet.checkState(propertyNames  ==  null);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(propertyNames  ==  null);	  Parchet.checkState(properties    ==    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
66	[BUG]  [BUGGY]  if(e.hasMoreElements())  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(e.hasMoreElements())  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(e.hasMoreElements())  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "),    e);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
67	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
68	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
69	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
70	[BUG]  [BUGGY]  handleExceptionHandler(new  UnrecognizedOptionException( " "));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  handleExceptionHandler(new  UnrecognizedOptionException( " "));  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	handleExceptionHandler(new  UnrecognizedOptionException( " "));	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
71	[BUG]  [BUGGY]  handleProperties(new  UnrecognizedOptionException( " "));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  handleProperties(new  UnrecognizedOptionException( " "));  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	handleProperties(new  UnrecognizedOptionException( " "));	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
72	[BUG]  [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( "Property "));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( "Property "));  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(new  UnrecognizedOptionException( "Property "));	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
73	[BUG]  [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined.   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
74	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. "  +  option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. "  +  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. "  +  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined.   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
75	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(properties.propertyNames()));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(properties.propertyNames()));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(properties.propertyNames()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(propertyNames()));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(propertyNames()));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(propertyNames()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: ");	  throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
78	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  this);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  this);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  this);	  throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
79	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  getClass());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  getClass());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  getClass());	  throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
80	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getProperties().toArray(properties);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getProperties().toArray(properties);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getProperties().toArray(properties);	  Property[]    expectedOpts    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getProperties().properties();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getProperties().properties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getProperties().properties();	  Property[]    expectedOpts    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  1)  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()  ==  1)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  1)  {  return;  }	  ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  2)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()  ==  2)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  2)  {  return;  }	  ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
84	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(property  ==  null  ||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
85	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property))  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
86	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.contains(property))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  properties.contains(property))  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  properties.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
87	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()  ==  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  1)  {  throw  new  UnrecognizedOptionException( " ");  }	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
88	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  2)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()  ==  2)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  2)  {  throw  new  UnrecognizedOptionException( " ");  }	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
89	[BUG]  [BUGGY]  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  }	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
91	[BUG]  [BUGGY]  if(properties  ==  null)  {  throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  }  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  }	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
92	[BUG]  [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries!=  null)  {  throw  new  UnrecognizedOptionException( " ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
93	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  deprecated. ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  deprecated. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  deprecated. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
94	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  removed ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  removed ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  removed ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
95	[BUG]  [BUGGY]  if(properties!=  null)  {  aughtInvalidProperty( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  aughtInvalidProperty( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  aughtInvalidProperty( "Properties  cannot  be  null. ");  }	  aughtInvalidProperty(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
96	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyNames();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertyNames();	  Enumeration    <?>    expectedOpts    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
97	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames().length  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.propertyNames().length  ==  0)  {	  if(properties    ==    null    ||    properties.propertyNames().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
98	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().length!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().length!=  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().length!=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
99	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().length  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames().length  ==  0)  {	  if(properties    ==    null    ||    properties.propertyNames().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
100	[BUG]  [BUGGY]  Properties  properties  =  properties.get(expectedOpts.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  =  properties.get(expectedOpts.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  =  properties.get(expectedOpts.size());	  Properties    properties    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
101	[BUG]  [BUGGY]  Properties  properties  =  expectedOpts.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  =  expectedOpts.get(properties.size()  -  1);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  =  expectedOpts.get(properties.size()  -  1);	  Properties    properties    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
102	[BUG]  [BUGGY]  Properties  properties  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  =  properties.get(properties.size()  -  1);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  =  properties.get(properties.size()  -  1);	  Properties    properties    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
103	[BUG]  [BUGGY]  if(option!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(option!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(option!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
104	[BUG]  [BUGGY]  if(option  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(option  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(option  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
105	[BUG]  [BUGGY]  Properties  properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  ==  null)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  ==  null)  {  return;  }	  properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
106	[BUG]  [BUGGY]  Properties  properties  ==  null  ||!properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  ==  null  ||!properties.isEmpty())  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  ==  null  ||!properties.isEmpty())  {  return;  }	  properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
107	[BUG]  [BUGGY]  properties  ==  null  ||!properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  properties  ==  null  ||!properties.isEmpty())  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	properties  ==  null  ||!properties.isEmpty())  {  return;  }	  properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  property.properties();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  property.properties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  property.properties();	  Enumeration    <?>    expectedOpts    =    props.properties();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
109	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  1)  {  throw  new  UnrecognizedOptionException( " ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()  ==  1)  {  throw  new  UnrecognizedOptionException( " ");  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  1)  {  throw  new  UnrecognizedOptionException( " ");	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
110	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  2)  {  throw  new  UnrecognizedOptionException( " ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()  ==  2)  {  throw  new  UnrecognizedOptionException( " ");  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  2)  {  throw  new  UnrecognizedOptionException( " ");	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
111	[BUG]  [BUGGY]  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()!=  0)  {  throw  new  UnrecognizedOptionException( " ");	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw(new  IllegalArgumentException( "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
113	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Property  name "));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Property  name "));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw(new  IllegalArgumentException( "Property  name "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
114	[BUG]  [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   "    +    option);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
115	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   "    +    option);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
116	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null  ||  expectedOpts  ==  null)  {	  if(properties    ==    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
117	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  expectedOpts  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  expectedOpts  ==  null)  {	  if(properties    ==    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
118	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  expectedOpts!=  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts!=  null)  {	  if(properties    ==    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
119	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
120	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  expectedOpts.size()  ==  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
121	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.size()!=  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
122	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertiesToOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertiesToOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.propertiesToOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertiesToOpts();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
123	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertiesToOpts(false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertiesToOpts(false);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertiesToOpts(false);	  Enumeration    <?>    expectedOpts    =    properties.propertiesToOpts();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
124	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertiesToOpts();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertiesToOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.propertiesToOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertiesToOpts();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
125	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  expectedOpts.size());	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
126	[BUG]  [BUGGY]  handleExceptionHandler(properties,  expectedOpts.size());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  handleExceptionHandler(properties,  expectedOpts.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	handleExceptionHandler(properties,  expectedOpts.size());	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
127	[BUG]  [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries!=  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
128	[BUG]  [BUGGY]  parent  ==  null  ||  properties.properties!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent  ==  null  ||  properties.properties!=  null)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  properties.properties!=  null)  {  return;  }	  parent    ==    null    ||    properties.properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
129	[BUG]  [BUGGY]  Properties  properties  ==  null  ||  properties.properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  properties  ==  null  ||  properties.properties  ==  null)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  ==  null  ||  properties.properties  ==  null)  {  return;  }	  parent    ==    null    ||    properties.properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
130	[BUG]  [BUGGY]  Parent  <?>  parent  ==  null  ||  properties.properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parent  <?>  parent  ==  null  ||  properties.properties  ==  null)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parent  <?>  parent  ==  null  ||  properties.properties  ==  null)  {  return;  }	  parent    ==    null    ||    properties.properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
131	[BUG]  [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwable  t  =  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");	  Throwable    t    =    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
132	[BUG]  [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwable  t  =  new  UnrecognizedException( "Properties  cannot  be  declared. ");	  Throwable    t    =    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
133	[BUG]  [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Properties  must  be  initialized. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Properties  must  be  initialized. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwable  t  =  new  UnrecognizedException( "Properties  must  be  initialized. ");	  Throwable    t    =    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
134	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ".getMessage());  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ".getMessage());  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
135	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  can  not  be  deprecated. ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  can  not  be  deprecated. ".getMessage());  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  can  not  be  deprecated. ".getMessage());  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  expectedOpts);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  expectedOpts);	  aughtExceptionHandler.handleProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
137	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  selected);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  selected);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  selected);	  aughtExceptionHandler.handleProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
138	[BUG]  [BUGGY]  if(option!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(option!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(option!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "Default    property    wasn't    defined   "),    option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
139	[BUG]  [BUGGY]  if(option  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(option  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(option  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "Default    property    wasn't    defined   "),    option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
140	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getEmptyOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getEmptyOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.getEmptyOpts();	  Enumeration    <?>    expectedOpts    =    this.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
141	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getAllProperties();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getAllProperties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.getAllProperties();	  Enumeration    <?>    expectedOpts    =    this.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
142	[BUG]  [BUGGY]  parent.handleProperties(properties,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent.handleProperties(properties,  expectedOpts);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent.handleProperties(properties,  expectedOpts);	  parent.handleProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
143	[BUG]  [BUGGY]  parent.handleProperties(properties,  selected);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent.handleProperties(properties,  selected);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent.handleProperties(properties,  selected);	  parent.handleProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
144	[BUG]  [BUGGY]  parent.handleProperties(properties,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent.handleProperties(properties,  true);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent.handleProperties(properties,  true);	  parent.handleProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
145	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  expectedOpts.size())  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
146	[BUG]  [BUGGY]  aughtExceptionHandler(properties.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
147	[BUG]  [BUGGY]  Property  prop  =  properties.get(expectedOpts.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property  prop  =  properties.get(expectedOpts.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property  prop  =  properties.get(expectedOpts.size());	  Property    prop    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
148	[BUG]  [BUGGY]  Property  prop  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property  prop  =  properties.get(properties.size()  -  1);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property  prop  =  properties.get(properties.size()  -  1);	  Property    prop    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
149	[BUG]  [BUGGY]  Property  prop  =  properties.get(propertyNames.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property  prop  =  properties.get(propertyNames.size()  -  1);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property  prop  =  properties.get(propertyNames.size()  -  1);	  Property    prop    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
150	[BUG]  [BUGGY]  Property  prop  =  properties.get(properties.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property  prop  =  properties.get(properties.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property  prop  =  properties.get(properties.size());	  Property    prop    =    properties.get(expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
151	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  properties);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  properties);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  properties);	  aughtExceptionHandler.handleProperty(properties,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
152	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  null,  expectedOpts);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  null,  expectedOpts);	  aughtExceptionHandler.handleProperty(properties,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
153	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  null,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  null,  null);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  null,  null);	  aughtExceptionHandler.handleProperty(properties,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
154	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");	  throw    new    UnrecognizedException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
155	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(property  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(property  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }	  if(expectedOpts    ==    null    ||    property.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
156	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }	  if(expectedOpts    ==    null    ||    property.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
157	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
158	[BUG]  [BUGGY]  properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
159	[BUG]  [BUGGY]  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  properties.propertyNames().size()  ==  0)  {  return;  }	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
160	[BUG]  [BUGGY]  aught(UnrecognizedOptionException.class,  null))  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aught(UnrecognizedOptionException.class,  null))  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(UnrecognizedOptionException.class,  null))  {  throw  new  UnrecognizedOptionException( " ");  }	  aught(UnrecognizedOptionException.class,       "   "))    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
161	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getOpts();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  getOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getOpts();	  List    <    Property>    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
162	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(getOptions());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(getOptions());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(getOptions());	  List    <    Property>    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
163	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(properties.size());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(properties.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(properties.size());	  List    <    Property>    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
164	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( "Default  property  was  not  defined: ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( "Default  property  was  not  defined: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( "Default  property  was  not  defined: ");	  throw    new    UnrecognizedException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
165	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  +  this);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  +  this);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Default  property  was  not  defined: "  +  this);	  throw    new    UnrecognizedException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
166	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  + "property  is  null. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  + "property  is  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Default  property  was  not  defined: "  + "property  is  null. ");	  throw    new    UnrecognizedException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
167	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
168	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
169	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
170	[BUG]  [BUGGY]  Properties  propertiesDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatorita  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Properties  propertiesDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatorita  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  propertiesDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatorita	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
171	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(getProperties());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(getProperties());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>(getProperties());	  List    <    Property>    expectedOpts    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
172	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getOptions().properties();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getOptions().properties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getOptions().properties();	  Property[]    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
173	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getOptions().values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  getOptions().values();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getOptions().values();	  Property[]    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
174	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " "  +  propertyNames);	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
175	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name  not  defined: "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name  not  defined: "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Property  name  not  defined: "  +  propertyNames);	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
176	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name  is  not  supported. ").equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  name  is  not  supported. ").equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Property  name  is  not  supported. ").equals(propertyNames));	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
177	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " "));	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
178	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ")	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
179	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertyOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.propertyOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
180	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertyOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertyOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.propertyOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
181	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  props.propertyOpts();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  props.propertyOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  props.propertyOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
182	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
183	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
184	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames()  +  1))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
185	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  propertyNames.equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  propertyNames.equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  propertyNames.equals(propertyNames));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
186	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(propertyNames);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(propertyNames);	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
187	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  propertyNames);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  propertyNames);	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
188	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(propertyNames));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
189	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " ",  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " ",  expectedOpts);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " ",  expectedOpts);	  Throwables.throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
190	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  properties.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties,  properties.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  properties.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
191	[BUG]  [BUGGY]  if(properties  ==  null)  {  aughtInvalidProperty( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  aughtInvalidProperty( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  aughtInvalidProperty( "Properties  cannot  be  null. ");  }	  aughtInvalidProperty(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
192	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  properties  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  properties  ==  null)  {	  if(properties    ==    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
193	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  property  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  property  ==  null)  {	  if(properties    ==    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
194	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.values())  {  throw  new  UnrecognizedOptionException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
195	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.propertyNames())  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.propertyNames())  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.propertyNames())  {  return;  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
196	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.values())  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.values())  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  option  :  options.values())  {  throw  new  UnrecognizedException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
197	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  return;  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
198	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getOptions(group);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  getOptions(group);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getOptions(group);	  List    <    Property>    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
199	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
200	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Property  ' "+propertyNames()  + ") ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Property  ' "+propertyNames()  + ") ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw(new  IllegalArgumentException( "Property  ' "+propertyNames()  + ") ");	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
201	[BUG]  [BUGGY]  Enumeration  <?>  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared.   ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared.   ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared.   ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    declared.       ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
202	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  +  getClass());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  +  getClass());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Default  property  was  not  defined: "  +  getClass());	  throw    new    UnrecognizedException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
203	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  property.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts!=  null  ||  property.size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts!=  null  ||  property.size()  ==  0)  {  return;  }	  if(properties!=    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
204	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ").getMessage();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ").getMessage();  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ").getMessage();  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
205	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " "  +  properties.propertyNames));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " "  +  properties.propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " "  +  properties.propertyNames));	  Throwables.throw    new    UnrecognizedOptionException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
206	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ").equals(propertyNames);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ").equals(propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " ").equals(propertyNames);	  Throwables.throw    new    UnrecognizedOptionException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
207	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");	  throw    new    IllegalArgumentException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
208	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  options.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  options.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  options.values())  {  throw  new  UnrecognizedOptionException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
209	[BUG]  [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedOptionException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
210	[BUG]  [BUGGY]  if(properties!=  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  throw  new  UnrecognizedOptionException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
211	[BUG]  [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
212	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.currentOption.properties();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.currentOption.properties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.currentOption.properties();	  Enumeration    <?>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
213	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.values().getAllOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.values().getAllOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.values().getAllOpts();	  Enumeration    <?>    expectedOpts    =    this.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
214	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getAllElements();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getAllElements();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.getAllElements();	  Enumeration    <?>    expectedOpts    =    this.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
215	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  options.values())  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  options.values())  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  options.values())  {  throw  new  UnrecognizedException( " ");  }	  >=    [Delete]    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
216	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ").equals(propertyNames));	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
217	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(propertyNames);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ").equals(propertyNames);	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
218	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(propertyNames));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
219	[BUG]  [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Unrecognized  exception: ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwable  t  =  new  UnrecognizedException( "Unrecognized  exception: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwable  t  =  new  UnrecognizedException( "Unrecognized  exception: ");	  Throwable    t    =    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
220	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ")  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ")  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " ")	  Throwables.throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
221	[BUG]  [BUGGY]  aughtExceptionHandler(properties.get(0),  properties.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties.get(0),  properties.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties.get(0),  properties.size())  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler(properties.get(0),    expectedOpts.size())    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
222	[BUG]  [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedOptionException( " ");  }	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
223	[BUG]  [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedException( " ");  }	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
224	[BUG]  [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedOptionException( " "  +  option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedOptionException( " "  +  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  for(Enumeration  <?>  option  :  properties.propertyNames())  {  if(option.hasMoreElements())  {  throw  new  UnrecognizedOptionException( " "  +  option);  }	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
225	[BUG]  [BUGGY]  if(properties  ==  null)  {  aughtException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  aughtException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  aughtException( "Properties  cannot  be  null. ");  }	  aughtException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
226	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getOptions().toArray(new  Property[0]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getOptions().toArray(new  Property[0]);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getOptions().toArray(new  Property[0]);	  Property[]    expectedOpts    =    getOptions().values();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
227	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getProperties().toArray(new  Property[0]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getProperties().toArray(new  Property[0]);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getProperties().toArray(new  Property[0]);	  Property[]    expectedOpts    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
228	[BUG]  [BUGGY]  Enumeration  <?>  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
229	[BUG]  [BUGGY]  if(properties  ==  null)  {  aughtInvalidOption( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  aughtInvalidOption( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  aughtInvalidOption( "Properties  cannot  be  null. ");  }	  aughtInvalidOption(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
230	[BUG]  [BUGGY]  if(properties!=  null)  {  aughtInvalidOption( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  aughtInvalidOption( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  aughtInvalidOption( "Properties  cannot  be  null. ");  }	  aughtInvalidOption(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
231	[BUG]  [BUGGY]  if(e!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(e!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(e!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "),    e);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
232	[BUG]  [BUGGY]  if(options  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "),    e);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
233	[BUG]  [BUGGY]  if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "),    e);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
234	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getAllProperties();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  getAllProperties();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getAllProperties();	  List    <    Property>    expectedOpts    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
235	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()!=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()!=  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.size()!=  0)  {  return;  }	  if(expectedOpts    ==    null    ||    properties.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
236	[BUG]  [BUGGY]  Parchet.checkState(this.properties!=  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parchet.checkState(this.properties!=  null);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(this.properties!=  null);	  Parchet.checkState(properties    ==    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
237	[BUG]  [BUGGY]  Throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");	  throw    new    UnrecognizedException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
238	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.keySet();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.keySet();	  Enumeration    <?>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
239	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property))  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property))  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  expectedOpts.contains(property))  {  return;  }	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
240	[BUG]  [BUGGY]  Throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");	  throw    new    UnrecognizedException(   "Properties    cannot    be    declared.   ");    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
241	[BUG]  [BUGGY]  if(properties  ==  null)  {  aughtException( "Properties  cannot  be  declared.   ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  aughtException( "Properties  cannot  be  declared.   ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  aughtException( "Properties  cannot  be  declared.   ");  }	  aughtException(   "Properties    cannot    be    declared.   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
242	[BUG]  [BUGGY]  _throwException( "Properties  cannot  be  declared.   ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  _throwException( "Properties  cannot  be  declared.   ");  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	_throwException( "Properties  cannot  be  declared.   ");	  aughtException(   "Properties    cannot    be    declared.   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
243	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames())||  currentOption  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames())||  currentOption  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames())||  currentOption  ==  null)  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
244	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(properties.getPropertyName()));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(properties.getPropertyName()));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(properties.getPropertyName()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
245	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".equals(properties.getPropertyName()));  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".equals(properties.getPropertyName()));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".equals(properties.getPropertyName()));  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
246	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".equals(properties.values());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".equals(properties.values());  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".equals(properties.values());  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
247	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(properties.getPropertyNames()));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").equals(properties.getPropertyNames()));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ").equals(properties.getPropertyNames()));	  Throwables.throw    new    UnsupportedOperationException(   "   ".equals(properties.getPropertyNames()));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
248	[BUG]  [BUGGY]  parent.handleDefaultProperties(properties);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent.handleDefaultProperties(properties);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent.handleDefaultProperties(properties);	  parent.handleProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
249	[BUG]  [BUGGY]  ||  expectedOpts.size()!=  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  ||  expectedOpts.size()!=  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()!=  1)  {  throw  new  UnrecognizedOptionException( " ");  }	  ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
250	[BUG]  [BUGGY]  aughtExceptionHandler(this,  options.propertyNames());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(this,  options.propertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(this,  options.propertyNames());	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
251	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtException( " ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtException( " ");	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
252	[BUG]  [BUGGY]  aughtExceptionHandler(this,  options.getOptionName());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(this,  options.getOptionName());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(this,  options.getOptionName());	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
253	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  this);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  this);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  this);	  aughtExceptionHandler.handleProperty(properties,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
254	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  option);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  option);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: "  +  option);	  throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
255	[BUG]  [BUGGY]  Property[]  expectedOpts  =  currentOption.getTokens();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  currentOption.getTokens();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  currentOption.getTokens();	  Property[]    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
256	[BUG]  [BUGGY]  Property[]  expectedOpts  =  currentOption.properties.getOptions();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  currentOption.properties.getOptions();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  currentOption.properties.getOptions();	  Property[]    expectedOpts    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
257	[BUG]  [BUGGY]  Property  properties  {  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property  properties  {  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property  properties  {  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
258	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  properties.propertyNames));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  properties.propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " "  +  properties.propertyNames));	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
259	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " ").equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " ").equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " ").equals(propertyNames));	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
260	[BUG]  [BUGGY]  if(propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(propertyNames  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(propertyNames  ==  null)  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
261	[BUG]  [BUGGY]  Parent  <  Object>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parent  <  Object>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parent  <  Object>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }	  parent    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
262	[BUG]  [BUGGY]  parent  ==  null  ||  parent.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent  ==  null  ||  parent.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  parent.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }	  parent    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
263	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.getAllElements();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.getAllElements();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.properties.getAllElements();	  Enumeration    <?>    expectedOpts    =    properties.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
264	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  expectedOpts);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ",  expectedOpts);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
265	[BUG]  [BUGGY]  properties  ==  null)  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  properties  ==  null)  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	properties  ==  null)  {  throw  new  UnrecognizedException( " ");  }	  properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
266	[BUG]  [BUGGY]  properties  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  properties  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	properties  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }	  properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
267	[BUG]  [BUGGY]  if(property!=  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(property!=  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(property!=  null  ||  expectedOpts.size()  ==  0)  {  return;  }	  if(expectedOpts    ==    null    ||    property.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
268	[BUG]  [BUGGY]  if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
269	[BUG]  [BUGGY]  if(options  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
270	[BUG]  [BUGGY]  if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "UnrecognizedOptionException( " "));  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "UnrecognizedOptionException( " "));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options!=  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "UnrecognizedOptionException( " "));  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
271	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  return;  }	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
272	[BUG]  [BUGGY]  parent  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
273	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
274	[BUG]  [BUGGY]  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	new  UnsupportedOperationException( "Properties  cannot  be  null. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
275	[BUG]  [BUGGY]  if(properties  ==  null  ||  propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  propertyNames  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
276	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties,  properties.size()  -  1);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  properties.size()  -  1);	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
277	[BUG]  [BUGGY]  if(opt  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(opt  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(opt  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "Default    property    wasn't    defined   "),    option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
278	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  +  option);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  +  option);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  +  option);	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
279	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  +  getClass());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  +  getClass());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  +  getClass());	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
280	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
281	[BUG]  [BUGGY]  if(opt  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(opt  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(opt  ==  null)  {  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  }	  aughtExceptionHandler(new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
282	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
283	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " ").equals(propertyNames);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " ").equals(propertyNames);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " ").equals(propertyNames);	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
284	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( " "  +  properties.propertyNames());  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " "  +  properties.propertyNames());	  Throwables.throw    new    UnrecognizedException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
285	[BUG]  [BUGGY]  Class  <?>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Class  <?>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Class  <?>  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }	  parent    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
286	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  IllegalStateException( "Properties  cannot  be  deprecated. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  IllegalStateException( "Properties  cannot  be  deprecated. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
287	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	OptionGroup  group  =  options.getOptionGroup(option);	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
288	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList();	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
289	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(option);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	OptionGroup  group  =  options.getGroup(option);	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
290	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	OptionGroup  group  =  options.getGroup();	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
291	[BUG]  [BUGGY]  if(properties  ==  null  ||  property.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  property.propertyNames  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  property.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
292	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList();  expectedOpts.addAll(properties);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList();  expectedOpts.addAll(properties);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList();  expectedOpts.addAll(properties);	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
293	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.size());	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
294	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
295	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList();  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList();  expectedOpts.addAll(properties.values());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList();  expectedOpts.addAll(properties.values());	  >>    [Delete]    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
296	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
297	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
298	[BUG]  [BUGGY]  Throw  new  UnrecognizedException( "Default  property  was  not  defined: ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throw  new  UnrecognizedException( "Default  property  was  not  defined: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throw  new  UnrecognizedException( "Default  property  was  not  defined: ");	  throw    new    UnrecognizedException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
299	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  + "properties  are  null. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: "  + "properties  are  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Default  property  was  not  defined: "  + "properties  are  null. ");	  throw    new    UnrecognizedException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
300	[BUG]  [BUGGY]  if(properties!=  null)  {  aughtExceptionHandler.handleProperty(properties);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  aughtExceptionHandler.handleProperty(properties);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  aughtExceptionHandler.handleProperty(properties);  }	  aughtExceptionHandler.handleProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
301	[BUG]  [BUGGY]  if(properties  ==  null)  {  throw  new  UnrecognizedException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  throw  new  UnrecognizedException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  throw  new  UnrecognizedException( "Properties  cannot  be  null. ");  }	  aughtInvalidProperty(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
302	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.iterator().next();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.iterator().next();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.iterator().next();	  Enumeration    <?>    expectedOpts    =    this.properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
303	[BUG]  [BUGGY]  properties  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  properties  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	properties  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }	  properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
304	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined.   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
305	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined.  Try  using  default  properties. ",  option);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined.  Try  using  default  properties. ",  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined.  Try  using  default  properties. ",  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined.   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
306	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.propertyNames!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
307	[BUG]  [BUGGY]  e.printStackTrace();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  e.printStackTrace();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	e.printStackTrace();	  aughtExceptionHandler(new    UnrecognizedOptionException(   "   "),    e);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
308	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  deprecated.  Try  using  default  properties. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  deprecated.  Try  using  default  properties. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Properties  cannot  be  deprecated.  Try  using  default  properties. ");	  throw    new    UnrecognizedException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
309	[BUG]  [BUGGY]  Parent  {  null  ||  properties.properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parent  {  null  ||  properties.properties  ==  null)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parent  {  null  ||  properties.properties  ==  null)  {  return;  }	  parent    ==    null    ||    properties.properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
310	[BUG]  [BUGGY]  aughtException( "UnrecognizedOptionException: ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtException( "UnrecognizedOptionException: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtException( "UnrecognizedOptionException: ");	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
311	[BUG]  [BUGGY]  aughtException( "UnrecognizedOptionException( ", ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtException( "UnrecognizedOptionException( ", ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtException( "UnrecognizedOptionException( ", ");	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
312	[BUG]  [BUGGY]  aughtException( "UnrecognizedOptionException: "  +  option);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtException( "UnrecognizedOptionException: "  +  option);  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtException( "UnrecognizedOptionException: "  +  option);	  if(options    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
313	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ",  expectedOpts);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ",  expectedOpts);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ",  expectedOpts);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    declared.       ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
314	[BUG]  [BUGGY]  Parchet.checkState(properties.size()  ==  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parchet.checkState(properties.size()  ==  0);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(properties.size()  ==  0);	  Parchet.checkState(properties    ==    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
315	[BUG]  [BUGGY]  Parchet.checkState(properties.isEmpty());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Parchet.checkState(properties.isEmpty());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(properties.isEmpty());	  Parchet.checkState(properties    ==    null);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
316	[BUG]  [BUGGY]  tries  ==  null  ||  properties.size()  ==  0)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null  ||  properties.size()  ==  0)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null  ||  properties.size()  ==  0)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
317	[BUG]  [BUGGY]  tries  ==  null  ||  properties.hasOption(null))  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null  ||  properties.hasOption(null))  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null  ||  properties.hasOption(null))  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
318	[BUG]  [BUGGY]  tries  ==  null  ||  properties.hasOption(opt))  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null  ||  properties.hasOption(opt))  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null  ||  properties.hasOption(opt))  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
319	[BUG]  [BUGGY]  parent.handleProperties(properties,  group);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent.handleProperties(properties,  group);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent.handleProperties(properties,  group);	  parent.handleProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
320	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  property);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler.handleProperty(properties,  property);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  property);	  aughtExceptionHandler.handleProperty(properties,    null);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
321	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  property  not  found: ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( "Property  property  not  found: ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( "Property  property  not  found: ");	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
322	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( " ".getMessage());  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	try  ==  null)  {  throw  new  UnrecognizedOptionException( " ".getMessage());  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ".getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
323	[BUG]  [BUGGY]  if(properties!=  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	  aughtException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
324	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  declared.  Try  using  default  properties. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  declared.  Try  using  default  properties. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Properties  cannot  be  declared.  Try  using  default  properties. ");	  throw    new    UnrecognizedException(   "Properties    cannot    be    declared.   ");    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
325	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	try  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
326	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined. ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined. ");  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
327	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.size()  >  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.size()  >  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
328	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
329	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getProperties().values();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  getProperties().values();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getProperties().values();	  Property[]    expectedOpts    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
330	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");	  Throwables.throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
331	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  property.propertiesToOpts();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Enumeration  <?>  expectedOpts  =  property.propertiesToOpts();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  property.propertiesToOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertiesToOpts();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
332	[BUG]  [BUGGY]  parent  ==  null  ||  expectedOpts.contains(property))  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  parent  ==  null  ||  expectedOpts.contains(property))  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  expectedOpts.contains(property))  {  return;  }	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
333	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated.  Try  using  default  properties. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated.  Try  using  default  properties. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated.  Try  using  default  properties. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    deprecated.   ");    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
334	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.elements())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.elements())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.elements())  {  throw  new  UnrecognizedOptionException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
335	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.properties())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.properties())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.properties())  {  throw  new  UnrecognizedOptionException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
336	[BUG]  [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  for(Enumeration  <?>  group  :  properties.values())  {  throw  new  UnrecognizedException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
337	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	try  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }	  tries    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
338	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( "Properties  must  be  initialized. ");  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedException( "Properties  must  be  initialized. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( "Properties  must  be  initialized. ");	  Throwables.throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
339	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ").equals(propertyNames));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ").equals(propertyNames));  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " ").equals(propertyNames));	  Throwables.throw    new    UnrecognizedOptionException(   "   ".equals(propertyNames));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
340	[BUG]  [BUGGY]  aughtExceptionHandler(properties.get(0),  props.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties.get(0),  props.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties.get(0),  props.size())  {  throw  new  UnrecognizedOptionException( " ");  }	  aughtExceptionHandler(properties.get(0),    expectedOpts.size())    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
341	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  props.size()!=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(expectedOpts  ==  null  ||  props.size()!=  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  props.size()!=  0)  {  return;  }	  if(properties    ==    null    ||    expectedOpts.size()!=    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
342	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  return;  }	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
343	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames  ==  null)  {  return;  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.propertyNames  ==  null)  {  return;  }	  if(properties!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
344	[BUG]  [BUGGY]  if(properties  ==  null)  {  throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null)  {  throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null)  {  throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  }	  aughtException(   "Properties    cannot    be    declared.   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
345	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  properties.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aughtExceptionHandler(properties,  properties.size());  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  properties.size());	  aughtExceptionHandler(properties,    expectedOpts.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
346	[BUG]  [BUGGY]  return  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  return  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	return  new  UnsupportedOperationException( "Properties  cannot  be  null. ");	  throw    new    UnsupportedOperationException(   "Properties    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
347	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getOpts(properties);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  Property[]  expectedOpts  =  getOpts(properties);  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getOpts(properties);	  Property[]    expectedOpts    =    getOpts();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
348	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames())||  currentToken  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames())||  currentToken  ==  null)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames())||  currentToken  ==  null)  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
349	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "properties  are  null. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "properties  are  null. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "properties  are  null. ");	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
350	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "properties  cannot  be  declared. ");  [BUGGY]      }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: "  + "properties  cannot  be  declared. ");	  throw    new    UnrecognizedOptionException(   "Default    property    was    not    defined:   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
351	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()  >  0)  {  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.size()  >  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
352	[BUG]  [BUGGY]  aught(UnrecognizedOptionException.class,   " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  aught(UnrecognizedOptionException.class,   " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(UnrecognizedOptionException.class,   " "))  {  throw  new  IllegalArgumentException( " ");  }	  aught(UnrecognizedOptionException.class,       "   "))    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
353	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {  if  (properties  ==  null)  {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>();  [BUGGY]      return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(     "Default  option  wasn't  defined     ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>();	  List    <    Property>    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
