bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.getAllOpts();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.getAllOpts();  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    Enumeration  <?>  expectedOpts  =  properties.getAllOpts();		non-compiled	[CE]  illegal  start  of  type	59	None	add
2	[BUG]  [BUGGY]    Property[]  expectedOpts  =  getProperties();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    Property[]  expectedOpts  =  getProperties();  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    Property[]  expectedOpts  =  getProperties();		non-compiled	[CE]  illegal  start  of  type	59	None	add
3	[BUG]  [BUGGY]    Property[]  expectedOpts  =  getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    Property[]  expectedOpts  =  getOptions();  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    Property[]  expectedOpts  =  getOptions();		non-compiled	[CE]  illegal  start  of  type	59	None	add
4	[BUG]  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.properties();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.properties();  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    Enumeration  <?>  expectedOpts  =  properties.properties();		non-compiled	[CE]  illegal  start  of  type	59	None	add
5	[BUG]  [BUGGY]    if(properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null)  {  return;  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null)  {  return;  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
6	[BUG]  [BUGGY]  throw  new  UnrecognizedException( " ");  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]  throw  new  UnrecognizedException( " ");  [BUGGY]  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( " ");	return;  	non-compiled	[CE]  illegal  start  of  type	58	None	replace
7	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( " ");  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]  throw  new  UnrecognizedOptionException( " ");  [BUGGY]  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( " ");	return;  	non-compiled	[CE]  illegal  start  of  type	58	None	replace
8	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnsupportedOperationException( " ");	return;  	non-compiled	[CE]  illegal  start  of  type	58	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  IllegalArgumentException( " ");	return;  	non-compiled	[CE]  illegal  start  of  type	58	None	replace
10	[BUG]  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
11	[BUG]  [BUGGY]    if(properties  ==  null)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null)  {  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null)  {		non-compiled	[CE]  illegal  start  of  type	59	None	add
12	[BUG]  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
13	[BUG]  [BUGGY]    if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
14	[BUG]  [BUGGY]    if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  return;  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
15	[BUG]  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared. ");  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
16	[BUG]  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  {  if  (properties  ==  null)  {  [BUGGY]    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [BUGGY]  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  option  wasn't  defined ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	    if(properties  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }		non-compiled	[CE]  illegal  start  of  type	59	None	add
