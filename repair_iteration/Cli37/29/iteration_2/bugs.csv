bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " ");  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnrecognizedException( " ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " ");	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedException( " ".equals(propertyNames));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnrecognizedException( " ".equals(propertyNames));  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedException( " ".equals(propertyNames));	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getOpts();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Property[]  expectedOpts  =  getOpts();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getOpts();	      Property[]    expectedOpts    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getProperties().values();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Property[]  expectedOpts  =  getProperties().values();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getProperties().values();	      Property[]    expectedOpts    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  Properties  properties  =  properties.get(expectedOpts.size()  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Properties  properties  =  properties.get(expectedOpts.size()  -  1);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Properties  properties  =  properties.get(expectedOpts.size()  -  1);	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyOpts();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertyOpts();	      Enumeration    <?>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getAllOpts();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.getAllOpts();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.getAllOpts();	      Enumeration    <?>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  return;  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	||  expectedOpts.size()  ==  0)  {  return;  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  return;  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  [Delete]  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	[Delete]	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".getMessage());  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( " ".getMessage());  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null. ");  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  if(properties!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties!=  null)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames!=  null)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames!=  null)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties!=  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null  ||  properties.propertyNames  ==  null)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  aughtException( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtException( "Properties  cannot  be  null. ");  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtException( "Properties  cannot  be  null. ");	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null.. ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null.. ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  null.. ");  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw(new  IllegalArgumentException( " "));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(propertyNames));  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(propertyNames));  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(propertyNames));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.properties();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.properties();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.properties();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  props.properties();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  props.properties();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  props.properties();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  Property[]  expectedOpts  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Property[]  expectedOpts  =  currentOption.getOptions();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  currentOption.getOptions();	      Property[]    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  List  <  Property>  expectedOpts  =  getOptions();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getOptions();	      Property[]    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option);  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined. ",  option);  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined "  +  option);  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared.   ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared.   ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	tries  ==  null)  {  throw  new  UnrecognizedOptionException( "Properties  cannot  be  declared.   ");  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    declared.   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  aughtException( "Properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtException( "Properties  cannot  be  declared. ");  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtException( "Properties  cannot  be  declared. ");	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    declared.   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  if(properties!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties!=  null)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties!=  null)  {  return;  }	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler.handleProperty(properties);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties);	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  parent.handleProperties(properties);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  parent.handleProperties(properties);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent.handleProperties(properties);	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  properties  ==  null)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	properties  ==  null)  {  return;  }	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ".equals(propertyNames));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ".equals(propertyNames));  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ".equals(propertyNames));	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " ");	  throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  if(options  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(options  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(options  ==  null)  {  throw  new  UnrecognizedOptionException( " ");  }	  throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined ",  option));	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(new  UnrecognizedOptionException( "Default  property  wasn't  defined "),  option);	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ".equals(properties.getPropertyNames()));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ".equals(properties.getPropertyNames()));  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnsupportedOperationException( " ".equals(properties.getPropertyNames()));	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(expectedOpts  ==  null  ||  property.size()  ==  0)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(expectedOpts  ==  null  ||  property.size()  ==  0)  {  return;  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  parent  ==  null  ||  properties.properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  parent  ==  null  ||  properties.properties  ==  null)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  properties.properties  ==  null)  {  return;  }	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  aughtExceptionHandler.handleProperty(properties,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler.handleProperty(properties,  null);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleProperty(properties,  null);	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.values();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.values();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.values();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  Property  prop  =  properties.get(expectedOpts.size()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Property  prop  =  properties.get(expectedOpts.size()  -  1);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property  prop  =  properties.get(expectedOpts.size()  -  1);	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  Parchet.checkState(properties  ==  null);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Parchet.checkState(properties  ==  null);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Parchet.checkState(properties  ==  null);	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    declared.   ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ".equals(propertyNames));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwables.throw  new  UnrecognizedOptionException( " ".equals(propertyNames));  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwables.throw  new  UnrecognizedOptionException( " ".equals(propertyNames));	  throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts  ==  null)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.size()  ==  0)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  getProperties();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  List  <  Property>  expectedOpts  =  getProperties();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	List  <  Property>  expectedOpts  =  getProperties();	      Property[]    expectedOpts    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  Throwable  t  =  new  UnrecognizedException( " ");  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Throwable  t  =  new  UnrecognizedException( " ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Throwable  t  =  new  UnrecognizedException( " ");	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Properties  cannot  be  deprecated. ");	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
61	[BUG]  [BUGGY]  aught(UnrecognizedOptionException.class)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aught(UnrecognizedOptionException.class)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(UnrecognizedOptionException.class)  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  aught(UnrecognizedOptionException.class,   " "))  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aught(UnrecognizedOptionException.class,   " "))  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aught(UnrecognizedOptionException.class,   " "))  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( " "));  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(new  UnrecognizedOptionException( " "));	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  return;  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.getAllOpts();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.getAllOpts();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.properties.getAllOpts();	      Enumeration    <?>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
66	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertiesToOpts();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertiesToOpts();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertiesToOpts();	      Enumeration    <?>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  aughtInvalidProperty( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtInvalidProperty( "Properties  cannot  be  null. ");  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtInvalidProperty( "Properties  cannot  be  null. ");	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  aughtInvalidOption( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtInvalidOption( "Properties  cannot  be  null. ");  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtInvalidOption( "Properties  cannot  be  null. ");	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Properties    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  return;  }	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
70	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  return;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  return;  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property))  {  return;  }	      if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	parent  ==  null  ||  expectedOpts.size()  ==  0)  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  expectedOpts.size()  -  1)  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  aughtExceptionHandler(properties.get(0),  expectedOpts.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(properties.get(0),  expectedOpts.size())  {  throw  new  UnrecognizedOptionException( " ");  }  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties.get(0),  expectedOpts.size())  {  throw  new  UnrecognizedOptionException( " ");  }	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(properties,  expectedOpts.size()  -  1);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(properties,  expectedOpts.size()  -  1);	      if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
75	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  IllegalArgumentException( "Properties  cannot  be  deprecated. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  Property[]  expectedOpts  =  getOptions().values();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Property[]  expectedOpts  =  getOptions().values();  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Property[]  expectedOpts  =  getOptions().values();	      Property[]    expectedOpts    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
77	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: ");  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnrecognizedException( "Default  property  was  not  defined: ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Default  property  was  not  defined: ");	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedException( "Properties  cannot  be  declared. ");	  throw    new    UnrecognizedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnsupportedOperationException( "Properties  cannot  be  null. ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnsupportedOperationException( "Properties  cannot  be  deprecated. ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  was  not  defined: ");	  throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: ");  [BUGGY]    }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	throw  new  UnrecognizedOptionException( "Default  property  wasn't  defined: ");	  throw    new    UnrecognizedOptionException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  >>  [Delete]  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  >>  [Delete]  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	>>  [Delete]	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
84	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  ==  [Delete]  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	==  [Delete]	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
85	[BUG]  [BUGGY]  >=  [Delete]  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  >=  [Delete]  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	>=  [Delete]	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "Default    property    wasn't    defined   ",    option);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
87	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames()))  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().length  ==  0)  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  properties.propertyNames().length  ==  0)  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
89	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property))  {	      if(properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
90	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
91	[BUG]  [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {  if  (properties  ==  null)  {    [BUGGY]  aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);  [BUGGY]    return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  {  throw  new  UnrecognizedOptionException(   "Default  option  wasn't  defined   ",  option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	aughtExceptionHandler(new  UnrecognizedOptionException( " "),  e);	      if(properties    ==    null)    {    throw    new    UnrecognizedOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
