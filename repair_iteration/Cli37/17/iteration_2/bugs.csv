bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  stopAtNonOption);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  stopAtNonOption);	      Option    currentOption    =    options.getRequiredOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
2	[BUG]  [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(options);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(options);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  arguments.getRequiredOption(options);	      Option    currentOption    =    options.getRequiredOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  skipParsing);  [CE]  cannot  find  symbol  [FE]                    AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  skipParsing);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  skipParsing);	      Option    currentOption    =    options.getRequiredOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  currentOption  =  this.options;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  this.options;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  this.options;	  currentOption    =    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
5	[BUG]  [BUGGY]  currentOption  =  option.options;  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  option.options;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  option.options;	  currentOption    =    option;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
6	[BUG]  [BUGGY]  OptionGroup  group  =  this.options.getGroups();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  group  =  this.options.getGroups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  group  =  this.options.getGroups();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
7	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(this.skipParsing);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  group  =  options.getGroup(this.skipParsing);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  group  =  options.getGroup(this.skipParsing);	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
8	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  group  =  options.getGroups(),  stopAtNonOption;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  stopAtNonOption;	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(),  stopAtNonOption);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(),  stopAtNonOption);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(),  stopAtNonOption);	      Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  ';'  expected	7	None	replace
10	[BUG]  [BUGGY]  Option  currentOption  =  option.getRequiredOption();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  option.getRequiredOption();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  option.getRequiredOption();	      Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  ';'  expected	7	None	replace
11	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(),  this.skipParsing);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(),  this.skipParsing);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(),  this.skipParsing);	      Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]);	      Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  ';'  expected	9	None	replace
13	[BUG]  [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(options[0]);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(options[0]);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  arguments.getRequiredOption(options[0]);	      Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  ';'  expected	9	None	replace
14	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[0]);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[0]);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[0]);	      Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentToken  =  options.getRequiredOption();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentToken  =  options.getRequiredOption();	      	non-compiled	[CE]  ';'  expected	5	None	replace
16	[BUG]  [BUGGY]  Options  options  =  options.getOptions();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Options  options  =  options.getOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Options  options  =  options.getOptions();	      	non-compiled	[CE]  ';'  expected	5	None	replace
17	[BUG]  [BUGGY]  currentOption  =  cmd.options;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  cmd.options;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  cmd.options;	  currentOption    =    cmd;    	non-compiled	[CE]  ';'  expected	2	None	replace
18	[BUG]  [BUGGY]  currentOption  =  cmd.cloneTree();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  cmd.cloneTree();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  cmd.cloneTree();	  currentOption    =    cmd;    	non-compiled	[CE]  ';'  expected	2	None	replace
19	[BUG]  [BUGGY]  currentOption  =  cmd.toString();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  cmd.toString();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  cmd.toString();	  currentOption    =    cmd;    	non-compiled	[CE]  ';'  expected	2	None	replace
20	[BUG]  [BUGGY]  currentOption  =  this.currentToken;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  this.currentToken;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  this.currentToken;	  currentOption    =    cmd;    	non-compiled	[CE]  ';'  expected	2	None	replace
21	[BUG]  [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(argument);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(argument);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  arguments.getRequiredOption(argument);	      Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  ';'  expected	11	None	replace
22	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  stopAtNonOption);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  stopAtNonOption);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  stopAtNonOption);	      Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  ';'  expected	11	None	replace
23	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  skipParsing);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  skipParsing);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  skipParsing);	      Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  ';'  expected	11	None	replace
24	[BUG]  [BUGGY]  currentOption  =  options.options;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  options.options;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  options.options;	  currentOption    =    options;    	non-compiled	[CE]  ';'  expected	1	None	replace
25	[BUG]  [BUGGY]  currentOption  =  options.cloneOption();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  options.cloneOption();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  options.cloneOption();	  currentOption    =    options;    	non-compiled	[CE]  ';'  expected	1	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.skipParsing);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.skipParsing);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(this.skipParsing);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	6	None	replace
27	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(currentToken);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(currentToken);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(currentToken);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	6	None	replace
28	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentToken  =  options.getToken(),  stopAtNonOption;	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	13	None	replace
29	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getToken();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentToken  =  this.options.getToken();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentToken  =  this.options.getToken();	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	13	None	replace
30	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentToken  =  options.getToken(),  stopAtNonOption);	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	13	None	replace
31	[BUG]  [BUGGY]  Options  currentOption  =  options.getRequiredOption();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Options  currentOption  =  options.getRequiredOption();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Options  currentOption  =  options.getRequiredOption();	      Options    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  Options  currentOption  =  options.getRequiredOption(options);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Options  currentOption  =  options.getRequiredOption(options);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Options  currentOption  =  options.getRequiredOption(options);	      Options    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	8	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(options);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(options);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(options);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	6	None	replace
34	[BUG]  [BUGGY]  Option  currentOption  =  option.getRequiredOptions();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  option.getRequiredOptions();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  option.getRequiredOptions();	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
35	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.options);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.options);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(this.options);	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	6	None	replace
36	[BUG]  [BUGGY]  Option  currentToken  =  option.getToken();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentToken  =  option.getToken();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentToken  =  option.getToken();	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	13	None	replace
37	[BUG]  [BUGGY]  Option  currentToken  =  options.selectToken(argument);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentToken  =  options.selectToken(argument);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentToken  =  options.selectToken(argument);	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	13	None	replace
38	[BUG]  [BUGGY]  currentOption  =  this.cmd;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  this.cmd;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  this.cmd;	  currentOption    =    cmd;    	non-compiled	[CE]  ';'  expected	2	None	replace
39	[BUG]  [BUGGY]  options  currentOption  =  options.getRequiredOption();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  options  currentOption  =  options.getRequiredOption();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	options  currentOption  =  options.getRequiredOption();	      Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  group  =  options.getOptionGroups();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
41	[BUG]  [BUGGY]  Option  group  =  options.getGroups();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  group  =  options.getGroups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  group  =  options.getGroups();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =  option.getGroups();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  group  =  option.getGroups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  group  =  option.getGroups();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
43	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[1]);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[1]);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[1]);	      Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
44	[BUG]  [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(arguments[0]);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(arguments[0]);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  arguments.getRequiredOption(arguments[0]);	      Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
45	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions());  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions());  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  new  Option(options.getRequiredOptions());	  currentOption    =    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
46	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getRequiredOptions());  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getRequiredOptions());  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  new  Option(options.getRequiredOptions(),  options.getRequiredOptions());	  currentOption    =    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
47	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOptionGroups();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOptionGroups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOptionGroups();	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
48	[BUG]  [BUGGY]  Option  currentOption  =  options,  options.getRequiredOptions();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options,  options.getRequiredOptions();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options,  options.getRequiredOptions();	      Option    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	6	None	replace
49	[BUG]  [BUGGY]  Option  currentOption  =  options.hasRequiredOption()?  options.getRequiredOption()  :  null;  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.hasRequiredOption()?  options.getRequiredOption()  :  null;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.hasRequiredOption()?  options.getRequiredOption()  :  null;	      Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.hasRequiredOption()?  options.getRequiredOption()  :  option;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.hasRequiredOption()?  options.getRequiredOption()  :  option;  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.hasRequiredOption()?  options.getRequiredOption()  :  option;	      Option    currentOption    =    options.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
51	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOptions();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  currentOption  =  options.getRequiredOptions();	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
52	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);	      Option    currentOption    =    options.getRequiredOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.groups();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  OptionGroup  group  =  options.groups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	OptionGroup  group  =  options.groups();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
54	[BUG]  [BUGGY]  currentOption  =  options.getOptionGroups();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  options.getOptionGroups();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  options.getOptionGroups();	  currentOption    =    options;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
55	[BUG]  [BUGGY]  Options  currentOption  =  options.getRequiredOptionGroups();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Options  currentOption  =  options.getRequiredOptionGroups();  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Options  currentOption  =  options.getRequiredOptionGroups();	      Options    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
56	[BUG]  [BUGGY]  currentOption  =  options.getOptionGroup();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  options.getOptionGroup();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  options.getOptionGroup();	  currentOption    =    option;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
57	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  options);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  options);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  options);	      Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
58	[BUG]  [BUGGY]  currentOption  =  new  OptionGroup(options.getRequiredOptions());  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  currentOption  =  new  OptionGroup(options.getRequiredOptions());  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	currentOption  =  new  OptionGroup(options.getRequiredOptions());	  currentOption    =    this;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
59	[BUG]  [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(option);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  arguments.getRequiredOption(option);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  arguments.getRequiredOption(option);	      Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
60	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  option);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;    [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  option);  [BUGGY]    currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  option);	      Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
