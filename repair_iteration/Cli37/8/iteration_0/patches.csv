bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for  (i  =  t.length();  i  >  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]  for  (i  =  t.length();  i  >  1;  i--)  {  [BUGGY]  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for  (i  =  t.length();  i  >  1;  i--)  {	for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  for  (i  =  t.length();  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]  for  (i  =  t.length();  i  >  1)  {  [BUGGY]  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for  (i  =  t.length();  i  >  1)  {	for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    [BUGGY]  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	  	for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]    String  value  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    String  value  =  Util.stripLeadingHyphens(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    String  value  =  Util.stripLeadingHyphens(token);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    Option  cmd  =  options.getOption(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    Option  cmd  =  options.getOption(token);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
6	[BUG]  [BUGGY]    String  value  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    String  value  =  t.substring(0,  i);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    String  value  =  t.substring(0,  i);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
7	[BUG]  [BUGGY]    String  value  =(String)options.get(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    String  value  =(String)options.get(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    String  value  =(String)options.get(token);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
8	[BUG]  [BUGGY]    String  value  =  Util.stripLeadingHyphens(opt);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    String  value  =  Util.stripLeadingHyphens(opt);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    String  value  =  Util.stripLeadingHyphens(opt);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
9	[BUG]  [BUGGY]    Option  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    Option  option  =  options.getOption(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    Option  option  =  options.getOption(token);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
10	[BUG]  [BUGGY]    Option  options  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    Option  options  =  options.getOption(token);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    Option  options  =  options.getOption(token);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
11	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  expression	16	None	add
12	[BUG]  [BUGGY]    if(opt!=  null)  {  opt  =  getLongPrefix(token);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    if(opt!=  null)  {  opt  =  getLongPrefix(token);  }  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    if(opt!=  null)  {  opt  =  getLongPrefix(token);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
13	[BUG]  [BUGGY]    if(opt!=  null)  {  opt  =  token.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    if(opt!=  null)  {  opt  =  token.substring(0,  i);  }  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    if(opt!=  null)  {  opt  =  token.substring(0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
14	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option;  break;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option;  break;  }  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    if(options.hasOption(opt))  {  opt  =  option;  break;  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
15	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    if(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    if(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
16	[BUG]  [BUGGY]    if(options.hasOption(opt))  {  opt  =  options.getLongPrefix(token);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  [BUGGY]    if(options.hasOption(opt))  {  opt  =  options.getLongPrefix(token);  }  [BUGGY]  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	    if(options.hasOption(opt))  {  opt  =  options.getLongPrefix(token);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
