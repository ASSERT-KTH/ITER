bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  currentOption.getOption(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  currentOption.getOption(token);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
2	[BUG]  [BUGGY]  for(i  =  token.length()  -  1;  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -  1;  i  >  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -  1;  i  >  1)  {	  for(i    =    token.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
3	[BUG]  [BUGGY]  for(i  =  token.length()  -  1);  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -  1);  i  >  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -  1);  i  >  1)  {	  for(i    =    token.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
4	[BUG]  [BUGGY]  for(i  =  token.length()  +  1);  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  +  1);  i  >  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  +  1);  i  >  1)  {	  for(i    =    token.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.getOption(t);	  if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
6	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentToken  =  options.getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentToken  =  options.getOption(t);	  if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  options.get(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.get(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.get(t);	  if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
8	[BUG]  [BUGGY]  for(i  =  t.length();  i  ==  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length();  i  ==  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length();  i  ==  1;  i--)  {	  for(i    =    t.length()    -    1;    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  opt  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  t.substring(0,  i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  t.substring(0,  i);	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  opt  =  token.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  token.substring(0,  i  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  token.substring(0,  i  +  1);	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
11	[BUG]  [BUGGY]  option  =  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  option  =  t.substring(0,  i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	option  =  t.substring(0,  i);	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
12	[BUG]  [BUGGY]  opt  =  t.substring(i,  token);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  t.substring(i,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  t.substring(i,  token);	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  String  value  =(String)options.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(i  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(i  +  1);	  String    value    =(String)options.get(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  String  value  =(String)this.options.get(i);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)this.options.get(i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)this.options.get(i);	  String    value    =(String)options.get(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  cmd  =  options.getOption(t,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  cmd  =  options.getOption(t,  token);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  currentOption.getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  currentOption.getOption(t);	  Option    options    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  currentOption.getOption(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  currentOption.getOption(opt);	  Option    options    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
18	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  currentOption.getOption(token,  value);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  currentOption.getOption(token,  value);	  Option    options    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
19	[BUG]  [BUGGY]  String  value  =  Util.stripValue(currentToken);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripValue(currentToken);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripValue(currentToken);	  String    value    =    Util.stripLeadingHyphens(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
20	[BUG]  [BUGGY]  Option  currentOption  =  getOption(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  getOption(t);	  Option    currentOption    =    getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
21	[BUG]  [BUGGY]  Option  currentOption  =  getOption(opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  getOption(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  getOption(opt);	  Option    currentOption    =    getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
22	[BUG]  [BUGGY]  Option  currentOption  =  getOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  getOption(option);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  getOption(option);	  Option    currentOption    =    getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
23	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyps(token);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyps(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyps(token);	  char    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
24	[BUG]  [BUGGY]  Character  value  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Character  value  =  Util.stripLeadingHyphens(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Character  value  =  Util.stripLeadingHyphens(token);	  char    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
25	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(t))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(t))  {  opt  =  option.substring(0,  i  +  1);  }	  if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
26	[BUG]  [BUGGY]  String  value  =  Util.stripValue(opt);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripValue(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripValue(opt);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  String  value  =  Util.stripStringValue(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripStringValue(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripStringValue(token);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentToken  =  options.getOption(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentToken  =  options.getOption(opt);	  Option    currentToken    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentToken  =  options.getOption(token  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentToken  =  options.getOption(token  +  1);	  Option    currentToken    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  String  value  =  t.substring(0,  i  +  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(0,  i  +  3);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(0,  i  +  3);	  String    value    =    t.substring(0,    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(i  +  1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(i  +  1,  i);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(i  +  1,  i);  }	  if(options.hasOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(t)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(t)+  1;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(t)+  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(token)/  1;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(token)/  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(token)+  2;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(token)+  2;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.hasOption(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.hasOption(token);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.hasOption(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.hasOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.hasOption(t);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.hasOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.hasOption(option);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.hasOption(option);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  String  value  =  Util.stripRaw(token,  opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripRaw(token,  opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripRaw(token,  opt);	  String    value    =    Util.stripLeadingHyphens(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(token,  opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(token,  opt);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(t,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(t,  token);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
41	[BUG]  [BUGGY]  options.getOption(token,  opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  options.getOption(token,  opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	options.getOption(token,  opt);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
42	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(opt  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(opt  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(opt  +  1);	  String    value    =    Util.stripLeadingHyphens(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
43	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token  +  2);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(token  +  2);	  String    value    =    Util.stripLeadingHyphens(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
44	[BUG]  [BUGGY]  for(i  =  token.length()  -  1;  i  >  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -  1;  i  >  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -  1;  i  >  1;  i--)  {	  for(i    =    token.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
45	[BUG]  [BUGGY]  for(i  =  token.length();  i  >=  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length();  i  >=  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length();  i  >=  1;  i--)  {	  for(i    =    token.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.hasLongOption(opt);  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.hasLongOption(opt);	  if(options.hasLongOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
47	[BUG]  [BUGGY]  opt  =  option.substring(i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  option.substring(i  +  1);  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  option.substring(i  +  1);	  if(options.hasLongOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
48	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.hasOption(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.hasOption(token);	  Option    currentOption    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
49	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.hasOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.hasOption(t);	  Option    currentOption    =    options.hasOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.getOption(token  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.getOption(token  +  1);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  cmd  =  options.getOption(t  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  cmd  =  options.getOption(t  +  1);	  Option    cmd    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  cmd  =  options.getOption(opt  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  cmd  =  options.getOption(opt  +  1);	  Option    cmd    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  t.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.hasOption(opt)?  t.substring(0,  i):  token;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.hasOption(opt)?  t.substring(0,  i):  token;	  if(options.hasOption(opt))    {    opt    =    t.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
54	[BUG]  [BUGGY]  for(i  =  token.length();  i  <  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length();  i  <  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length();  i  <  1;  i--)  {	  for(i    =    t.length();    i    <    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  <  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1;  i  <  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1;  i  <  1;  i--)  {	  for(i    =    t.length();    i    <    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1;  i  >  0;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1;  i  >  0;  i--)  {	  for(i    =    t.length();    i    <    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  if(opt!=  null)  {  opt  =  t.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(opt!=  null)  {  opt  =  t.substring(0,  i  +  1);  }  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(opt!=  null)  {  opt  =  t.substring(0,  i  +  1);  }	  if(opt!=    null)    {    opt    =    t.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
58	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(option,  token);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(option,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(option,  token);	  String    value    =    Util.stripLeadingHyphens(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  opt  =  getOptionPrefix(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  getOptionPrefix(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  getOptionPrefix(token);	  opt    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
60	[BUG]  [BUGGY]  opt  =  getLongPrefix(t);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  getLongPrefix(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  getLongPrefix(t);	  opt    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
61	[BUG]  [BUGGY]  opt  =  getOption(token);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  getOption(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  getOption(token);	  opt    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
62	[BUG]  [BUGGY]  for(i  =  t.length();  i  >=  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length();  i  >=  0;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length();  i  >=  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
63	[BUG]  [BUGGY]  for(i  =  token.length();  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length();  i  >  0;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length();  i  >  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
64	[BUG]  [BUGGY]  for(i  =  t.length()  +  1;  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  +  1;  i  >  0;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  +  1;  i  >  0;  i--)  {	  for(i    =    t.length();    i    >    0;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
65	[BUG]  [BUGGY]  String  value  =  token.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  token.substring(0,  i  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  token.substring(0,  i  +  1);	  if(opt!=    null)    {    opt    =    token.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.get(token);  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.get(token);	  if(options.hasLongOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
67	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1;  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1;  i  >  0)  {	  for(i    =    t.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
68	[BUG]  [BUGGY]  for(i  =  t.length()  +  1;  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  +  1;  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  +  1;  i  >  0)  {	  for(i    =    t.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
69	[BUG]  [BUGGY]  for(i  =  t.length();  i  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length();  i  >=  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length();  i  >=  0)  {	  for(i    =    t.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
70	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt,  expectedOpts);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(token,  opt,  expectedOpts);	  String    value    =    Util.stripLeadingHyphens(token,    opt);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(token,  opt  +  1);	  String    value    =    Util.stripLeadingHyphens(token,    opt);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  opt,  i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(token,  opt,  i);	  String    value    =    Util.stripLeadingHyphens(token,    opt);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  String  value  =  t.substring(0,  i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(0,  i  +  1,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(0,  i  +  1,  token);	  String    value    =    t.substring(0,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  String  value  =  t.substring(i,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(i,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(i,  token);	  String    value    =    t.substring(i,    i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
75	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(i  +  1,  i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(i  +  1,  i);	  String    value    =    t.substring(i,    i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
76	[BUG]  [BUGGY]  String  value  =  t.substring(i,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(i,  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(i,  1);	  String    value    =    t.substring(i,    i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
77	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  options.getOption(t,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  options.getOption(t,  token);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  String  value  =(String)options.getValue(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.getValue(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.getValue(t);	  String    value    =(String)options.getValue(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  String  value  =(String)options.getValue(token  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.getValue(token  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.getValue(token  +  1);	  String    value    =(String)options.getValue(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  String  value  =(String)options.getValue(token).t;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.getValue(token).t;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.getValue(token).t;	  String    value    =(String)options.getValue(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  if(opt  ==  null)  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(opt  ==  null)  {  opt  =  t.substring(0,  i);  }  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(opt  ==  null)  {  opt  =  t.substring(0,  i);  }	  if(opt    ==    null)    {    opt    =    token.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
82	[BUG]  [BUGGY]  if(opt  ==  null)  {  opt  =  token.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(opt  ==  null)  {  opt  =  token.substring(0,  i  +  1);  }  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(opt  ==  null)  {  opt  =  token.substring(0,  i  +  1);  }	  if(opt    ==    null)    {    opt    =    token.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
83	[BUG]  [BUGGY]  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  option  =  options.getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	option  =  options.getOption(t);	  option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
84	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.getOption(opt,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.getOption(opt,  token);	  Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  for(i  =  token.length()  -  1;  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -  1;  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -  1;  i  >  0)  {	  for(i    =    token.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
86	[BUG]  [BUGGY]  for(i  =  token.length()  +  1;  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  +  1;  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  +  1;  i  >  0)  {	  for(i    =    token.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
87	[BUG]  [BUGGY]  for(i  =  token.length()  -  2;  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -  2;  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -  2;  i  >  0)  {	  for(i    =    token.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
88	[BUG]  [BUGGY]  String  value  =(String)options.get(t  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(t  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(t  +  1);	  String    value    =(String)options.get(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
89	[BUG]  [BUGGY]  String  value  =(String)options.get(opt  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(opt  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(opt  +  1);	  String    value    =(String)options.get(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
90	[BUG]  [BUGGY]  for(i  =  token.length();  i  <  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length();  i  <  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length();  i  <  1)  {	  for(i    =    t.length();    i    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
91	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  <  1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1;  i  <  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1;  i  <  1)  {	  for(i    =    t.length();    i    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
92	[BUG]  [BUGGY]  for(i  =  t.length()  +  1);  i  <  1)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  +  1);  i  <  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  +  1);  i  <  1)  {	  for(i    =    t.length();    i    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
93	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1;  i  >=  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1;  i  >=  1)  {	  for(i    =    t.length();    i    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
94	[BUG]  [BUGGY]  for(i  =  token.length();  i  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length();  i  >=  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length();  i  >=  1)  {	  for(i    =    t.length();    i    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
95	[BUG]  [BUGGY]  for(i  =  t.length()  +  1);  i  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  +  1);  i  >=  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  +  1);  i  >=  1)  {	  for(i    =    t.length();    i    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
96	[BUG]  [BUGGY]  for(i  =  t.length()  +  1;  i  >=  1)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  +  1;  i  >=  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  +  1;  i  >=  1)  {	  for(i    =    t.length();    i    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
97	[BUG]  [BUGGY]  String  value  =(String)this.options.get(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)this.options.get(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)this.options.get(t);	  String    value    =(String)this.options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
98	[BUG]  [BUGGY]  String  value  =(String)this.options.getValue(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)this.options.getValue(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)this.options.getValue(token);	  String    value    =(String)this.options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
99	[BUG]  [BUGGY]  String  value  =(String)options.get(t,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(t,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(t,  token);	  String    value    =(String)options.get(t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
100	[BUG]  [BUGGY]  for(i  =  t.length());  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length());  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length());  i  >  0)  {	  for(i    =    t.length()    -    1);    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
101	[BUG]  [BUGGY]  for(i  =  t.length());  i  >  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length());  i  >  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length());  i  >  1)  {	  for(i    =    t.length()    -    1);    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
102	[BUG]  [BUGGY]  for(i  =  t.length());  i  <  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length());  i  <  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length());  i  <  1)  {	  for(i    =    t.length()    -    1);    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
103	[BUG]  [BUGGY]  Option  currentOption  =  options.get(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.get(i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.get(i);	  Option    currentOption    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  Option  option  =  getOption(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  getOption(t);	  Option    option    =    getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
105	[BUG]  [BUGGY]  Option  option  =  getOption(opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  getOption(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  getOption(opt);	  Option    option    =    getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
106	[BUG]  [BUGGY]  Option  option  =  getOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  getOption(option);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  getOption(option);	  Option    option    =    getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOption(t  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(t  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(t  +  1);	  Option    option    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
108	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(opt  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(opt  +  1);	  Option    option    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
109	[BUG]  [BUGGY]  for(i  =  t.length()  -  1;  i  >=  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1;  i  >=  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1;  i  >=  1;  i--)  {	  for(i    =    t.length();    i    >=    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
110	[BUG]  [BUGGY]  for(i  =  t.length()  +  1;  i  >=  1;  i--)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  +  1;  i  >=  1;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  +  1;  i  >=  1;  i--)  {	  for(i    =    t.length();    i    >=    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
111	[BUG]  [BUGGY]  Option  cmd  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  cmd  =  options.get(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  cmd  =  options.get(token);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
112	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  cmd  =  options.getOption(currentToken);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
113	[BUG]  [BUGGY]  for(i  =  token.length()  -1;  i  >  0;  i--)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -1;  i  >  0;  i--)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -1;  i  >  0;  i--)  {	  for(i    =    token.length();    i    >    1;    i--)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(currentToken,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(currentToken,  token);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
115	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentToken  =  options.getOption(token)+  1;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentToken  =  options.getOption(token)+  1;	  Option    currentToken    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
116	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(opt,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(opt,  token,  expectedOpts);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(opt,  token,  expectedOpts);	  String    value    =    Util.stripLeadingHyphens(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
117	[BUG]  [BUGGY]  Option  currentOption  =  options.get(opt  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.get(opt  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.get(opt  +  1);	  Option    currentOption    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
118	[BUG]  [BUGGY]  Option  currentOption  =  options.get(opt  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.get(opt  -  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.get(opt  -  1);	  Option    currentOption    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
119	[BUG]  [BUGGY]  String  value  =(String)this.options.get(opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)this.options.get(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)this.options.get(opt);	  String    value    =(String)this.options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
120	[BUG]  [BUGGY]  String  value  =(String)this.options.get(token  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)this.options.get(token  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)this.options.get(token  +  1);	  String    value    =(String)this.options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
121	[BUG]  [BUGGY]  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  option  =  options.getOption(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	option  =  options.getOption(opt);	  option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
122	[BUG]  [BUGGY]  String  value  =  Util.stripString(token);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripString(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripString(token);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
123	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripValue(token,  i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripValue(token,  i);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  String  value  =(String)options.getValue(opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.getValue(opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.getValue(opt);	  String    value    =(String)options.getValue(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
125	[BUG]  [BUGGY]  for(i  =  t.length()  -  1);  i  <  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length()  -  1);  i  <  1)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length()  -  1);  i  <  1)  {	  for(i    =    t.length();    i    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
126	[BUG]  [BUGGY]  for(i  =  t.length();  i  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length();  i  <  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length();  i  <  0)  {	  for(i    =    t.length();    i    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
127	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(0,  i  +  1);  }  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(opt))  {  opt  =  t.substring(0,  i  +  1);  }	  if(options.hasOption(opt))    {    opt    =    t.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
128	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  i);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(token,  i);	  String    value    =    Util.stripLeadingHyphens(token,    opt);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
129	[BUG]  [BUGGY]  for(i  =  t.length();  i  >  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length();  i  >  2)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length();  i  >  2)  {	  for(i    =    t.length()    -    1;    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
130	[BUG]  [BUGGY]  for(i  =  t.length());  i  >  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  t.length());  i  >  2)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  t.length());  i  >  2)  {	  for(i    =    t.length()    -    1);    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
131	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(i  +  1,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(i  +  1,  token);	  String    value    =    t.substring(i,    i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
132	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(option);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  currentOption.getOption(option);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  currentOption.getOption(option);	  Option    options    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  String  value  =(String)options.get(t  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(t  -  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(t  -  1);	  String    value    =(String)options.get(t);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  cmd  =  options.getOption(opt,  token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  cmd  =  options.getOption(opt,  token);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
135	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  option  =  options.getOption(opt)+  1;  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  option  =  options.getOption(opt)+  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
136	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.getOption(option);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.getOption(option);	  Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
137	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token  +  1).trim();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripLeadingHyphens(token  +  1).trim();  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripLeadingHyphens(token  +  1).trim();	  String    value    =    Util.stripLeadingHyphens(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
138	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripValue(token  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripValue(token  +  1);	  String    value    =    Util.stripValue(token);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
139	[BUG]  [BUGGY]  Option  options  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  options.getOption(currentToken);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  options.getOption(currentToken);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
140	[BUG]  [BUGGY]  if(options.hasLongOption(t))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasLongOption(t))  {  opt  =  option.substring(0,  i);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasLongOption(t))  {  opt  =  option.substring(0,  i);  }	  if(options.hasLongOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
141	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  t.substring(0,  i);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasLongOption(opt))  {  opt  =  t.substring(0,  i);  }	  if(options.hasLongOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  Option  options  =  options.getOption(t  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  options  =  options.getOption(t  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  options  =  options.getOption(t  +  1);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
143	[BUG]  [BUGGY]  String  value  =(String)options.get(token  +  1).trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(token  +  1).trim();  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(token  +  1).trim();	  String    value    =(String)options.get(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
144	[BUG]  [BUGGY]  String  value  =(String)options.getValue(token).trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.getValue(token).trim();  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.getValue(token).trim();	  String    value    =(String)options.getValue(token);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
145	[BUG]  [BUGGY]  opt  =  getOption(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  getOption(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  getOption(t);	  opt    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
146	[BUG]  [BUGGY]  opt  =  getOptionPrefix(t);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  getOptionPrefix(t);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  getOptionPrefix(t);	  opt    =    getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
147	[BUG]  [BUGGY]  Option  currentOption  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  Option  currentOption  =  options.get(option);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	Option  currentOption  =  options.get(option);	  Option    currentOption    =    options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
148	[BUG]  [BUGGY]  String  value  =  Util.stripDeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  Util.stripDeadingHyphens(token);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  Util.stripDeadingHyphens(token);	  String    value    =    Util.stripLeadingHyphens(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
149	[BUG]  [BUGGY]  for(i  =  token.length();  i  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length();  i  >=  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length();  i  >=  0)  {	  for(i    =    token.length();    i    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
150	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(t))  {  opt  =  t.substring(0,  i);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(t))  {  opt  =  t.substring(0,  i);  }	  if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
151	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  t.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  t.substring(i  +  1);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasLongOption(opt))  {  opt  =  t.substring(i  +  1);  }	  if(options.hasLongOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
152	[BUG]  [BUGGY]  if(options.hasLongOption(t))  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasLongOption(t))  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasLongOption(t))  {  opt  =  option.substring(i  +  1);  }	  if(options.hasLongOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
153	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(i  +  1);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(opt))  {  opt  =  t.substring(i  +  1);  }	  if(options.hasLongOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
154	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(t))  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(t))  {  opt  =  option.substring(i  +  1);  }	  if(options.hasOption(opt))    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
155	[BUG]  [BUGGY]  opt  =  t.substring(0,  i).trim();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  opt  =  t.substring(0,  i).trim();  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	opt  =  t.substring(0,  i).trim();	  opt    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
156	[BUG]  [BUGGY]  String  value  =  t.substring(i,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =  t.substring(i,  i  +  1);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =  t.substring(i,  i  +  1);	  String    value    =    t.substring(i,    i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
157	[BUG]  [BUGGY]  for(i  =  token.length()  -  1);  i  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  for(i  =  token.length()  -  1);  i  >  0)  {  [BUGGY]      {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	for(i  =  token.length()  -  1);  i  >  0)  {	  for(i    =    token.length();    i    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
158	[BUG]  [BUGGY]  char  value  =  Util.stripLeadingHyphens(token,  opt);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  char  value  =  Util.stripLeadingHyphens(token,  opt);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	char  value  =  Util.stripLeadingHyphens(token,  opt);	  String    value    =    Util.stripLeadingHyphens(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
159	[BUG]  [BUGGY]  String  value  =(String)options.get(currentToken);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)options.get(currentToken);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)options.get(currentToken);	  String    value    =(String)options.get(opt);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
160	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  token;  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  if(options.hasOption(t))  {  opt  =  token;  break;  }  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	if(options.hasOption(t))  {  opt  =  token;  break;  }	  if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
161	[BUG]  [BUGGY]  String  value  =(String)this.options.get(key);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;      [BUGGY]  String  value  =(String)this.options.get(key);  [BUGGY]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  return  opt;  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	String  value  =(String)this.options.get(key);	  String    value    =(String)options.get(key);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
