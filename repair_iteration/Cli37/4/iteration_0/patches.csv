bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    Option  cmd  =  options.getOption(t);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    Option  cmd  =  options.getOption(t);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
2	[BUG]  [BUGGY]    String  token  =  t.toLowerCase();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    String  token  =  t.toLowerCase();  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    String  token  =  t.toLowerCase();		non-compiled	[CE]  illegal  start  of  expression	8	None	add
3	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
4	[BUG]  [BUGGY]    Option  cmd  =  option.getOption(t);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    Option  cmd  =  option.getOption(t);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    Option  cmd  =  option.getOption(t);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
6	[BUG]  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    Option  option  =  options.getOption(t);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    Option  option  =  options.getOption(t);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
10	[BUG]  [BUGGY]    String  token  =  t.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    String  token  =  t.substring(0,  pos);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    String  token  =  t.substring(0,  pos);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
11	[BUG]  [BUGGY]    int  pos  =  options.getLongPrefix(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  options.getLongPrefix(token);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    int  pos  =  options.getLongPrefix(token);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
12	[BUG]  [BUGGY]    int  pos  =  options.getLongPrefix(t);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  options.getLongPrefix(t);  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    int  pos  =  options.getLongPrefix(t);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
13	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
14	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
15	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
16	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
17	[BUG]  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [BUGGY]  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	    if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
18	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  int  pos  =  token.indexOf( "= ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]  else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith( "-- "))  {  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
