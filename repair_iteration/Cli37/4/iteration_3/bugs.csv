bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  token  =  t.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toString()  +  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toString()  +  1;	  String    token    =    t.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
2	[BUG]  [BUGGY]  parent  ==  null  &&  parent.hasChildren())  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.hasChildren())  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.hasChildren())  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.hasChildren())    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
3	[BUG]  [BUGGY]  parent!=  null  &&  parent.hasChildren())  {  return  true;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.hasChildren())  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.hasChildren())  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.hasChildren())    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
4	[BUG]  [BUGGY]  int  pos  =  options.getLongPrefix(t)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getLongPrefix(t)/  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getLongPrefix(t)/  1;	  int    pos    =    options.getLongPrefix(t)+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
5	[BUG]  [BUGGY]  int  pos  =  options.getLongPrefix(t)+  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getLongPrefix(t)+  2;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getLongPrefix(t)+  2;	  int    pos    =    options.getLongPrefix(t)+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
6	[BUG]  [BUGGY]  int  pos  =  options.getMatchingOptions(t)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getMatchingOptions(t)+  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getMatchingOptions(t)+  1;	  int    pos    =    options.getLongPrefix(t)+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
7	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Context.reportCodeChange();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Context.reportCodeChange();	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
8	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "= ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Integer  pos  =  token.indexOf( "= ");  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Integer  pos  =  token.indexOf( "= ");	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  pos  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  pos  +  1);	  Option    option    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  pos,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  pos,  token);	  Option    option    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  value  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  value  -  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  value  -  1);	  Option    cmd    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  currentToken);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  currentToken);	  Option    cmd    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
13	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.NAME;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.NAME;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.NAME;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.NAME);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.NAME);	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  int  pos  =  options.getPosition(t  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPosition(t  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(t  +  1);	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
16	[BUG]  [BUGGY]  int  pos  =  options.getPosition(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPosition(token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(token);	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  int  pos  =  options.getPosition(t).indexOf( "= ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPosition(t).indexOf( "= ");  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(t).indexOf( "= ");	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
18	[BUG]  [BUGGY]  Context.checkState(pos  ==  -1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Context.checkState(pos  ==  -1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Context.checkState(pos  ==  -1);	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&!parent.equals(t))  {  return  false;  }	  parent    ==    null    ||!parent.equals(t))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
20	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.getValue()))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.getValue()))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.getValue()))  {  return  false;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getValue()))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
21	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.getValue()))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.getValue()))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.getValue()))  {  return  false;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getValue()))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
22	[BUG]  [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
23	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
24	[BUG]  [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
25	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token  ==  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
26	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t);	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
27	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isLong();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.isLong();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.isLong();	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
28	[BUG]  [BUGGY]  parent  ==  null  &&  parent.length()!=  0;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.length()!=  0;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.length()!=  0;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
29	[BUG]  [BUGGY]  int  pos  =  options.getMatchingOption(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getMatchingOption(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getMatchingOption(t);	  int    pos    =    options.getMatchingOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  int  pos  =  options.getMatchingOptions(t,  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getMatchingOptions(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getMatchingOptions(t,  token);	  int    pos    =    options.getMatchingOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  String  token  =  t.substring(0,  pos  +  1,  t.length());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.substring(0,  pos  +  1,  t.length());  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(0,  pos  +  1,  t.length());	  String    token    =    t.substring(0,    pos    +    2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  parent  ==  null  &&!parent.startsWith(t))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&!parent.startsWith(t))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&!parent.startsWith(t))  {  return  true;	  parent    ==    null    ||!parent.startsWith(t))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
33	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.parent))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.parent))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.parent))  {  return  false;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
34	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.parent))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.parent))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.parent))  {  return  false;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  currentToken);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  currentToken);	  Option    option    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  value  -  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  value  -  1);	  Option    option    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  String  token  =  option.toLowerCase(pos);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  option.toLowerCase(pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  option.toLowerCase(pos);	  String    token    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
38	[BUG]  [BUGGY]  String  token  =  options.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  options.toLowerCase();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  options.toLowerCase();	  String    token    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
39	[BUG]  [BUGGY]  String  token  =  t.substring(pos,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.substring(pos,  pos  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(pos,  pos  +  1);	  String    token    =    t.substring(pos,    pos);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
40	[BUG]  [BUGGY]  String  token  =  t.substring(pos  +  1,  pos);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.substring(pos  +  1,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(pos  +  1,  pos);	  String    token    =    t.substring(pos,    pos);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
41	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.getName()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.getName()));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.getName()));	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t).getMask();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t).getMask();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t).getMask();	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
43	[BUG]  [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&!parent.equals(t))  {  return  true;	  parent    ==    null    ||!parent.equals(t))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
44	[BUG]  [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&    getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
45	[BUG]  [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
46	[BUG]  [BUGGY]  Context.codeBug();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Context.codeBug();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Context.codeBug();	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  option.getOption(t,  pos  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  option.getOption(t,  pos  +  1);	  Option    cmd    =    option.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(t,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  currentOption.getOption(t,  pos);	  Option    cmd    =    option.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
49	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME;	  parent!=    null    &&    parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  parent!=  null  ||  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  ||  parent.getType()  ==  Token.NAME);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  ||  parent.getType()  ==  Token.NAME);	  parent!=    null    &&    parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  int  pos  =  options.getIntPrefix(t)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getIntPrefix(t)+  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getIntPrefix(t)+  1;	  int    pos    =    options.getIntPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  String  token  =  t.toUpperCase(pos);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toUpperCase(pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toUpperCase(pos);	  String    token    =    t.toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
53	[BUG]  [BUGGY]  String  token  =  t.toUpperCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toUpperCase()  +  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toUpperCase()  +  1;	  String    token    =    t.toUpperCase();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
55	[BUG]  [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&!parent.equals(t))  {  return  true;  }	  parent    ==    null    ||!parent.equals(t))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  pos  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  pos  +  1);	  Option    cmd    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
57	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getPrefix(t)!=  null  &&!token.equals( "- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
58	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.parent))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.parent))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.parent))  {  return  true;  }	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
59	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.parent))  {  return  true;  }	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
60	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.getValue()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.getValue()))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.getValue()))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getValue()))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
61	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.getValue()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.getValue()))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.getValue()))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getValue()))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
62	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".   "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".   "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   ".   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  ||!token.startsWith( ". "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  ||!token.startsWith( ". "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  ||!token.startsWith( ". "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   ".   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
64	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.VAR;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.VAR;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.VAR);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.VAR);	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  token);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  token);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    options.getOption(t,    value);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
67	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  currentToken);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  currentToken);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  currentToken);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    options.getOption(t,    value);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(t,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  currentOption.getOption(t,  value);	  Option    cmd    =    option.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  String  token  =  t.substring(0,  pos  +  1,  token.length());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.substring(0,  pos  +  1,  token.length());  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(0,  pos  +  1,  token.length());	  String    token    =    t.substring(0,    pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
71	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
72	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
73	[BUG]  [BUGGY]  parent  ==  null  &&!parent.startsWith(t))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&!parent.startsWith(t))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&!parent.startsWith(t))  {  return  true;  }	  parent    ==    null    ||!parent.startsWith(t))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
74	[BUG]  [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&!parent.equals(t))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&!parent.equals(t))  {  return  false;	  parent    ==    null    ||!parent.equals(t))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
75	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
76	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token,  pos);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  token,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  token,  pos);	  Option    cmd    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
77	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  token,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  token,  value);	  Option    cmd    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
78	[BUG]  [BUGGY]  Option  cmd  =  t.getOption(currentOption);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  t.getOption(currentOption);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  t.getOption(currentOption);	  Option    cmd    =    currentOption.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.equals( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
80	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  token);  if(cmd!=  null)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  token);  if(cmd!=  null)  {  return  false;  }	  Option    cmd    =    options.getOption(t,    value);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  currentToken);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  currentToken);  if(cmd!=  null)  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  currentToken);  if(cmd!=  null)  {  return  false;  }	  Option    cmd    =    options.getOption(t,    value);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
83	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(t.getString()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(t.getString()));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent!=  null  &&  parent.equals(t.getString()));	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getString()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
84	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getString());  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getString());	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getString()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
86	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(t.parent));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(t.parent));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent!=  null  &&  parent.equals(t.parent));	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
87	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.parent));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.parent));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.parent));	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
88	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(pos  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toLowerCase(pos  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(pos  +  1);	  String    token    =    t.toLowerCase(pos);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
89	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(pos,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toLowerCase(pos,  value);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(pos,  value);	  String    token    =    t.toLowerCase(pos);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
90	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!Token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
91	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
92	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  currentOption.getOption(t,  token);	  Option    cmd    =    option.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.getName()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.getName()))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.getName()))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getName()))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
94	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.getName()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.getName()))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.getName()))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getName()))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
95	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.GETPROP;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.GETPROP;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue()!=  null  &&  parent.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue()!=  null  &&  parent.getType()  ==  Token.GETPROP;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue()!=  null  &&  parent.getType()  ==  Token.GETPROP;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  token,  expectedOpts);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  token,  expectedOpts);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token,  pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  token,  pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  token,  pos);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
99	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos  +  1));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(Long.valueOf(pos  +  1));	  String    token    =    t.toLowerCase(Long.valueOf(pos));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
100	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos)+  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos)+  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(Long.valueOf(pos)+  1);	  String    token    =    t.toLowerCase(Long.valueOf(pos));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
101	[BUG]  [BUGGY]  String  token  =(t  ==  null)?  null  :  t.toLowerCase(Long.valueOf(pos));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =(t  ==  null)?  null  :  t.toLowerCase(Long.valueOf(pos));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =(t  ==  null)?  null  :  t.toLowerCase(Long.valueOf(pos));	  String    token    =    t.toLowerCase(Long.valueOf(pos));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
102	[BUG]  [BUGGY]  Integer  pos  =  token.indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Integer  pos  =  token.indexOf( "- ");  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Integer  pos  =  token.indexOf( "- ");	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getLongPrefix(pos));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getLongPrefix(pos));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getLongPrefix(pos));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
104	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getMatchingOptions(t));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getMatchingOptions(t));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getMatchingOptions(t));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
105	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getUpperCase(pos));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getUpperCase(pos));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getUpperCase(pos));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
106	[BUG]  [BUGGY]  else  if(t!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
107	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
108	[BUG]  [BUGGY]  int  pos  =  options.getPrefix(t)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPrefix(t)+  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPrefix(t)+  1;	  int    pos    =    options.getPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  int  pos  =  options.getPrefix(t,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPrefix(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPrefix(t,  token);	  int    pos    =    options.getPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.parent))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.parent))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.parent))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
111	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.equals(t.parent))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
112	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getLongValue(token));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getLongValue(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getLongValue(token));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
113	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getValue(pos));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getValue(pos));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getValue(pos));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
114	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getNewPrefix(token));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getNewPrefix(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getNewPrefix(token));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
115	[BUG]  [BUGGY]  String  token  =  option.toLowerCase(Long.valueOf(pos));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  option.toLowerCase(Long.valueOf(pos));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  option.toLowerCase(Long.valueOf(pos));	  String    token    =    t.toLowerCase(Long.valueOf(pos));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
116	[BUG]  [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.equals( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getPrefix(t)  ==  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
117	[BUG]  [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.equals( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
118	[BUG]  [BUGGY]  String  token  =  option.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  option.toUpperCase();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  option.toUpperCase();	  String    token    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
119	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
120	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  token  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  token  +  1);	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
122	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.getKey()))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.getKey()))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.getKey()))  {  return  false;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getValue()))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
123	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(t.getKey()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.equals(t.getKey()))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.equals(t.getKey()))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getValue()))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
124	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getKey()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getKey()));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getKey()));	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getString()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
125	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.getType()  ==  Token.NAME);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.getType()  ==  Token.NAME);	  parent!=    null    &&    parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
126	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBound(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBound(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBound(token)!=  null  &&!token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(t)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
128	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  parent  ==  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETPROP;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETPROP;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
130	[BUG]  [BUGGY]  token  =  t.toLowerCase();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  token  =  t.toLowerCase();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	token  =  t.toLowerCase();	  String    token    =    t.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
131	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
132	[BUG]  [BUGGY]  String  token  =  options.toLowerCase(pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  options.toLowerCase(pos);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  options.toLowerCase(pos);	  String    token    =    t.toLowerCase(pos);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
133	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(t,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  option.getOption(t,  value  -  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  option.getOption(t,  value  -  1);	  Option    cmd    =    option.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
134	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  ||  parent!=  null;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||  parent!=  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
135	[BUG]  [BUGGY]  parent  ==  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null;	  parent    ==    null    &&    parent!=    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
136	[BUG]  [BUGGY]  Option  option  =  options.getOption(t).getOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t).getOption(option);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t).getOption(option);	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.getOption(t).getOption();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t).getOption();  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t).getOption();	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  int  pos  =  options.getIntPrefix(t  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getIntPrefix(t  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getIntPrefix(t  +  1);	  int    pos    =    options.getIntPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
139	[BUG]  [BUGGY]  int  pos  =  options.getPosition(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPosition(1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(1);	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
140	[BUG]  [BUGGY]  int  pos  =  options.getLongPosition(t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getLongPosition(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getLongPosition(t);	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
141	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
142	[BUG]  [BUGGY]  int  pos  =  options.getPrefix(t  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPrefix(t  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPrefix(t  +  1);	  int    pos    =    options.getPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
143	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!Token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
144	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
145	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(value,  t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(value,  t);	  Option    option    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
146	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent  ==  null;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent  ==  null;	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
147	[BUG]  [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getPrefix(t)  ==  null  &&!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
148	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  key);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  key);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  key);	  Option    cmd    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
149	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  value  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  value  +  1);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  value  +  1);	  Option    cmd    =    options.getOption(t,    value);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
150	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.equals( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
151	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null  &&  parent.equals(t.parent));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  ||  parent!=  null  &&  parent.equals(t.parent));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||  parent!=  null  &&  parent.equals(t.parent));	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
152	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent);	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
153	[BUG]  [BUGGY]  int  pos  =  options.getLongPrefix(t)+  1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getLongPrefix(t)+  1  +  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getLongPrefix(t)+  1  +  1;	  int    pos    =    options.getLongPrefix(t)+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
154	[BUG]  [BUGGY]  parent  ==  null  ||!parent.startsWith(t))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  ||!parent.startsWith(t))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.startsWith(t))  {  return  false;	  parent    ==    null    ||!parent.startsWith(t))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
155	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  return  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
156	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  pos,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  pos,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  pos,  token);	  Option    cmd    =    options.getOption(t,    pos);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
157	[BUG]  [BUGGY]  String  token  =  option.toLowerCase(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  option.toLowerCase(t);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  option.toLowerCase(t);	  String    token    =    option.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
158	[BUG]  [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t  ==  null  ||  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t    ==    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
159	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!Token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!Token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
160	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getToken(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getToken(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getToken(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!Token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
161	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!Token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!Token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!Token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!Token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
162	[BUG]  [BUGGY]  if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
163	[BUG]  [BUGGY]  int  pos  =  options.getLongPrefix(t)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getLongPrefix(t)-  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getLongPrefix(t)-  1;	  int    pos    =    options.getLongPrefix(t)+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
164	[BUG]  [BUGGY]  parent  ==  null  ||  parent.equals(t.parent))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  ||  parent.equals(t.parent))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||  parent.equals(t.parent))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.parent))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
165	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getLongPrefix(t)  ==  null  ||!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)    ==    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
166	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  token,  getLongPrefix(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  token,  getLongPrefix(token));	  Option    cmd    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
167	[BUG]  [BUGGY]  int  pos  =  options.getPrefix(t).indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPrefix(t).indexOf( "- ");  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPrefix(t).indexOf( "- ");	  int    pos    =    options.getPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
168	[BUG]  [BUGGY]  int  pos  =  options.getMatchingOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getMatchingOption(t,  token);  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getMatchingOption(t,  token);	  int    pos    =    options.getMatchingOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
169	[BUG]  [BUGGY]  int  pos  =  options.getMatchingOption(t)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getMatchingOption(t)-  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getMatchingOption(t)-  1;	  int    pos    =    options.getMatchingOptions(t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
170	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  t.startsWith( "- "));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  t.startsWith( "- "));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  t.startsWith( "- "));	  parent!=    null    &&    parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
171	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t,  token,  getLongPrefix(token));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  token,  getLongPrefix(token));	  Option    option    =    options.getOption(t,    token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
172	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  token.equals(t.getString()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  &&  parent!=  null  &&  token.equals(t.getString()));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  token.equals(t.getString()));	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getString()));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
173	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  true;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
175	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
176	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
177	[BUG]  [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
178	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
179	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
180	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
181	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.VAR;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.VAR;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)  ==  null  &&  parent.getType()  ==  Token.VAR;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
182	[BUG]  [BUGGY]  int  pos  =  options.getPosition(t).indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPosition(t).indexOf( "- ");  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(t).indexOf( "- ");	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
183	[BUG]  [BUGGY]  int  pos  =  options.getPosition(t)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  int  pos  =  options.getPosition(t)-  1;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(t)-  1;	  int    pos    =    options.getPosition(t);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
184	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
185	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getValue(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getValue(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getValue(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
186	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBound(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBound(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBound(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
187	[BUG]  [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(token!=    null    &&    getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
188	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  pos);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  pos);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  pos);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    options.getOption(t,    value);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
189	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getUpperBounds(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  false;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
190	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getValue(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getValue(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getValue(t,  token)!=  null  &&!token.startsWith( "- "))  {  return  false;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
191	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
192	[BUG]  [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getTokenPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
193	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETELEM;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETELEM;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETELEM;	  parent!=    null    &&    parent.getValue(t)!=    null    &&    parent.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
194	[BUG]  [BUGGY]  if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t!=  null)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
195	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos  +  2));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos  +  2));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(Long.valueOf(pos  +  2));	  String    token    =    t.toLowerCase(Long.valueOf(pos));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
196	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getNewPrefix(t));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getNewPrefix(t));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getNewPrefix(t));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
197	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getNewValue(t));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  getNewValue(t));  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getNewValue(t));	  Option    cmd    =    options.getOption(t,    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
198	[BUG]  [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  else  if(t  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]      {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t    ==    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
199	[BUG]  [BUGGY]  parent  ==  null  ||  parent.equals(t.getName()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  parent  ==  null  ||  parent.equals(t.getName()))  {  return  true;  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||  parent.equals(t.getName()))  {  return  true;	  parent    ==    null    &&    parent!=    null    &&    parent.equals(t.getName()))    {    return    true;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
200	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
201	[BUG]  [BUGGY]  if(t  ==  null)  {  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }      [BUGGY]  if(t  ==  null)  {  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(t  ==  null)  {  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  if(pos    ==    -1)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
