bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  option.getOption(t,  token);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  option.getOption(t,  token);	      Option    cmd    =    option.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  option.getOption(t,  value);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  option.getOption(t,  value);	      Option    cmd    =    option.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  currentOption.getOption(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  currentOption.getOption(t);	      Option    cmd    =    option.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  String  token  =  t.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.substring(0,  pos  +  1);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(0,  pos  +  1);	      String    token    =    t.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  String  token  =  t.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.substring(0,  pos  +  2);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(0,  pos  +  2);	      String    token    =    t.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  String  token  =  t.substring(0,  pos  +  3);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.substring(0,  pos  +  3);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(0,  pos  +  3);	      String    token    =    t.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  int  pos  =  options.getPrefix(t);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  int  pos  =  options.getPrefix(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPrefix(t);	      int    pos    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  int  pos  =  options.getMatchingOptions(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  int  pos  =  options.getMatchingOptions(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getMatchingOptions(t);	      int    pos    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  int  pos  =  options.getIntPrefix(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  int  pos  =  options.getIntPrefix(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getIntPrefix(t);	      int    pos    =    options.getLongPrefix(token);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.NAME);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.NAME);	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.VAR);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.VAR);	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME);	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETPROP;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETPROP;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  parent.getType()  ==  Token.GETPROP;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
18	[BUG]  [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  return  true;  }	      Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t,  pos);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  pos);	      Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t,  token);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  token);	      Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t,  value);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  value);	      Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.startsWith( ". "))  {  return  false;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  false;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.startsWith( "- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getPrefix(t)!=  null  &&!token.startsWith( "- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&  getPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( "- "))  {  return  false;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  int  pos  =  options.getPosition(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  int  pos  =  options.getPosition(t);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getPosition(t);	      int    pos    =    options.getLongPrefix(t);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(t,  token);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  token);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  value);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(t,  value);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  value);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(t,  pos);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  option  =  options.getOption(t,  pos);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!Token.startsWith( "- "))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent!=  null  &&  parent.getValue(t)!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  String  token  =  t.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.toLowerCase()  +  1;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase()  +  1;	      String    token    =    t.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.toLowerCase(Long.valueOf(pos));  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(Long.valueOf(pos));	      String    token    =    t.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  String  token  =  t.toUpperCase();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.toUpperCase();  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toUpperCase();	      String    token    =    t.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  value);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t,  value);  if(cmd!=  null)  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  value);  if(cmd!=  null)  {  return  true;  }	      Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getValue()))  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getValue()))  {  return  false;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getValue()))  {  return  false;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getString()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getString()));  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getString()));	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  String  token  =  t.substring(pos,  pos);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.substring(pos,  pos);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.substring(pos,  pos);	      String    token    =    t.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  String  token  =  t.toLowerCase(pos);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  t.toLowerCase(pos);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  t.toLowerCase(pos);	      String    token    =    t.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  String  token  =  option.toLowerCase();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  String  token  =  option.toLowerCase();  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	String  token  =  option.toLowerCase();	      String    token    =    t.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( ". "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( ". "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( ". "))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( ".- "))  {  return  true;  }  [CE]  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( ".- "))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	if(pos  ==  -1)  {  if(getLongPrefix(token)!=  null  ||!token.startsWith( ".- "))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  	16	None	replace
52	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getValue()))  {  return  true;  [CE]  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getValue()))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getValue()))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  	17	None	replace
53	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;  [CE]  [FE]                  AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  	17	None	replace
54	[BUG]  [BUGGY]  int  pos  =  options.getLongPrefix(t)+  1;  [CE]  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  int  pos  =  options.getLongPrefix(t)+  1;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	int  pos  =  options.getLongPrefix(t)+  1;	      int    pos    =    options.getLongPrefix(t);    	non-compiled	[CE]  	12	None	replace
55	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.hasChildren())  {  return  true;  [CE]  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.hasChildren())  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.hasChildren())  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  	14	None	replace
56	[BUG]  [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "-- "))  {  [CE]  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getPrefix(t)!=  null  &&!token.equals( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getPrefix(t)!=  null  &&!token.equals( "-- "))  {	  else    if(getPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  	8	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  value);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t,  value);  if(cmd!=  null)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  value);  if(cmd!=  null)  {  return  false;  }	      Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(getLongPrefix(t)  ==  null  &&!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t);  if(cmd  ==  null)  {  return  false;  }	      Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t,  getLongPrefix(token));  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  options.getOption(t,  getLongPrefix(token));	      Option    cmd    =    options.getOption(t);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(token!=  null  &&!token.startsWith( "-- "))  {	  else    if(getLongPrefix(t)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  true;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.equals(t))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent));  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent));	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getName()))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getName()))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.getName()))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   ".-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {	  else    if(token!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  Option  cmd  =  option.getOption(t,  pos);  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	Option  cmd  =  option.getOption(t,  pos);	      Option    cmd    =    option.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  false;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  false;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.equals(t))  {  return  false;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  false;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  false;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  &&  parent!=  null  &&  parent.equals(t.parent))  {  return  false;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  false;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.equals(t))  {  return  false;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {  [BUGGY]    {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	else  if(t  ==  null  &&  getLongPrefix(t)!=  null  &&!token.startsWith( "-- "))  {	  else    if(t!=    null    &&    getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
73	[BUG]  [BUGGY]  parent  ==  null  ||!parent.startsWith(t))  {  return  true;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  ||!parent.startsWith(t))  {  return  true;  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.startsWith(t))  {  return  true;	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  parent  ==  null  ||!parent.startsWith(t))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  ||!parent.startsWith(t))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.startsWith(t))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
75	[BUG]  [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }    [BUGGY]  parent  ==  null  ||!parent.equals(t))  {  return  true;  }  [BUGGY]    else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  {  return  true;  }  return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	parent  ==  null  ||!parent.equals(t))  {  return  true;  }	      if(t!=    null)    {    if(getLongPrefix(token)!=    null    ||!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
