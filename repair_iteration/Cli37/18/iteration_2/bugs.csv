bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  options  =  options.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  ';'  expected	14	None	replace
2	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Options  options  =  currentOption.getOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Options  options  =  currentOption.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  ';'  expected	14	None	replace
3	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  options  =  currentOption.getOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  options  =  currentOption.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  ';'  expected	14	None	replace
4	[BUG]  [BUGGY]  expectedOpts  =  new  LinkedList();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  LinkedList();  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  LinkedList();	  expectedOpts    =    new    ArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
5	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList  <  Option>();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  ArrayList  <  Option>();  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList  <  Option>();	  expectedOpts    =    new    ArrayList();    	non-compiled	[CE]  ';'  expected	13	None	replace
6	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
7	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
8	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  for(OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
9	[BUG]  [BUGGY]  if(options.getOptionGroups()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  group.setSelected(null);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
10	[BUG]  [BUGGY]  currentOption  =  options.getRequiredOptions();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  currentOption  =  options.getRequiredOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	currentOption  =  options.getRequiredOptions();	      if(options.getRequiredOptions()    ==    null)    {    currentOption    =    options.getRequiredOptions();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
11	[BUG]  [BUGGY]  if(options.getOptionGroups()  ==  null)  {  currentOption  =  options.getRequiredOptions();  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()  ==  null)  {  currentOption  =  options.getRequiredOptions();  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()  ==  null)  {  currentOption  =  options.getRequiredOptions();  }	      if(options.getRequiredOptions()    ==    null)    {    currentOption    =    options.getRequiredOptions();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
12	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getRequiredOption(argument);	      Option    currentToken    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  ';'  expected	18	None	replace
13	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(arguments);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getRequiredOption(arguments);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getRequiredOption(arguments);	      Option    currentToken    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  ';'  expected	18	None	replace
14	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(currentToken  +  1);  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getRequiredOption(currentToken  +  1);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getRequiredOption(currentToken  +  1);	      Option    currentToken    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  ';'  expected	18	None	replace
15	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
16	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
17	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
18	[BUG]  [BUGGY]  if(options.getAllOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getAllOptions());  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getAllOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getAllOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getAllOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getAllOptions());  }	  expectedOpts    =    new    ArrayList(options.getAllOptions());    	non-compiled	[CE]  ';'  expected	4	None	replace
19	[BUG]  [BUGGY]  Option  group  =  options.getGroups();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  group  =  options.getGroups();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  group  =  options.getGroups();	      Option    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	23	None	replace
20	[BUG]  [BUGGY]  Option  group  =  options.getGroup(true);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  group  =  options.getGroup(true);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  group  =  options.getGroup(true);	      Option    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	23	None	replace
21	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  group  =  options.getOptionGroup();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  group  =  options.getOptionGroup();	      Option    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	23	None	replace
22	[BUG]  [BUGGY]  if(options.getOptionPositions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionPositions());  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionPositions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionPositions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionPositions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionPositions());  }	  expectedOpts    =    new    ArrayList(options.getOptionPositions());    	non-compiled	[CE]  ';'  expected	24	None	replace
23	[BUG]  [BUGGY]  if(options.getOptionPositions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getOptionPositions());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionPositions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getOptionPositions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionPositions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getOptionPositions());  }	  expectedOpts    =    new    ArrayList(options.getOptionPositions());    	non-compiled	[CE]  ';'  expected	24	None	replace
24	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getOptions());  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getOptions());	  ExpectedOpts    expectedOpts    =    new    ExpectedOpts(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	11	None	replace
25	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getSelectedOptions());  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getSelectedOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getSelectedOptions());	  ExpectedOpts    expectedOpts    =    new    ExpectedOpts(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	11	None	replace
26	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getAllOptions());  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getAllOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getAllOptions());	  ExpectedOpts    expectedOpts    =    new    ExpectedOpts(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	11	None	replace
27	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken()  +  1;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getToken()  +  1;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getToken()  +  1;	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	16	None	replace
28	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken()  -  1;  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getToken()  -  1;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getToken()  -  1;	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	16	None	replace
29	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  arguments;  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getToken(),  arguments;  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getToken(),  arguments;	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	16	None	replace
30	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  currentOption  =  options.getRequiredOptions();  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  currentOption  =  options.getRequiredOptions();  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  currentOption  =  options.getRequiredOptions();  }	      if(options.getRequiredOptions()!=    null)    {    currentOption    =    options.getRequiredOptions();    }    	non-compiled	[CE]  ';'  expected	9	None	replace
31	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  LinkedList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  LinkedList(options.getRequiredOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  LinkedList(options.getRequiredOptions());  }	  expectedOpts    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	3	None	replace
32	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken);	      OptionGroup    group    =    options.getOptionGroup(null);    	non-compiled	[CE]  ';'  expected	22	None	replace
33	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	      OptionGroup    group    =    options.getOptionGroup(null);    	non-compiled	[CE]  ';'  expected	22	None	replace
34	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	      OptionGroup    group    =    options.getOptionGroup(null);    	non-compiled	[CE]  ';'  expected	22	None	replace
35	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelectedOption();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getSelectedOption();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getSelectedOption();	      Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  ';'  expected	17	None	replace
36	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getOption();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getOption();	      Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  ';'  expected	17	None	replace
37	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getImplicitRequiredOption();	      Option    currentToken    =    options.getRequiredOption();    	non-compiled	[CE]  ';'  expected	17	None	replace
38	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getGroup(currentToken);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	21	None	replace
39	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(true);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getGroup(true);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getGroup(true);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	21	None	replace
40	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	  expectedOpts    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  ';'  expected	1	None	replace
41	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	  expectedOpts    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  ';'  expected	1	None	replace
42	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }	  expectedOpts    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  ';'  expected	12	None	replace
43	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionOpts());  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionOpts());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList(options.getOptionOpts());	  expectedOpts    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  ';'  expected	12	None	replace
44	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  else  {  expectedOpts.addAll(options.getOptionGroups());  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  else  {  expectedOpts.addAll(options.getOptionGroups());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  else  {  expectedOpts.addAll(options.getOptionGroups());  }	  expectedOpts    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  ';'  expected	12	None	replace
45	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
46	[BUG]  [BUGGY]  if(options.getOptionGroups()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()  ==  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
47	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptions();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getOptions();	      Option    currentToken    =    options.getRequiredOptions();    	non-compiled	[CE]  ';'  expected	15	None	replace
48	[BUG]  [BUGGY]  OptionGroup  group  =  options.getRequiredOptions();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getRequiredOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getRequiredOptions();	      OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  ';'  expected	20	None	replace
49	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
50	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
51	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
52	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()    ==    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  currentToken);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getGroups(),  currentToken);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getGroups(),  currentToken);	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  ';'  expected	19	None	replace
54	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup(currentOption);	      OptionGroup    group    =    options.getOptionGroup(null);    	non-compiled	[CE]  ';'  expected	22	None	replace
55	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(currentToken);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getOption(currentToken);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getOption(currentToken);	      Option    currentToken    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  ';'  expected	18	None	replace
56	[BUG]  [BUGGY]  Option  group  =  options.getArgument();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  group  =  options.getArgument();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  group  =  options.getArgument();	      Option    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	23	None	replace
57	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getAllOptions());  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getAllOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getAllOptions());  }	  expectedOpts    =    new    ArrayList(options.getAllOptions());    	non-compiled	[CE]  ';'  expected	4	None	replace
58	[BUG]  [BUGGY]  OptionGroup  group  =  options.getSelectedOptions();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getSelectedOptions();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getSelectedOptions();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  ';'  expected	19	None	replace
59	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
60	[BUG]  [BUGGY]  if(options.getOptionGroups()  >=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()  >=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()  >=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
61	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
62	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
63	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getTokens());  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getTokens());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getTokens());	  ExpectedOpts    expectedOpts    =    new    ExpectedOpts(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	11	None	replace
64	[BUG]  [BUGGY]  if(options!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	  expectedOpts    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  ';'  expected	1	None	replace
65	[BUG]  [BUGGY]  if(options!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptionGroups());  }	  expectedOpts    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  ';'  expected	12	None	replace
66	[BUG]  [BUGGY]  OptionGroup  group  =  options.getSelectedOptionGroups();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getSelectedOptionGroups();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getSelectedOptionGroups();	      OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  ';'  expected	20	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  option  =  options.getOption(currentToken);	      	non-compiled	[CE]  ';'  expected	5	None	replace
68	[BUG]  [BUGGY]  Options  options  =  options.getOptionGroups();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Options  options  =  options.getOptionGroups();  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Options  options  =  options.getOptionGroups();	      	non-compiled	[CE]  ';'  expected	5	None	replace
69	[BUG]  [BUGGY]  currentOption  =  options.getOption(arguments);  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  currentOption  =  options.getOption(arguments);  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	currentOption  =  options.getOption(arguments);	      	non-compiled	[CE]  ';'  expected	5	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup();	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	21	None	replace
71	[BUG]  [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptions()  ==  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
72	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(argument);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getToken(argument);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getToken(argument);	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	16	None	replace
73	[BUG]  [BUGGY]  expectedOpts  =  new  LinkedList(options.getOptions());  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  LinkedList(options.getOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  LinkedList(options.getOptions());	  expectedOpts    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	3	None	replace
74	[BUG]  [BUGGY]  options  =  new  ArrayList(options.getRequiredOptions());  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  options  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	options  =  new  ArrayList(options.getRequiredOptions());	  expectedOpts    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	3	None	replace
75	[BUG]  [BUGGY]  Option  options  =  options.getOptionGroups();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  options  =  options.getOptionGroups();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  options  =  options.getOptionGroups();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  ';'  expected	14	None	replace
76	[BUG]  [BUGGY]  Option  group  =  options.getArgumentGroup();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  group  =  options.getArgumentGroup();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  group  =  options.getArgumentGroup();	      Option    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	23	None	replace
77	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(currentToken,  argument);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getRequiredOption(currentToken,  argument);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getRequiredOption(currentToken,  argument);	      Option    currentToken    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  ';'  expected	18	None	replace
78	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(currentToken,  arguments);  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getRequiredOption(currentToken,  arguments);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getRequiredOption(currentToken,  arguments);	      Option    currentToken    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  ';'  expected	18	None	replace
79	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  currentToken  =  group.getToken();  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  currentToken  =  group.getToken();  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup(null);  currentToken  =  group.getToken();	      	non-compiled	[CE]  ';'  expected	5	None	replace
80	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  currentToken  =  group.getToken();  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  currentToken  =  group.getToken();  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroups();  currentToken  =  group.getToken();	      	non-compiled	[CE]  ';'  expected	5	None	replace
81	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions(),  options.getOptionGroups());  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions(),  options.getOptionGroups());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions(),  options.getOptionGroups());	  ExpectedOpts    expectedOpts    =    new    ExpectedOpts(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	11	None	replace
82	[BUG]  [BUGGY]  expectedOpts  =  new  LinkedList(options.getOptionPositions());  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  LinkedList(options.getOptionPositions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  LinkedList(options.getOptionPositions());	  expectedOpts    =    new    ArrayList(options.getOptionPositions());    	non-compiled	[CE]  ';'  expected	24	None	replace
83	[BUG]  [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
84	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
85	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
86	[BUG]  [BUGGY]  expectedOpts  =  new  LinkedList(options.getOptionGroups());  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  LinkedList(options.getOptionGroups());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  LinkedList(options.getOptionGroups());	  expectedOpts    =    new    ArrayList(options.getOptionGroups());    	non-compiled	[CE]  ';'  expected	12	None	replace
87	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(0);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  Option  currentToken  =  options.getToken(0);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	Option  currentToken  =  options.getToken(0);	      Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	16	None	replace
88	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getOptionGroups()!=  null)  {  for(Option  group  :  options.getOptionGroups())  {  currentOption.setSelected(null);  }	      if(options.getRequiredOptions()!=    null)    {    for(Option    group    :    options.getGroups())    {    currentOption.setSelected(null);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
89	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getOptionGroup(arguments);	      OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  ';'  expected	20	None	replace
90	[BUG]  [BUGGY]  OptionGroup  group  =  options.getArgumentGroups();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getArgumentGroups();  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getArgumentGroups();	      OptionGroup    group    =    options.getGroups();    	non-compiled	[CE]  ';'  expected	19	None	replace
91	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionOPts());  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionOPts());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList(options.getOptionOPts());	  expectedOpts    =    new    ArrayList(options.getOptions());    	non-compiled	[CE]  ';'  expected	1	None	replace
92	[BUG]  [BUGGY]  expectOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectOpts  =  new  ArrayList(options.getRequiredOptions());	  expectedOpts    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	3	None	replace
93	[BUG]  [BUGGY]  ExpectedOpts.checkState(options.getRequiredOptions());  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  ExpectedOpts.checkState(options.getRequiredOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts.checkState(options.getRequiredOptions());	  expectedOpts    =    new    LinkedList(options.getRequiredOptions());    	non-compiled	[CE]  ';'  expected	3	None	replace
94	[BUG]  [BUGGY]  expectedOpts  =  new  LinkedList(options.getAllOptions());  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  expectedOpts  =  new  LinkedList(options.getAllOptions());  [BUGGY]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  LinkedList(options.getAllOptions());	  expectedOpts    =    new    ArrayList(options.getAllOptions());    	non-compiled	[CE]  ';'  expected	4	None	replace
95	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(null);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;    [BUGGY]  OptionGroup  group  =  options.getGroup(null);  [BUGGY]    expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	OptionGroup  group  =  options.getGroup(null);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  ';'  expected	21	None	replace
