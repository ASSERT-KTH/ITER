bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptions());  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptions());  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList(options.getOptions());	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
2	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
3	[BUG]  [BUGGY]  expectedOpts  =  new  LinkedList(options.getRequiredOptions());  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  expectedOpts  =  new  LinkedList(options.getRequiredOptions());  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  LinkedList(options.getRequiredOptions());	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
4	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getAllOptions());  [CE]  ';'  expected  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  expectedOpts  =  new  ArrayList(options.getAllOptions());  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList(options.getAllOptions());	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
5	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]            AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	  	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
6	[BUG]  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }		non-compiled	[CE]  ';'  expected	37	None	add
7	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    if(options.getRequiredOptions()  ==  null)  {  for(Option  group  :  options.getGroups())  {  currentOption.setSelected(null);  }		non-compiled	[CE]  ';'  expected	37	None	add
8	[BUG]  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    if(options.getRequiredOptions()!=  null)  {  for(Option  group  :  options.getGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  ';'  expected	37	None	add
9	[BUG]  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  currentOption  =  options.getRequiredOptions();  }  [CE]  ';'  expected  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    if(options.getRequiredOptions()!=  null)  {  currentOption  =  options.getRequiredOptions();  }  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    if(options.getRequiredOptions()!=  null)  {  currentOption  =  options.getRequiredOptions();  }		non-compiled	[CE]  ';'  expected	37	None	add
10	[BUG]  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  currentOption  =  options.getRequiredOptions();  }  [CE]  ';'  expected  [FE]            AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    if(options.getRequiredOptions()  ==  null)  {  currentOption  =  options.getRequiredOptions();  }  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    if(options.getRequiredOptions()  ==  null)  {  currentOption  =  options.getRequiredOptions();  }		non-compiled	[CE]  ';'  expected	37	None	add
11	[BUG]  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions());  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions());  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	ExpectedOpts  expectedOpts  =  new  ExpectedOpts(options.getRequiredOptions());	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
12	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList(options.getOptionGroups());	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
13	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList();  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  expectedOpts  =  new  ArrayList();  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList();	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
14	[BUG]  [BUGGY]    Options  options  =  options.getOptions();  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    Options  options  =  options.getOptions();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    Options  options  =  options.getOptions();		non-compiled	[CE]  ';'  expected	37	None	add
15	[BUG]  [BUGGY]    Option  currentToken  =  options.getRequiredOptions();  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    Option  currentToken  =  options.getRequiredOptions();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    Option  currentToken  =  options.getRequiredOptions();		non-compiled	[CE]  ';'  expected	37	None	add
16	[BUG]  [BUGGY]    Option  currentToken  =  options.getToken();  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    Option  currentToken  =  options.getToken();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    Option  currentToken  =  options.getToken();		non-compiled	[CE]  ';'  expected	37	None	add
17	[BUG]  [BUGGY]    Option  currentToken  =  options.getRequiredOption();  [CE]  ';'  expected  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    Option  currentToken  =  options.getRequiredOption();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    Option  currentToken  =  options.getRequiredOption();		non-compiled	[CE]  ';'  expected	37	None	add
18	[BUG]  [BUGGY]    Option  currentToken  =  options.getRequiredOption(currentToken);  [CE]  ';'  expected  [FE]            AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    Option  currentToken  =  options.getRequiredOption(currentToken);  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    Option  currentToken  =  options.getRequiredOption(currentToken);		non-compiled	[CE]  ';'  expected	37	None	add
19	[BUG]  [BUGGY]    OptionGroup  group  =  options.getGroups();  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    OptionGroup  group  =  options.getGroups();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    OptionGroup  group  =  options.getGroups();		non-compiled	[CE]  ';'  expected	37	None	add
20	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroups();  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    OptionGroup  group  =  options.getOptionGroups();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    OptionGroup  group  =  options.getOptionGroups();		non-compiled	[CE]  ';'  expected	37	None	add
21	[BUG]  [BUGGY]    OptionGroup  group  =  options.getGroup();  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    OptionGroup  group  =  options.getGroup();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    OptionGroup  group  =  options.getGroup();		non-compiled	[CE]  ';'  expected	37	None	add
22	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(null);  [CE]  ';'  expected  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(null);  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    OptionGroup  group  =  options.getOptionGroup(null);		non-compiled	[CE]  ';'  expected	37	None	add
23	[BUG]  [BUGGY]    Option  group  =  options.getGroup();  [CE]  ';'  expected  [FE]            AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]    Option  group  =  options.getGroup();  [BUGGY]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	    Option  group  =  options.getGroup();		non-compiled	[CE]  ';'  expected	37	None	add
24	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionPositions());  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  currentOption  =  null;  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionPositions());  [BUGGY]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	expectedOpts  =  new  ArrayList(options.getOptionPositions());	expectedOpts  =  new  ArrayList(options.getRequiredOptions());  	non-compiled	[CE]  ';'  expected	36	None	replace
