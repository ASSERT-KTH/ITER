bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());		non-compiled	[CE]  illegal  start  of  type	43	None	add
2	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }		non-compiled	[CE]  illegal  start  of  type	43	None	add
3	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  type	43	None	add
4	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(false);  }  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(false);  }  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  for(OptionGroup  group  :  options.getOptionGroups())  {  cmd.setSelected(false);  }		non-compiled	[CE]  illegal  start  of  type	43	None	add
5	[BUG]  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  expectedOpts.addAll(cmd);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  expectedOpts.addAll(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    List  <  String>  arguments  =  new  ArrayList(options.getRequiredOptions());  expectedOpts.addAll(cmd);		non-compiled	[CE]  illegal  start  of  type	43	None	add
6	[BUG]  [BUGGY]  if(arguments  ==  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments  ==  null)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	if(arguments  ==  null)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
7	[BUG]  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  ||  expectedOpts.length  ==  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	if(arguments!=  null  ||  expectedOpts.length  ==  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
8	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  currentOption  =  options.getOption(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    Option  currentOption  =  options.getOption(cmd);		non-compiled	[CE]  illegal  start  of  type	43	None	add
9	[BUG]  [BUGGY]    Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Options  options  =  options.getOptions();  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    Options  options  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	43	None	add
10	[BUG]  [BUGGY]    Option  currentOption  =  options.getRequiredOption(cmd);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  currentOption  =  options.getRequiredOption(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    Option  currentOption  =  options.getRequiredOption(cmd);		non-compiled	[CE]  illegal  start  of  type	43	None	add
11	[BUG]  [BUGGY]    List  <  String>  arguments  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    List  <  String>  arguments  =  options.getRequiredOptions();  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    List  <  String>  arguments  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  type	43	None	add
12	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  currentOption  =  options.getOption(currentToken);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    Option  currentOption  =  options.getOption(currentToken);		non-compiled	[CE]  illegal  start  of  type	43	None	add
13	[BUG]  [BUGGY]  if(cmd  ==  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(cmd  ==  null)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	if(cmd  ==  null)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
14	[BUG]  [BUGGY]  if(arguments!=  null  &&  expectedOpts.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  &&  expectedOpts.size()  >  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	if(arguments!=  null  &&  expectedOpts.size()  >  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
15	[BUG]  [BUGGY]  if(arguments!=  null  &&  expectedOpts.length  >  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  &&  expectedOpts.length  >  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	if(arguments!=  null  &&  expectedOpts.length  >  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
16	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]  if(arguments!=  null  &&  arguments.length  >  0)  {  [BUGGY]  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	if(arguments!=  null  &&  arguments.length  >  0)  {	if  (arguments  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	42	None	replace
17	[BUG]  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    OptionGroup  currentOption  =  options.getOptionGroup(cmd);		non-compiled	[CE]  illegal  start  of  type	43	None	add
18	[BUG]  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup();  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    OptionGroup  currentOption  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	43	None	add
19	[BUG]  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup(group);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    OptionGroup  currentOption  =  options.getOptionGroup(group);		non-compiled	[CE]  illegal  start  of  type	43	None	add
20	[BUG]  [BUGGY]    Option  option  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [BUGGY]    Option  option  =  options.getOption(cmd);  [BUGGY]  if  (arguments  !=  null)  {  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }  checkRequiredArgs();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	    Option  option  =  options.getOption(cmd);		non-compiled	[CE]  illegal  start  of  type	43	None	add
