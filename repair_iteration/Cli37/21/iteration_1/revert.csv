projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(false);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredOptions());expectedOpts.addAll(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null||expectedOpts.length==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionsoptions=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getRequiredOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=options.getRequiredOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd==null){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null&&expectedOpts.size()>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null&&expectedOpts.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null&&arguments.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=options.getOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(expectedOpts!=null&&expectedOpts.size()>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null||expectedOpts.size()>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(expectedOpts!=null&&arguments.size()>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(cmd,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=cmd.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null||expectedOpts.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(expectedOpts!=null&&arguments.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(expectedOpts!=null&&expectedOpts.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionsoptions=cmd.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionsoptions=currentOption.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoptions=cmd.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null||expectedOpts.size()==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=options.getArguments();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=options.getRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=options.getRequiredArguments();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(options.getRequiredOptions()!=null){List<String>arguments=newArrayList(options.getRequiredOptions());expectedOpts.addAll(cmd);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(options.getRequiredOptions()==null){List<String>arguments=newArrayList(options.getRequiredOptions());expectedOpts.addAll(cmd);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116ArrayList<String>arguments=newArrayList(options.getRequiredOptions());expectedOpts.addAll(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(group,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=cmd.getOptionGroup(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getRequiredOption(cmd,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getRequiredOption(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getRequiredOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(cmd,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=cmd.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getArguments());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredArgs());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116ArrayList<String>arguments=newArrayList(options.getRequiredOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116ArrayList<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredArgs());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredArguments());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(),cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(),cmd;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null||expectedOpts.length==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null||expectedOpts.length!=0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(expectedOpts!=null||arguments.length==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(currentToken,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116ArrayList<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(options.getRequiredOptions()!=null){List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(options.getRequiredOptions()==null){List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(options.getRequiredOptions()!=null){List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(false);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=options.getOption(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=options.getOption(cmd,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=cmd.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null||arguments.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null||arguments.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null&&arguments.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(stopAtNonOption){List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(false);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(stopAtNonOption){List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd!=null&&arguments.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoptions=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd!=null&&expectedOpts.length>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOption(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getOptions());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getOptionArgs());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(stopAtNonOption){List<String>arguments=newArrayList(options.getRequiredOptions());expectedOpts.addAll(cmd);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd==null||expectedOpts.length==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getRequiredOption(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(currToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(stopAtNonOption){List<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredArgs());for(OptionGroupgroup:options.getOptionGroups()){cmd.addChangeListener(this);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd!=null){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd==null||!stopAtNonOption){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd!=null&&expectedOpts.size()>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(options!=null&&expectedOpts.size()>0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOptionGroup(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptioncurrentOption=options.getOption(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=options.getOption(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=options.getOptionGroup(cmd,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionoption=options.getOption(cmd,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null||expectedOpts.contains(argument)){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments==null||expectedOpts.size()==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupcurrentOption=option.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(cmd==null||expectedOpts.size()==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(argument!=null){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116OptionGroupgroup=options.getOptionGroup(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116List<String>arguments=newArrayList(options.getRequiredOptions());expectedOpts.addAll(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116ArrayList<String>arguments=newArrayList(options.getRequiredOptions());for(OptionGroupgroup:options.getOptionGroups()){cmd.setSelected(false);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116if(arguments!=null&&expectedOpts.length==0){
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java116Optionsoptions=options.getOptionGroups();
