bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  cmd  =  option.getOption(token);  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  cmd  =  option.getOption(token);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  cmd  =  options.getOption(token);  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  cmd  =  options.getOption(token);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  if(opt!=  null)  {  opt  =  token.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(opt!=  null)  {  opt  =  token.substring(0,  i);  }  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(opt!=  null)  {  opt  =  token.substring(0,  i);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  options  =  currentOption.getOption(token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  options  =  currentOption.getOption(token);	      Option    options    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  Option  options  =  option.getOption(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  options  =  option.getOption(token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  options  =  option.getOption(token);	      Option    options    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  if(options.hasLongOption(prefix)||  options.hasOption(token))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasLongOption(prefix)||  options.hasOption(token))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasLongOption(prefix)||  options.hasOption(token))  {	  if(options.hasLongOption(prefix)||    options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  if(options.hasLongOption(prefix)&&  options.hasOption(opt))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasLongOption(prefix)&&  options.hasOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasLongOption(prefix)&&  options.hasOption(opt))  {	  if(options.hasLongOption(prefix)||    options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  if(options.hasOption(prefix)||  options.hasOption(opt))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasOption(prefix)||  options.hasOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasOption(prefix)||  options.hasOption(opt))  {	  if(options.hasLongOption(prefix)||    options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  opt  =  token.substring(i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  opt  =  token.substring(i  +  1);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	opt  =  token.substring(i  +  1);	      if(opt!=    null)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  options.hasLongOption(prefix))  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  options.hasLongOption(prefix))  {  opt  =  token.substring(i  +  1);  }  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	options.hasLongOption(prefix))  {  opt  =  token.substring(i  +  1);  }	      if(opt!=    null)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  options.hasLongOption(prefix))  {  opt  =  prefix;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  options.hasLongOption(prefix))  {  opt  =  prefix;  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	options.hasLongOption(prefix))  {  opt  =  prefix;	      if(opt!=    null)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  currentOption  =  options.getOption(prefix);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  currentOption  =  options.getOption(prefix);	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  Option  currentOption  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  currentOption  =  options.get(prefix);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  currentOption  =  options.get(prefix);	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  options.put(token,  opt);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  options.put(token,  opt);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	options.put(token,  opt);	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  opt  =  t.substring(i  +  1,  token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	opt  =  t.substring(i  +  1,  token);	      opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  prefix);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  opt  =  t.substring(i  +  1,  prefix);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	opt  =  t.substring(i  +  1,  prefix);	      opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  opt  =  t.substring(i  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  opt  =  t.substring(i  +  2);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	opt  =  t.substring(i  +  2);	      opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  if(option.hasOption(opt))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(option.hasOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(option.hasOption(opt))  {	  if(options.hasOption(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  if(option.hasOption(prefix)||  options.hasOption(opt))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(option.hasOption(prefix)||  options.hasOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(option.hasOption(prefix)||  options.hasOption(opt))  {	  if(options.hasOption(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(i);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  option  =  options.getOption(i);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  option  =  options.getOption(i);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  if(!options.hasLongOption(opt))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(!options.hasLongOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(!options.hasLongOption(opt))  {	  if(!options.hasLongOption(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  if(option.hasLongOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(option.hasLongOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(option.hasLongOption(prefix))  {	  if(!options.hasLongOption(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  if(!options.hasOption(opt))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(!options.hasOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(!options.hasOption(opt))  {	  if(!options.hasLongOption(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  options  =  currentOption.getOption(prefix);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  options  =  currentOption.getOption(prefix);	      Option    options    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  options  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  options  =  options.getOption(token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	options  =  options.getOption(token);	      Option    options    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  options.addOption(opt);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  options.addOption(opt);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	options.addOption(opt);	      options.hasOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  options.hasOption(opt);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  options.hasOption(opt);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	options.hasOption(opt);	      options.hasOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  if(options.hasNonOption(prefix)||  options.hasNonOption(opt))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasNonOption(prefix)||  options.hasNonOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasNonOption(prefix)||  options.hasNonOption(opt))  {	  if(options.hasLongOption(prefix)||    options.hasNonOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  if(options.hasLongOption(prefix)||  options.hasNonOption(token))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasLongOption(prefix)||  options.hasNonOption(token))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasLongOption(prefix)||  options.hasNonOption(token))  {	  if(options.hasLongOption(prefix)||    options.hasNonOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  if(options.hasLongOption(prefix)&&  options.hasNonOption(opt))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasLongOption(prefix)&&  options.hasNonOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasLongOption(prefix)&&  options.hasNonOption(opt))  {	  if(options.hasLongOption(prefix)||    options.hasNonOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  prefix);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  String  value  =  t.substring(i  +  1,  prefix);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	String  value  =  t.substring(i  +  1,  prefix);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  String  value  =  t.substring(i  +  2);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	String  value  =  t.substring(i  +  2);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  String  value  =  t.substring(i  +  3);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	String  value  =  t.substring(i  +  3);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  if(option.hasOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(option.hasOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(option.hasOption(prefix))  {	  if(options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  if(!options.hasOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(!options.hasOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(!options.hasOption(prefix))  {	  if(options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix,  token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  option  =  options.getOption(prefix,  token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  option  =  options.getOption(prefix,  token);	      Option    option    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  option  =  options.getOption(opt,  token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  option  =  options.getOption(opt,  token);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  cmd  =  options.getOption(prefix);  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  cmd  =  options.getOption(prefix);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  cmd  =  option.getOption(prefix);  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  cmd  =  option.getOption(prefix);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  if(prefix!=  null)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(prefix!=  null)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(prefix!=  null)  {  opt  =  token.substring(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  if(opt!=  null)  {  opt  =  prefix.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(opt!=  null)  {  opt  =  prefix.substring(i  +  1);  }  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(opt!=  null)  {  opt  =  prefix.substring(i  +  1);  }	      if(opt!=    null)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  if(options.hasOption(prefix)&&  options.hasOption(opt))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasOption(prefix)&&  options.hasOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasOption(prefix)&&  options.hasOption(opt))  {	  if(options.hasLongOption(prefix)||    options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  if(options.hasOption(opt)||  options.hasOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasOption(opt)||  options.hasOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasOption(opt)||  options.hasOption(prefix))  {	  if(options.hasLongOption(prefix)||    options.hasOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  option  =  currentOption.getOption(token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  option  =  currentOption.getOption(token);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  if(options.hasNonOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasNonOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasNonOption(prefix))  {	  if(options.hasLongOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  if(options.hasNonOption(opt)||  options.hasNonOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasNonOption(opt)||  options.hasNonOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasNonOption(opt)||  options.hasNonOption(prefix))  {	  if(options.hasLongOption(prefix)||    options.hasNonOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  options  =  options.getOption(opt);	      Option    options    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  if(opt.hasOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(opt.hasOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(opt.hasOption(prefix))  {	  if(options.hasOption(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  currentOption  =  options.getOption(token);	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  currentOption  =  options.getOption(opt);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  currentOption  =  options.getOption(opt);	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  if(option.hasOption(prefix))  {  opt  =  option;  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(option.hasOption(prefix))  {  opt  =  option;  break;  }  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(option.hasOption(prefix))  {  opt  =  option;  break;  }	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  if(option.hasOption(prefix))  {  opt  =  prefix;  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(option.hasOption(prefix))  {  opt  =  prefix;  break;  }  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(option.hasOption(prefix))  {  opt  =  prefix;  break;  }	      if(options.hasOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  if(opt  ==  null)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(opt  ==  null)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(opt  ==  null)  {  opt  =  token.substring(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  if(opt!=  null)  {  opt  =  token.trim();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(opt!=  null)  {  opt  =  token.trim();  }  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(opt!=  null)  {  opt  =  token.trim();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  Option  options  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  Option  options  =  options.getOption(t);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	Option  options  =  options.getOption(t);	      Option    options    =    options.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  opt  =  t.substring(i  +  1,  i);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  opt  =  t.substring(i  +  1,  i);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	opt  =  t.substring(i  +  1,  i);	      opt    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  String  value  =  t.substring(i  +  1,  i);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	String  value  =  t.substring(i  +  1,  i);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  String  value  =  t.substring(i  +  1,  token);  [BUGGY]    if  (options.hasLongOption(prefix))    {  {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	String  value  =  t.substring(i  +  1,  token);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  if(options.hasOption(opt)||  options.hasNonOption(prefix))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasOption(opt)||  options.hasNonOption(prefix))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasOption(opt)||  options.hasNonOption(prefix))  {	  if(options.hasLongOption(prefix)||    options.hasNonOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  if(options.hasOption(prefix)&&  options.hasNonOption(opt))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;  String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);    [BUGGY]  if(options.hasOption(prefix)&&  options.hasNonOption(opt))  {  [BUGGY]    {  opt  =  prefix;  break;  }  }  return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	if(options.hasOption(prefix)&&  options.hasNonOption(opt))  {	  if(options.hasLongOption(prefix)||    options.hasNonOption(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
