bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] int pos = token.indexOf("="); [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } [BUGGY] int pos = token.indexOf("="); [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } [BUGGY] [BUGGY] int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	
3	[BUG] [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); [BUGGY]  if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); [BUGGY] [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	add	
5	[BUG] [BUGGY] if (!options.getMatchingOptions(t).isEmpty()) { [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); [BUGGY] if (!options.getMatchingOptions(t).isEmpty())  { [BUGGY] {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; }  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	322	323	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); [BUGGY] [BUGGY] if (!options.getMatchingOptions(t).isEmpty())  { {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; }  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	322	323	1	add	
7	[BUG] [BUGGY] else if (getLongPrefix(token) != null && !token.startsWith("--")) { [FE] AssertionError [CONTEXT] } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } [BUGGY] else if (getLongPrefix(token) != null && !token.startsWith("--"))  { [BUGGY] {  return true; } return false; } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } [BUGGY] [BUGGY] else if (getLongPrefix(token) != null && !token.startsWith("--"))  { {  return true; } return false; } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	add	
9	[BUG] [BUGGY] return false; [FE] AssertionError [CONTEXT] {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; } [BUGGY] return false; [BUGGY] } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; } [BUGGY] [BUGGY] return false; } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	add	
11	[BUG] [BUGGY] String t = Util.stripLeadingHyphens(token); [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { [BUGGY] String t = Util.stripLeadingHyphens(token); [BUGGY]  int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	570	570	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { [BUGGY] [BUGGY] String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	570	570	1	add	
13	[BUG] [BUGGY] String opt = null; [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; [BUGGY] String opt = null; [BUGGY] for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } }  [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; [BUGGY] [BUGGY] String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } }  [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	add	
15	[BUG] [BUGGY] for (i = t.length() - 2; i > 1; i--) { [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; [BUGGY] for (i = t.length() - 2; i > 1; i--)  { [BUGGY] { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; [BUGGY] [BUGGY] for (i = t.length() - 2; i > 1; i--)  { { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	add	
17	[BUG] [BUGGY] String prefix = t.substring(0, i); [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { [BUGGY] String prefix = t.substring(0, i); [BUGGY] if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	576	576	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { [BUGGY] [BUGGY] String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	576	576	1	add	
19	[BUG] [BUGGY] if (options.hasLongOption(prefix)) { [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); [BUGGY] if (options.hasLongOption(prefix))   { [BUGGY] { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); [BUGGY] [BUGGY] if (options.hasLongOption(prefix))   { { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	add	
21	[BUG] [BUGGY] return opt; [FE] AssertionError [CONTEXT] for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } [BUGGY] return opt; [BUGGY] } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } [BUGGY] [BUGGY] return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	584	584	1	add	
24	[BUG] [BUGGY] return parse(options, arguments, null); [FE] AssertionError [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] return parse(options, arguments, null); [BUGGY] } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption Option currentOption List expectedOpts String currentToken String[] arguments  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	60	60	1	replace	
25	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, null); } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption Option currentOption List expectedOpts String currentToken String[] arguments  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	60	60	1	add	
26	[BUG] [BUGGY] return parse(options, arguments, properties, false); [FE] AssertionError [CONTEXT] public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException { [BUGGY] return parse(options, arguments, properties, false); [BUGGY] } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption Option currentOption List expectedOpts String currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	76	76	1	replace	
27	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, properties, false); } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption Option currentOption List expectedOpts String currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	76	76	1	add	
28	[BUG] [BUGGY] this.options = options; [FE] AssertionError [CONTEXT] { [BUGGY] this.options = options; [BUGGY] this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	replace	
29	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { [BUGGY] [BUGGY] this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	102	102	1	add	
30	[BUG] [BUGGY] this.stopAtNonOption = stopAtNonOption; [FE] AssertionError [CONTEXT] { this.options = options; [BUGGY] this.stopAtNonOption = stopAtNonOption; [BUGGY] skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); }  [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	replace	
31	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { this.options = options; [BUGGY] [BUGGY] this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); }  [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	103	103	1	add	
32	[BUG] [BUGGY] skipParsing = false; [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; [BUGGY] skipParsing = false; [BUGGY] currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	
33	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; [BUGGY] [BUGGY] skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	add	
34	[BUG] [BUGGY] currentOption = null; [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; [BUGGY] currentOption = null; [BUGGY] expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine();  [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	replace	
35	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; [BUGGY] [BUGGY] currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine();  [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	105	105	1	add	
36	[BUG] [BUGGY] expectedOpts = new ArrayList(options.getRequiredOptions()); [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; [BUGGY] expectedOpts = new ArrayList(options.getRequiredOptions()); [BUGGY]   for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); if (arguments != null) [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	replace	
37	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; [BUGGY] [BUGGY] expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); if (arguments != null) [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	106	106	1	add	
38	[BUG] [BUGGY] for (OptionGroup group : options.getOptionGroups()) { [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  [BUGGY] for (OptionGroup group : options.getOptionGroups())  { [BUGGY] { group.setSelected(null); } cmd = new CommandLine(); if (arguments != null) { for (String argument : arguments) { [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	109	110	1	replace	
39	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { this.options = options; this.stopAtNonOption = stopAtNonOption; skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  [BUGGY] [BUGGY] for (OptionGroup group : options.getOptionGroups())  { { group.setSelected(null); } cmd = new CommandLine(); if (arguments != null) { for (String argument : arguments) { [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	109	110	1	add	
40	[BUG] [BUGGY] cmd = new CommandLine(); [FE] AssertionError [CONTEXT] skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } [BUGGY] cmd = new CommandLine(); [BUGGY]  if (arguments != null) { for (String argument : arguments) { handleToken(argument); } }   [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	replace	
41	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] skipParsing = false; currentOption = null; expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } [BUGGY] [BUGGY] cmd = new CommandLine(); if (arguments != null) { for (String argument : arguments) { handleToken(argument); } }   [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	114	114	1	add	
42	[BUG] [BUGGY] if (arguments != null) { [FE] AssertionError [CONTEXT] expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); [BUGGY] if (arguments != null)  { [BUGGY] { for (String argument : arguments) { handleToken(argument); } }  checkRequiredArgs();  [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	replace	
43	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] expectedOpts = new ArrayList(options.getRequiredOptions());  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); [BUGGY] [BUGGY] if (arguments != null)  { { for (String argument : arguments) { handleToken(argument); } }  checkRequiredArgs();  [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	116	117	1	add	
44	[BUG] [BUGGY] for (String argument : arguments) { [FE] AssertionError [CONTEXT]  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); if (arguments != null) { [BUGGY] for (String argument : arguments)   { [BUGGY] { handleToken(argument); } }  checkRequiredArgs();  handleProperties(properties); [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	
45	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  for (OptionGroup group : options.getOptionGroups()) { group.setSelected(null); } cmd = new CommandLine(); if (arguments != null) { [BUGGY] [BUGGY] for (String argument : arguments)   { { handleToken(argument); } }  checkRequiredArgs();  handleProperties(properties); [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	add	
46	[BUG] [BUGGY] handleToken(argument); [FE] AssertionError [CONTEXT] if (arguments != null) { for (String argument : arguments) { [BUGGY] handleToken(argument); [BUGGY] } } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	replace	
47	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (arguments != null) { for (String argument : arguments) { [BUGGY] [BUGGY] handleToken(argument); } } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	120	120	1	add	
48	[BUG] [BUGGY] checkRequiredArgs(); [FE] AssertionError [CONTEXT] if (arguments != null) { for (String argument : arguments) { handleToken(argument); } }  [BUGGY] checkRequiredArgs(); [BUGGY]   handleProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	
49	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (arguments != null) { for (String argument : arguments) { handleToken(argument); } }  [BUGGY] [BUGGY] checkRequiredArgs();  handleProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	add	
50	[BUG] [BUGGY] handleProperties(properties); [FE] AssertionError [CONTEXT] for (String argument : arguments) { handleToken(argument); } }  checkRequiredArgs();  [BUGGY] handleProperties(properties); [BUGGY]  checkRequiredOptions(); return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	128	128	1	replace	
51	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] for (String argument : arguments) { handleToken(argument); } }  checkRequiredArgs();  [BUGGY] [BUGGY] handleProperties(properties); checkRequiredOptions(); return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	128	128	1	add	
52	[BUG] [BUGGY] checkRequiredOptions(); [FE] AssertionError [CONTEXT] handleToken(argument); } }  checkRequiredArgs();  handleProperties(properties); [BUGGY] checkRequiredOptions(); [BUGGY]  return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	replace	
53	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] handleToken(argument); } }  checkRequiredArgs();  handleProperties(properties); [BUGGY] [BUGGY] checkRequiredOptions(); return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	130	130	1	add	
54	[BUG] [BUGGY] return cmd; [FE] AssertionError [CONTEXT] }  checkRequiredArgs();  handleProperties(properties); checkRequiredOptions(); [BUGGY] return cmd; [BUGGY] } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	replace	
55	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] }  checkRequiredArgs();  handleProperties(properties); checkRequiredOptions(); [BUGGY] [BUGGY] return cmd; } [CLASS] DefaultParser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options CommandLine cmd boolean skipParsing stopAtNonOption OptionGroup group Option currentOption List expectedOpts String argument currentToken String[] arguments Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	132	132	1	add	
56	[BUG] [BUGGY] if (properties == null) { [FE] AssertionError [CONTEXT] { [BUGGY] if (properties == null)  { [BUGGY] { return; } for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (opt == null) [CLASS] DefaultParser [METHOD] handleProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Enumeration e OptionGroup group Option currentOption opt List expectedOpts String argument currentToken option value Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	
57	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { [BUGGY] [BUGGY] if (properties == null)  { { return; } for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (opt == null) [CLASS] DefaultParser [METHOD] handleProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Enumeration e OptionGroup group Option currentOption opt List expectedOpts String argument currentToken option value Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	add	
58	[BUG] [BUGGY] return; [FE] AssertionError [CONTEXT] { if (properties == null) { [BUGGY] return; [BUGGY] } for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (opt == null) { throw new UnrecognizedOptionException("Default option wasn't defined", option); [CLASS] DefaultParser [METHOD] handleProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Enumeration e OptionGroup group Option currentOption opt List expectedOpts String argument currentToken option value Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	replace	
59	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { if (properties == null) { [BUGGY] [BUGGY] return; } for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();) { String option = e.nextElement().toString(); Option opt = options.getOption(option); if (opt == null) { throw new UnrecognizedOptionException("Default option wasn't defined", option); [CLASS] DefaultParser [METHOD] handleProperties [RETURN_TYPE] void  Properties properties [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Enumeration e OptionGroup group Option currentOption opt List expectedOpts String argument currentToken option value Properties properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	144	144	1	add	
60	[BUG] [BUGGY] if (!expectedOpts.isEmpty()) { [FE] AssertionError [CONTEXT] private void checkRequiredOptions() throws MissingOptionException {  [BUGGY] if (!expectedOpts.isEmpty())  { [BUGGY] { throw new MissingOptionException(expectedOpts); } } [CLASS] DefaultParser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	replace	
61	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void checkRequiredOptions() throws MissingOptionException {  [BUGGY] [BUGGY] if (!expectedOpts.isEmpty())  { { throw new MissingOptionException(expectedOpts); } } [CLASS] DefaultParser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	197	198	1	add	
62	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] private void checkRequiredOptions() throws MissingOptionException {  if (!expectedOpts.isEmpty()) { throw new MissingOptionException(expectedOpts); } [BUGGY] } [BUGGY]  [CLASS] DefaultParser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	replace	
63	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void checkRequiredOptions() throws MissingOptionException {  if (!expectedOpts.isEmpty()) { throw new MissingOptionException(expectedOpts); } [BUGGY] [BUGGY] } [CLASS] DefaultParser [METHOD] checkRequiredOptions [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	201	201	1	add	
64	[BUG] [BUGGY] if (currentOption != null && currentOption.requiresArg()) { [FE] AssertionError [CONTEXT] private void checkRequiredArgs() throws ParseException { [BUGGY] if (currentOption != null && currentOption.requiresArg())  { [BUGGY] { throw new MissingArgumentException(currentOption); } } [CLASS] DefaultParser [METHOD] checkRequiredArgs [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	replace	
65	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void checkRequiredArgs() throws ParseException { [BUGGY] [BUGGY] if (currentOption != null && currentOption.requiresArg())  { { throw new MissingArgumentException(currentOption); } } [CLASS] DefaultParser [METHOD] checkRequiredArgs [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	209	210	1	add	
66	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] private void checkRequiredArgs() throws ParseException { if (currentOption != null && currentOption.requiresArg()) { throw new MissingArgumentException(currentOption); } [BUGGY] } [BUGGY]  [CLASS] DefaultParser [METHOD] checkRequiredArgs [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	213	213	1	replace	
67	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void checkRequiredArgs() throws ParseException { if (currentOption != null && currentOption.requiresArg()) { throw new MissingArgumentException(currentOption); } [BUGGY] [BUGGY] } [CLASS] DefaultParser [METHOD] checkRequiredArgs [RETURN_TYPE] void  [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	213	213	1	add	
68	[BUG] [BUGGY] currentToken = token; [FE] AssertionError [CONTEXT] { [BUGGY] currentToken = token; [BUGGY]  if (skipParsing) { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	223	223	1	replace	
69	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { [BUGGY] [BUGGY] currentToken = token; if (skipParsing) { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	223	223	1	add	
70	[BUG] [BUGGY] if (skipParsing) { [FE] AssertionError [CONTEXT] { currentToken = token; [BUGGY] if (skipParsing)  { [BUGGY] { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	225	226	1	replace	
71	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { currentToken = token; [BUGGY] [BUGGY] if (skipParsing)  { { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	225	226	1	add	
72	[BUG] [BUGGY] else if ("--".equals(token)) { [FE] AssertionError [CONTEXT] { currentToken = token; if (skipParsing) { cmd.addArg(token); } [BUGGY] else if ("--".equals(token))  { [BUGGY] { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	229	230	1	replace	
73	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { currentToken = token; if (skipParsing) { cmd.addArg(token); } [BUGGY] [BUGGY] else if ("--".equals(token))  { { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	229	230	1	add	
74	[BUG] [BUGGY] else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { [FE] AssertionError [CONTEXT] currentToken = token; if (skipParsing) { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } [BUGGY] else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))  { [BUGGY] { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	233	234	1	replace	
75	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] currentToken = token; if (skipParsing) { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } [BUGGY] [BUGGY] else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))  { { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	233	234	1	add	
76	[BUG] [BUGGY] currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); [FE] AssertionError [CONTEXT] if (skipParsing) { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { [BUGGY] currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); [BUGGY] } else if (token.startsWith("--")) { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); } else [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	replace	
77	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (skipParsing) { cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { [BUGGY] [BUGGY] currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); } else [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	235	235	1	add	
78	[BUG] [BUGGY] else if (token.startsWith("--")) { [FE] AssertionError [CONTEXT] cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } [BUGGY] else if (token.startsWith("--"))  { [BUGGY] { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); } else { handleUnknownToken(token); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	237	238	1	replace	
79	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] cmd.addArg(token); } else if ("--".equals(token)) { skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } [BUGGY] [BUGGY] else if (token.startsWith("--"))  { { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); } else { handleUnknownToken(token); [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	237	238	1	add	
80	[BUG] [BUGGY] else if (token.startsWith("-") && !"-".equals(token)) { [FE] AssertionError [CONTEXT] skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } [BUGGY] else if (token.startsWith("-") && !"-".equals(token))  { [BUGGY] { handleShortAndLongOption(token); } else { handleUnknownToken(token); } if (currentOption != null && !currentOption.acceptsArg()) { [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	241	242	1	replace	
81	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] skipParsing = true; } else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } [BUGGY] [BUGGY] else if (token.startsWith("-") && !"-".equals(token))  { { handleShortAndLongOption(token); } else { handleUnknownToken(token); } if (currentOption != null && !currentOption.acceptsArg()) { [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	241	242	1	add	
82	[BUG] [BUGGY] handleShortAndLongOption(token); [FE] AssertionError [CONTEXT] else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { [BUGGY] handleShortAndLongOption(token); [BUGGY] } else { handleUnknownToken(token); } if (currentOption != null && !currentOption.acceptsArg()) { currentOption = null; } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	243	243	1	replace	
83	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] else if (currentOption != null && currentOption.acceptsArg() && isArgument(token)) { currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token)); } else if (token.startsWith("--")) { handleLongOption(token); } else if (token.startsWith("-") && !"-".equals(token)) { [BUGGY] [BUGGY] handleShortAndLongOption(token); } else { handleUnknownToken(token); } if (currentOption != null && !currentOption.acceptsArg()) { currentOption = null; } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	243	243	1	add	
84	[BUG] [BUGGY] if (currentOption != null && !currentOption.acceptsArg()) { [FE] AssertionError [CONTEXT] } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); } else { handleUnknownToken(token); } [BUGGY] if (currentOption != null && !currentOption.acceptsArg())  { [BUGGY] { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	250	251	1	replace	
85	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } else if (token.startsWith("-") && !"-".equals(token)) { handleShortAndLongOption(token); } else { handleUnknownToken(token); } [BUGGY] [BUGGY] if (currentOption != null && !currentOption.acceptsArg())  { { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	250	251	1	add	
86	[BUG] [BUGGY] currentOption = null; [FE] AssertionError [CONTEXT] { handleShortAndLongOption(token); } else { handleUnknownToken(token); } if (currentOption != null && !currentOption.acceptsArg()) { [BUGGY] currentOption = null; [BUGGY] } } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	replace	
87	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { handleShortAndLongOption(token); } else { handleUnknownToken(token); } if (currentOption != null && !currentOption.acceptsArg()) { [BUGGY] [BUGGY] currentOption = null; } } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	252	252	1	add	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (currentOption != null && !currentOption.acceptsArg()) { currentOption = null; } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	254	254	1	replace	
89	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (currentOption != null && !currentOption.acceptsArg()) { currentOption = null; } [CLASS] DefaultParser [METHOD] handleToken [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	254	254	1	add	
90	[BUG] [BUGGY] return !isOption(token) || isNegativeNumber(token); [FE] AssertionError [CONTEXT] private boolean isArgument(String token) { [BUGGY] return !isOption(token) || isNegativeNumber(token); [BUGGY] } [CLASS] DefaultParser [METHOD] isArgument [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	263	263	1	replace	
91	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isArgument(String token) { [BUGGY] [BUGGY] return !isOption(token) || isNegativeNumber(token); } [CLASS] DefaultParser [METHOD] isArgument [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	263	263	1	add	
92	[BUG] [BUGGY] return isLongOption(token) || isShortOption(token); [FE] AssertionError [CONTEXT] private boolean isOption(String token) { [BUGGY] return isLongOption(token) || isShortOption(token); [BUGGY] } [CLASS] DefaultParser [METHOD] isOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	291	291	1	replace	
93	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isOption(String token) { [BUGGY] [BUGGY] return isLongOption(token) || isShortOption(token); } [CLASS] DefaultParser [METHOD] isOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	291	291	1	add	
94	[BUG] [BUGGY] return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2)); [FE] AssertionError [CONTEXT] private boolean isShortOption(String token) {  [BUGGY] return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2)); [BUGGY]   } [CLASS] DefaultParser [METHOD] isShortOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	302	302	1	replace	
95	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isShortOption(String token) {  [BUGGY] [BUGGY] return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));  } [CLASS] DefaultParser [METHOD] isShortOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	302	302	1	add	
96	[BUG] [BUGGY] if (!token.startsWith("-") || token.length() == 1) { [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { [BUGGY] if (!token.startsWith("-") || token.length() == 1)  { [BUGGY] { return false; } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	314	315	1	replace	
97	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private boolean isLongOption(String token) { [BUGGY] [BUGGY] if (!token.startsWith("-") || token.length() == 1)  { { return false; } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	314	315	1	add	
98	[BUG] [BUGGY] String t = Util.stripLeadingHyphens(token); [FE] AssertionError [CONTEXT] { [BUGGY] String t = Util.stripLeadingHyphens(token); [BUGGY]  int pos = t.indexOf('='); if (t.length() == 1) {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	473	473	1	replace	
99	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { [BUGGY] [BUGGY] String t = Util.stripLeadingHyphens(token); int pos = t.indexOf('='); if (t.length() == 1) {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	473	473	1	add	
100	[BUG] [BUGGY] int pos = t.indexOf('='); [FE] AssertionError [CONTEXT] { String t = Util.stripLeadingHyphens(token); [BUGGY] int pos = t.indexOf('='); [BUGGY]  if (t.length() == 1) {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else { [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	475	475	1	replace	
101	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { String t = Util.stripLeadingHyphens(token); [BUGGY] [BUGGY] int pos = t.indexOf('='); if (t.length() == 1) {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else { [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	475	475	1	add	
102	[BUG] [BUGGY] if (t.length() == 1) { [FE] AssertionError [CONTEXT] { String t = Util.stripLeadingHyphens(token); int pos = t.indexOf('='); [BUGGY] if (t.length() == 1)  { [BUGGY] {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else { handleUnknownToken(token); } [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	477	478	1	replace	
103	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { String t = Util.stripLeadingHyphens(token); int pos = t.indexOf('='); [BUGGY] [BUGGY] if (t.length() == 1)  { {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else { handleUnknownToken(token); } [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	477	478	1	add	
104	[BUG] [BUGGY] else if (pos == -1) { [FE] AssertionError [CONTEXT]  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else { handleUnknownToken(token); } } [BUGGY] else if (pos == -1)  { [BUGGY] {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else if (!options.getMatchingOptions(t).isEmpty()) {  handleLongOptionWithoutEqual(token); [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	489	490	1	replace	
105	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else { handleUnknownToken(token); } } [BUGGY] [BUGGY] else if (pos == -1)  { {  if (options.hasShortOption(t)) { handleOption(options.getOption(t)); } else if (!options.getMatchingOptions(t).isEmpty()) {  handleLongOptionWithoutEqual(token); [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	489	490	1	add	
106	[BUG] [BUGGY] if (options.hasShortOption(t)) { [FE] AssertionError [CONTEXT] else if (pos == -1) {  [BUGGY] if (options.hasShortOption(t))   { [BUGGY] { handleOption(options.getOption(t)); } else if (!options.getMatchingOptions(t).isEmpty()) {  handleLongOptionWithoutEqual(token); } else { [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	492	493	1	replace	
107	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] else if (pos == -1) {  [BUGGY] [BUGGY] if (options.hasShortOption(t))   { { handleOption(options.getOption(t)); } else if (!options.getMatchingOptions(t).isEmpty()) {  handleLongOptionWithoutEqual(token); } else { [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	492	493	1	add	
108	[BUG] [BUGGY] handleOption(options.getOption(t)); [FE] AssertionError [CONTEXT] else if (pos == -1) {  if (options.hasShortOption(t)) { [BUGGY] handleOption(options.getOption(t)); [BUGGY] } else if (!options.getMatchingOptions(t).isEmpty()) {  handleLongOptionWithoutEqual(token); } else {  String opt = getLongPrefix(t); [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	494	494	1	replace	
109	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] else if (pos == -1) {  if (options.hasShortOption(t)) { [BUGGY] [BUGGY] handleOption(options.getOption(t)); } else if (!options.getMatchingOptions(t).isEmpty()) {  handleLongOptionWithoutEqual(token); } else {  String opt = getLongPrefix(t); [CLASS] DefaultParser [METHOD] handleShortAndLongOption [RETURN_TYPE] void  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	494	494	1	add	
111	[BUG] [BUGGY] checkRequiredArgs(); [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  [BUGGY] checkRequiredArgs(); [BUGGY]  option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { currentOption = option; [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	601	601	1	replace	
112	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  [BUGGY] [BUGGY] checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { currentOption = option; [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	601	601	1	add	
113	[BUG] [BUGGY] option = (Option) option.clone(); [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  checkRequiredArgs(); [BUGGY] option = (Option) option.clone(); [BUGGY]  updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	603	603	1	replace	
114	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  checkRequiredArgs(); [BUGGY] [BUGGY] option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	603	603	1	add	
115	[BUG] [BUGGY] updateRequiredOptions(option); [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  checkRequiredArgs(); option = (Option) option.clone(); [BUGGY] updateRequiredOptions(option); [BUGGY]  cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else { currentOption = null; [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	605	605	1	replace	
116	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  checkRequiredArgs(); option = (Option) option.clone(); [BUGGY] [BUGGY] updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else { currentOption = null; [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	605	605	1	add	
117	[BUG] [BUGGY] cmd.addOption(option); [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); [BUGGY] cmd.addOption(option); [BUGGY]  if (option.hasArg()) { currentOption = option; } else { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	607	607	1	replace	
118	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void handleOption(Option option) throws ParseException {  checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); [BUGGY] [BUGGY] cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	607	607	1	add	
119	[BUG] [BUGGY] if (option.hasArg()) { [FE] AssertionError [CONTEXT] {  checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); [BUGGY] if (option.hasArg())  { [BUGGY] { currentOption = option; } else { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	609	610	1	replace	
120	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] {  checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); [BUGGY] [BUGGY] if (option.hasArg())  { { currentOption = option; } else { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	609	610	1	add	
121	[BUG] [BUGGY] currentOption = option; [FE] AssertionError [CONTEXT] checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { [BUGGY] currentOption = option; [BUGGY] } else { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	611	611	1	replace	
122	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] checkRequiredArgs(); option = (Option) option.clone(); updateRequiredOptions(option); cmd.addOption(option); if (option.hasArg()) { [BUGGY] [BUGGY] currentOption = option; } else { currentOption = null; } } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	611	611	1	add	
123	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else { currentOption = null; } [BUGGY] } [BUGGY]  [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	617	617	1	replace	
124	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] cmd.addOption(option); if (option.hasArg()) { currentOption = option; } else { currentOption = null; } [BUGGY] [BUGGY] } [CLASS] DefaultParser [METHOD] handleOption [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	617	617	1	add	
125	[BUG] [BUGGY] if (option.isRequired()) { [FE] AssertionError [CONTEXT] private void updateRequiredOptions(Option option) throws AlreadySelectedException { [BUGGY] if (option.isRequired())  { [BUGGY] { expectedOpts.remove(option.getKey()); }  if (options.getOptionGroup(option) != null) { OptionGroup group = options.getOptionGroup(option); if (group.isRequired()) [CLASS] DefaultParser [METHOD] updateRequiredOptions [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption OptionGroup group Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	626	627	1	replace	
126	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void updateRequiredOptions(Option option) throws AlreadySelectedException { [BUGGY] [BUGGY] if (option.isRequired())  { { expectedOpts.remove(option.getKey()); }  if (options.getOptionGroup(option) != null) { OptionGroup group = options.getOptionGroup(option); if (group.isRequired()) [CLASS] DefaultParser [METHOD] updateRequiredOptions [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption OptionGroup group Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	626	627	1	add	
127	[BUG] [BUGGY] if (options.getOptionGroup(option) != null) { [FE] AssertionError [CONTEXT] private void updateRequiredOptions(Option option) throws AlreadySelectedException { if (option.isRequired()) { expectedOpts.remove(option.getKey()); }  [BUGGY] if (options.getOptionGroup(option) != null)  { [BUGGY] { OptionGroup group = options.getOptionGroup(option); if (group.isRequired()) { expectedOpts.remove(group); } group.setSelected(option); } [CLASS] DefaultParser [METHOD] updateRequiredOptions [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption OptionGroup group Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	632	633	1	replace	
128	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void updateRequiredOptions(Option option) throws AlreadySelectedException { if (option.isRequired()) { expectedOpts.remove(option.getKey()); }  [BUGGY] [BUGGY] if (options.getOptionGroup(option) != null)  { { OptionGroup group = options.getOptionGroup(option); if (group.isRequired()) { expectedOpts.remove(group); } group.setSelected(option); } [CLASS] DefaultParser [METHOD] updateRequiredOptions [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption OptionGroup group Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	632	633	1	add	
129	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] { OptionGroup group = options.getOptionGroup(option); if (group.isRequired()) { expectedOpts.remove(group); } group.setSelected(option); } [BUGGY] } [BUGGY]  [CLASS] DefaultParser [METHOD] updateRequiredOptions [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption OptionGroup group Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	643	643	1	replace	
130	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] { OptionGroup group = options.getOptionGroup(option); if (group.isRequired()) { expectedOpts.remove(group); } group.setSelected(option); } [BUGGY] [BUGGY] } [CLASS] DefaultParser [METHOD] updateRequiredOptions [RETURN_TYPE] void  Option option [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption OptionGroup group Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	643	643	1	add	
