bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] int pos = token.indexOf("="); [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } [BUGGY] int pos = token.indexOf("="); [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } [BUGGY] [BUGGY] int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	319	319	1	add	
3	[BUG] [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); [BUGGY]  if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); [BUGGY] [BUGGY] String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	320	320	1	add	
5	[BUG] [BUGGY] if (!options.getMatchingOptions(t).isEmpty()) { [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); [BUGGY] if (!options.getMatchingOptions(t).isEmpty())  { [BUGGY] {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; }  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	322	323	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private boolean isLongOption(String token) { if (!token.startsWith("-") || token.length() == 1) { return false; } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); [BUGGY] [BUGGY] if (!options.getMatchingOptions(t).isEmpty())  { {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; }  [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	322	323	1	add	
7	[BUG] [BUGGY] else if (getLongPrefix(token) != null && !token.startsWith("--")) { [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } [BUGGY] else if (getLongPrefix(token) != null && !token.startsWith("--"))  { [BUGGY] {  return true; } return false; } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] } int pos = token.indexOf("="); String t = pos == -1 ? token : token.substring(0, pos); if (!options.getMatchingOptions(t).isEmpty()) {  return true; } [BUGGY] [BUGGY] else if (getLongPrefix(token) != null && !token.startsWith("--"))  { {  return true; } return false; } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	327	328	1	add	
9	[BUG] [BUGGY] return false; [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; } [BUGGY] return false; [BUGGY] } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] {  return true; } else if (getLongPrefix(token) != null && !token.startsWith("--")) {  return true; } [BUGGY] [BUGGY] return false; } [CLASS] DefaultParser [METHOD] isLongOption [RETURN_TYPE] boolean  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt List expectedOpts String argument currentToken option t token value int pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	add	
11	[BUG] [BUGGY] String t = Util.stripLeadingHyphens(token); [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { [BUGGY] String t = Util.stripLeadingHyphens(token); [BUGGY]  int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	570	570	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { [BUGGY] [BUGGY] String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	570	570	1	add	
13	[BUG] [BUGGY] String opt = null; [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; [BUGGY] String opt = null; [BUGGY] for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } }  [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; [BUGGY] [BUGGY] String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } }  [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	add	
15	[BUG] [BUGGY] for (i = t.length() - 2; i > 1; i--) { [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; [BUGGY] for (i = t.length() - 2; i > 1; i--)  { [BUGGY] { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; [BUGGY] [BUGGY] for (i = t.length() - 2; i > 1; i--)  { { String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	574	575	1	add	
17	[BUG] [BUGGY] String prefix = t.substring(0, i); [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { [BUGGY] String prefix = t.substring(0, i); [BUGGY] if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	576	576	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { [BUGGY] [BUGGY] String prefix = t.substring(0, i); if (options.hasLongOption(prefix)) { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	576	576	1	add	
19	[BUG] [BUGGY] if (options.hasLongOption(prefix)) { [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); [BUGGY] if (options.hasLongOption(prefix))   { [BUGGY] { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError shouldParseShortOptionWithoutValue [CONTEXT] private String getLongPrefix(String token) { String t = Util.stripLeadingHyphens(token); int i; String opt = null; for (i = t.length() - 2; i > 1; i--) { String prefix = t.substring(0, i); [BUGGY] [BUGGY] if (options.hasLongOption(prefix))   { { opt = prefix; break; } } return opt; } [CLASS] DefaultParser [METHOD] getLongPrefix [RETURN_TYPE] String  String token [VARIABLES] Options options CommandLine cmd boolean selected skipParsing stopAtNonOption Option currentOption opt option List expectedOpts matchingOpts String argument currentToken opt option prefix t token value int i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	577	578	1	add	
