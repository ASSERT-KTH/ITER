compilation error,573,replace,[CE] variable i might not have been initialized,String opt = null; ,String opt = t.substring(0, i);
compilation error,573,replace,[CE] variable i might not have been initialized,String opt = null; ,String opt = t.substring(i + 1);
compilation error,573,replace,[CE] cannot find symbol opt,String opt = null; , 
compilation error,327,replace,[CE] bad operand type String for unary operator ,else if (getLongPrefix(token) != null && !token.startsWith("--")) { ,else if(!getLongPrefix(token)!= null &&!token.startsWith("-")) {
compilation error,327,replace,[CE] illegal start of type,else if (getLongPrefix(token) != null && !token.startsWith("--")) { , 
compilation error,570,add,[CE] break outside switch or loop,,  if(options.hasLongOption(token)) { break; }
compilation error,570,add,[CE] illegal start of expression,,  if(options.hasLongOption(token)) { int i = options.size(); if(i > 0) { break; }
compilation error,570,add,[CE] cannot find symbol i,,  token = token.substring(0, i);
compilation error,570,add,[CE] illegal start of expression,,  if(options.hasLongOption(token)) { for(String argument : options.values()) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(options.hasLongOption(token)) { if(opt == null) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(opt.length() > 0) { if(options.hasLongOption(opt)) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(options.hasLongOption(token)) { if(opt.length() > 0) { break; }
compilation error,574,add,[CE] break outside switch or loop,,  if(options.hasLongOption(token)) { break; }
compilation error,574,add,[CE] break outside switch or loop,,  if(options.hasLongOption(t)) { break; }
compilation error,577,replace,[CE] cannot find symbol,if (options.hasLongOption(prefix)) { ,if(!options.hasLongPrefix(prefix)) {
compilation error,577,replace,[CE] cannot find symbol,if (options.hasLongOption(prefix)) { ,if(options.hasLongOption(prefix)|| options.hasLongValue(prefix)) {
compilation error,577,replace,[CE] no suitable method found for substring(int,String),if (options.hasLongOption(prefix)) { ,if(options.hasLongOption(prefix)&& prefix.equals(t.substring(0, opt))) {
compilation error,577,replace,[CE] illegal start of type,if (options.hasLongOption(prefix)) { , 
compilation error,576,replace,[CE] cannot find symbol,String prefix = t.substring(0, i); ,String prefix = t.substring(0, i).toLongBits(opt);
compilation error,576,replace,[CE] cannot find symbol prefix,String prefix = t.substring(0, i); , 
compilation error,570,replace,[CE] cannot find symbol value,String t = Util.stripLeadingHyphens(token); ,String t = Util.stripLeadingHyphens(value);
compilation error,570,replace,[CE] '.class' expected,String t = Util.stripLeadingHyphens(token); ,String t = Util.stripLeadingHyphens(boolean);
compilation error,570,replace,[CE] cannot find symbol op,String t = Util.stripLeadingHyphens(token); ,String t = Util.stripLeadingHyphens(op);
compilation error,322,replace,[CE] cannot find symbol,if (!options.getMatchingOptions(t).isEmpty()) { ,if(!options.getMatchingOptions(t).isLong()) {
compilation error,322,replace,[CE] illegal start of type,if (!options.getMatchingOptions(t).isEmpty()) { , 
compilation error,319,replace,[CE] cannot find symbol pos,int pos = token.indexOf("="); , 
compilation error,577,add,[CE] illegal start of expression,,  if(opt.length() > 0) { if(options.hasLongOption(prefix)) { break; }
compilation error,577,add,[CE] illegal start of expression,,  if(opt.length() > 0) { if(options.getLongOption(prefix)) { break; }
compilation error,577,add,[CE] illegal start of expression,,  if(opt.length() > 0) { if(options.hasLongOption(prefix)) { opt = null; }
compilation error,577,add,[CE] illegal start of expression,,  if(opt.length() > 0) { if(options.hasLongOption(prefix)) { opt = option; }
compilation error,320,replace,[CE] cannot find symbol length,String t = pos == -1 ? token : token.substring(0, pos); ,String t = token.length == -1? token : token.substring(0, pos);
compilation error,320,replace,[CE] incomparable types: String and int,String t = pos == -1 ? token : token.substring(0, pos); ,String t = token!= -1? token : token.substring(0, pos);
compilation error,320,replace,[CE] incomparable types: String and int,String t = pos == -1 ? token : token.substring(0, pos); ,String t = token == -1? token : token.substring(0, pos);
compilation error,576,add,[CE] illegal start of expression,,  if(options.hasLongOption(token)) { if(opt == null) { break; }
compilation error,576,add,[CE] illegal start of expression,,  if(options.hasLongOption(t)) { if(opt == null) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(options.hasLongOption(currentToken)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(options.hasLongOption(token)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(options.hasLongOption(currentOption)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(options.hasLongOption(currentToken)) { if(!currentToken.equals(t)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(options.hasLongOption(token)) { if(!currentOption.hasLongOption(t)) { break; }
compilation error,327,add,[CE] illegal start of expression,,  if(getLongPrefix(token)!= null &&!token.startsWith("-")) { if(!options.getMatchingOptions(t).isEmpty()) { return false; }
compilation error,327,add,[CE] illegal start of expression,,  if(getLongPrefix(token)!= null &&!token.startsWith("-")) { if(!options.getMatchingOptions(t).isEmpty()) { return true; }
compilation error,319,add,[CE] cannot find symbol pos,,  token = token.substring(0, pos);
compilation error,319,add,[CE] cannot find symbol pos,,  token = token.substring(pos + 1, token.length());
compilation error,319,add,[CE] cannot find symbol pos,,  token = token.substring(pos + 1);
compilation error,333,replace,[CE] ,return false; ,return pos < 0 &&(getLongPrefix(token)!= null &&!token.startsWith("-"))) { return false; }
compilation error,333,replace,[CE] ,return false; ,return pos < 0 &&(getLongPrefix(token)!= null &&!token.startsWith("-"))) { return true; }
compilation error,333,replace,[CE] ,return false; ,return pos < 0 &&(getLongPrefix(token)!= null &&!token.startsWith("-"))) { return false;
compilation error,322,add,[CE] no suitable method found for substring(int,String),,  token = token.substring(pos, t);
compilation error,322,add,[CE] no suitable method found for substring(int,String),,  token = token.substring(pos + 1, t);
compilation error,320,add,[CE] unclosed character literal,,  pos = token.indexOf('"+getLongPrefix());
compilation error,320,add,[CE] unclosed character literal,,  pos = token.indexOf('"+getLongValue());
compilation error,327,replace,[CE] cannot find symbol,else if (getLongPrefix(token) != null && !token.startsWith("--")) { ,else if(getLongOpt(token)!= null &&!token.startsWith("--")) {
compilation error,322,add,[CE] illegal start of expression,,  if(t!= null) { if(getLongPrefix(token)!= null) { return false; }
compilation error,322,add,[CE] illegal start of expression,,  if(t!= null) { if(getLongPrefix(token)!= null) { return true; }
compilation error,322,add,[CE] cannot find symbol,,  boolean stopAtNonOption = options.isAtNonOption(t);
compilation error,322,add,[CE] cannot find symbol,,  boolean stopAtNonOption = options.isLongOption(t);
compilation error,570,replace,[CE] cannot find symbol,String t = Util.stripLeadingHyphens(token); ,String t = Util.precedenceHyphens(token);
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(options.hasLongOption(t)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() == 0) { if(options.hasLongOption(t)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t!= null) { if(options.hasLongOption(t)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(!currentToken.equals(token)) { continue; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(options.hasLongOption(t)) { continue; }
compilation error,333,replace,[CE] ,return false; ,return(getLongValue(token)!= null &&!token.startsWith("-")) {
compilation error,333,replace,[CE] ,return false; ,return(getLongValue(token)!= null &&!token.startsWith("-"))) {
compilation error,577,add,[CE] illegal start of expression,,  if(prefix!= null) { if(opt.length() == 0) { continue; }
compilation error,577,add,[CE] illegal start of expression,,  if(prefix!= null) { if(options.hasLongOption(prefix)) { continue; }
compilation error,577,add,[CE] illegal start of expression,,  if(prefix!= null) { if(opt.equals(prefix)) { return opt; }
compilation error,577,add,[CE] illegal start of expression,,  if(prefix!= null) { if(opt.length() == 0) { return token; }
compilation error,577,add,[CE] illegal start of expression,,  if(prefix!= null) { if(options.hasLongOption(prefix)) { return opt; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals(token)) { if(getLongPrefix(token)!= null &&!token.startsWith("-")) { return true; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals(token)) { if(getLongPrefix(token)!= null &&!token.startsWith("-")) { return false; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.startsWith("--")) { if(getLongPrefix(token)!= null &&!token.startsWith("--")) { return true; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.startsWith("--")) { if(getLongPrefix(token)!= null &&!token.startsWith("--")) { return false; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals(token)) { if(getLongPrefix(token)!= null &&!token.startsWith("--")) { return true; }
compilation error,333,add,[CE] method addOption in class CommandLine cannot be applied to given types;,,  cmd.addOption(token);
compilation error,333,add,[CE] cannot find symbol opt,,  cmd.addOption(opt);
compilation error,333,add,[CE] cannot find symbol option,,  cmd.addOption(option);
compilation error,333,add,[CE] ';' expected,,  getLongValue(token));
compilation error,333,add,[CE] cannot find symbol opt,,  cmd.addOption(token, opt);
compilation error,319,replace,[CE] unclosed string literal,int pos = token.indexOf("="); ,int pos = token.indexOf("+" =");
compilation error,576,replace,[CE] cannot find symbol prefix,String prefix = t.substring(0, i); ,String prefix = t.substring(0, i).prefix;
compilation error,576,replace,[CE] ';' expected,String prefix = t.substring(0, i); ,String prefix = t.substring(0, i).prefix);
compilation error,322,replace,[CE] illegal start of expression,if (!options.getMatchingOptions(t).isEmpty()) { ,if(!options.getMatchingOptions(t)).isEmpty()) {
compilation error,322,replace,[CE] bad operand type List<String> for unary operator '!',if (!options.getMatchingOptions(t).isEmpty()) { ,if(!options.getMatchingOptions(t)) {
compilation error,576,add,[CE] illegal start of expression,,  if(options.hasLongOption(t)) { if(opt == null) { return opt; }
compilation error,576,add,[CE] illegal start of expression,,  if(options.hasLongOption(opt)) { if(opt == null) { return opt; }
compilation error,576,add,[CE] illegal start of expression,,  if(options.hasLongOption(opt)) { if(opt.length() == 0) { break; }
compilation error,576,add,[CE] illegal start of expression,,  if(options.hasLongOption(opt)) { if(opt == null) { break; }
compilation error,577,replace,[CE] cannot find symbol,if (options.hasLongOption(prefix)) { ,if(options.hasLongPrefix(prefix)) {
compilation error,319,add,[CE] cannot find symbol,,  boolean stopAtNonOption = isLong(token);
compilation error,319,add,[CE] cannot find symbol,,  boolean stopAtNonOption = isLongOpt(token);
compilation error,570,add,[CE] continue outside of loop,,  if(options.hasLongOption(token)) { continue; }
compilation error,570,add,[CE] method getLongOpt in class Option cannot be applied to given types;,,  boolean stopAtNonOption = isEnabled(Option.getLongOpt(token));
compilation error,570,add,[CE] cannot find symbol,,  boolean stopAtNonOption = isEnabled(Option.getLongValue());
compilation error,573,replace,[CE] variable i might not have been initialized,String opt = null; ,String opt =(t == null)? null : t.substring(i + 1);
compilation error,573,replace,[CE] variable i might not have been initialized,String opt = null; ,String opt =(t == null)? null : t.substring(i);
compilation error,574,add,[CE] illegal start of expression,,  if(options.hasLongOption(opt)) { if(opt.length() == 0) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(options.hasLongOption(t)) { if(opt == null) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(opt.length() > 0) { if(options.hasLongOption(opt)) { return opt; }
compilation error,574,add,[CE] illegal start of expression,,  if(options.hasLongOption(opt)) { if(opt == null) { break; }
compilation error,333,replace,[CE] ,return false; ,throw new IllegalStateException("") && token.token.startsWith("-")) { return false;
compilation error,333,replace,[CE] ,return false; ,throw new IllegalStateException("") && token.token.startsWith("-")) { return true;
compilation error,333,replace,[CE] bad operand types for binary operator ,return false; ,throw new IllegalStateException("") && token.contains("-" + token);
compilation error,322,add,[CE] method addOption in class CommandLine cannot be applied to given types;,,  cmd.addOption(t);
compilation error,322,add,[CE] cannot find symbol,,  pos = token.indexOf(":"+t.getSimpleName());
compilation error,319,add,[CE] variable token is already defined in method isLongOption(String),,  String token = token.substring(0, token.length() - 1);
compilation error,577,add,[CE] method addOption in class CommandLine cannot be applied to given types;,,  cmd.addOption(opt);
compilation error,577,add,[CE] illegal start of expression,,  if(opt.equals(prefix)) { if(options.hasLongOption(prefix)) { opt = null; }
compilation error,577,add,[CE] illegal start of expression,,  if(opt.equals(prefix)) { if(options.hasLongOption(prefix)) { break; }
compilation error,577,add,[CE] cannot find symbol,,  cmd.addLast(options.getLong(prefix));
compilation error,577,add,[CE] illegal start of expression,,  if(opt.getLong() == null) { String prefix = token.substring(i + 1); if(prefix.length() == 0) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { String prefix = token.substring(0, i); if(options.hasLongOption(prefix)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(value == null) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { String prefix = token.substring(0, i); if(options.getLongOption(prefix)) { break; }
compilation error,573,add,[CE] illegal start of expression,,  if(t.length() > 0) { if(!currentToken.equals(token)) { break; }
compilation error,570,add,[CE] cannot find symbol,,  boolean ignore =(options.hasLongOption(token)|| options.hasLongValue(token));
compilation error,576,add,[CE] method stripLeadingHyphens in class Util cannot be applied to given types;,,  opt = Util.stripLeadingHyphens(t, i);
compilation error,570,replace,[CE] bad operand types for binary operator '-',String t = Util.stripLeadingHyphens(token); ,String t = Util.stripLeadingHyphens(token)- 1;
compilation error,570,replace,[CE] method stripLeadingHyphens in class Util cannot be applied to given types;,String t = Util.stripLeadingHyphens(token); ,String t = Util.stripLeadingHyphens(token, options);
compilation error,574,add,[CE] illegal start of expression,,  if(t.length() > 0) { String prefix = token.substring(0, opt); if(options.hasLongOption(prefix)) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(t.length() > 0) { String prefix = token.substring(0, opt); if(options.hasLongOption(opt)) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(opt.length() > 0) { String prefix = token.substring(0, opt); if(options.hasLongOption(prefix)) { break; }
compilation error,574,add,[CE] illegal start of expression,,  if(t.length() > 0) { String prefix = token.substring(0, opt); if(prefix == null) { break; }
compilation error,322,replace,[CE] cannot find symbol,if (!options.getMatchingOptions(t).isEmpty()) { ,if(!options.getMatchingOptions(t).isSupported()) {
compilation error,573,replace,[CE] variable opt might not have been initialized,String opt = null; ,String opt =(opt == null)? null : opt;
compilation error,573,replace,[CE] variable opt might not have been initialized,String opt = null; ,String opt =(opt == null? null : opt.trim());
compilation error,333,add,[CE] method addOption in class CommandLine cannot be applied to given types;,,  cmd.addOption(token, getLongPrefix(token));
compilation error,333,add,[CE] cannot find symbol,,  cmd.addOption(token, getLongValue(token));
compilation error,333,add,[CE] method addOption in class CommandLine cannot be applied to given types;,,  cmd.addOption(token); currentOption = null;
compilation error,333,add,[CE] method addOption in class CommandLine cannot be applied to given types;,,  cmd.addOption(token, token);
compilation error,327,replace,[CE] cannot find symbol,else if (getLongPrefix(token) != null && !token.startsWith("--")) { ,else if(getLongOpt(token)!= null &&!token.startsWith("-")) {
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals("-")) { if(getLongOpt(token)!= null &&!options.getMatchingOptions(t).isEmpty()) { return false; }
compilation error,327,add,[CE] illegal start of expression,,  if(getLongOpt(token)!= null) { if(!options.getMatchingOptions(t).isEmpty()) { return false; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals("-")) { if(getLongPrefix(token)!= null &&!options.getMatchingOptions(t).isEmpty()) { return false; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals("-")) { if(getLongOpt(token)!= null &&!options.getMatchingOptions(t).isEmpty()) { return true; }
compilation error,327,add,[CE] illegal start of expression,,  if(t.equals("-")) { if(getLongPrefix(token)!= null &&!options.getMatchingOptions(t).isEmpty()) { return true; }
compilation error,577,replace,[CE] cannot find symbol,if (options.hasLongOption(prefix)) { ,if(options.hasLongOption(prefix)||(options.hasLongValue(prefix))) {
