bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  skipParsing  =  true;  [CE]  cannot  find  symbol  optionGroups  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipParsing  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  true;	skipParsing  =  false;  	non-compiled	[CE]  cannot  find  symbol  optionGroups	32	None	replace
2	[BUG]  [BUGGY]  skippeParsing  =  true;  [CE]  cannot  find  symbol  optionGroups  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skippeParsing  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippeParsing  =  true;	skipParsing  =  false;  	non-compiled	[CE]  cannot  find  symbol  optionGroups	32	None	replace
3	[BUG]  [BUGGY]  skipParsing  =  null;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipParsing  =  null;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  null;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	  	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
5	[BUG]  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;		non-compiled	[CE]  illegal  start  of  expression	33	None	add
6	[BUG]  [BUGGY]    Option  currentOption  =  options.getRequiredOption();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Option  currentOption  =  options.getRequiredOption();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    Option  currentOption  =  options.getRequiredOption();		non-compiled	[CE]  illegal  start  of  expression	33	None	add
7	[BUG]  [BUGGY]    Option  currentOption  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Option  currentOption  =  options.getRequiredOptions();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    Option  currentOption  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  expression	33	None	add
8	[BUG]  [BUGGY]    Option  currentToken  =  options.getRequiredOption();  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Option  currentToken  =  options.getRequiredOption();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    Option  currentToken  =  options.getRequiredOption();		non-compiled	[CE]  cannot  find  symbol	33	None	add
9	[BUG]  [BUGGY]    Option  currentOption  =  options.getSelectedOption();  [CE]  cannot  find  symbol  [FE]            AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Option  currentOption  =  options.getSelectedOption();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    Option  currentOption  =  options.getSelectedOption();		non-compiled	[CE]  cannot  find  symbol	33	None	add
10	[BUG]  [BUGGY]    Options  currentOption  =  options.getRequiredOptions();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Options  currentOption  =  options.getRequiredOptions();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    Options  currentOption  =  options.getRequiredOptions();		non-compiled	[CE]  illegal  start  of  expression	33	None	add
11	[BUG]  [BUGGY]    Option  currentOption  =  options.getRequiredOption(arguments);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    Option  currentOption  =  options.getRequiredOption(arguments);  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    Option  currentOption  =  options.getRequiredOption(arguments);		non-compiled	[CE]  illegal  start  of  expression	33	None	add
12	[BUG]  [BUGGY]    OptionGroup  group  =  options.getGroups();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    OptionGroup  group  =  options.getGroups();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    OptionGroup  group  =  options.getGroups();		non-compiled	[CE]  illegal  start  of  expression	33	None	add
13	[BUG]  [BUGGY]    OptionGroup  group  =  options.getGroup();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]    OptionGroup  group  =  options.getGroup();  [BUGGY]  skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	    OptionGroup  group  =  options.getGroup();		non-compiled	[CE]  illegal  start  of  expression	33	None	add
14	[BUG]  [BUGGY]  skippingParsing  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]  skippingParsing  =  true;  [BUGGY]  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippingParsing  =  true;	skipParsing  =  false;  	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
