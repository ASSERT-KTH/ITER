bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOption());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOption());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getSelectedOption());	  OptionGroup    group    =    options.getGroup(options.getOptionGroups());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
2	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options);	  OptionGroup    group    =    options.getGroup(options.getOptionGroups());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
3	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  arguments;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  arguments;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  arguments;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    argument;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
4	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  currentOption;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  currentOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  currentOption;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    argument;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
5	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  skipParsing);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  skipParsing);	  Option    currentOption    =    options.getRequiredOption(arguments,    expectedOpts);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
6	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  0);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  0);	  Option    currentOption    =    options.getRequiredOption(arguments,    expectedOpts);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(arguments,    expectedOpts);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
8	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  true);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  true);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  true);	  Option    currentOption    =    options.getRequiredOption(arguments,    expectedOpts);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
9	[BUG]  [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption(argument);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getImplicitRequiredOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
10	[BUG]  [BUGGY]  Option  currentOption  =  options.getPreparedOption(argument);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getPreparedOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getPreparedOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
11	[BUG]  [BUGGY]  parsing  =  true;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  parsing  =  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	parsing  =  true;	  skippeParsing    =    false;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  this.options.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  this.options.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  this.options.getSelectedOption();	  Option    currentOption    =    option.getSelectedOption();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
13	[BUG]  [BUGGY]  Option  currentOption  =  _options.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  _options.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  _options.getSelectedOption();	  Option    currentOption    =    option.getSelectedOption();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
14	[BUG]  [BUGGY]  options  =  options.getRequiredOptions();  this.stopAtNonOption  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options  =  options.getRequiredOptions();  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	options  =  options.getRequiredOptions();  this.stopAtNonOption  =  stopAtNonOption;	  if(options.getRequiredOptions()!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(null);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(false,  false);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(false,  false);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(false,  false);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
17	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  this.options  =  options;  this.stopAtNonOption  =  null;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  this.options  =  options;  this.stopAtNonOption  =  null;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(!stopAtNonOption)  {  this.options  =  options;  this.stopAtNonOption  =  null;  }	  if(!stopAtNonOption)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
18	[BUG]  [BUGGY]  skiingppingParsing  =  true;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skiingppingParsing  =  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skiingppingParsing  =  true;	  skiingppingParsing    =    false;    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
19	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(this.skipParsing);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(this.skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(this.skipParsing);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
20	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(false);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
21	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(true);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
22	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;	  skipParsing    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
23	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  stopAtNonOption  +  1;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  stopAtNonOption  +  1;	  skipParsing    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
25	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  skipParsing);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  skipParsing);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options,  options.getRequiredOption();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options,  options.getRequiredOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options,  options.getRequiredOption();	  Option    currentOption    =    options,    options.getSelectedOption();    	non-compiled	[CE]  ';'  expected	26	None	replace
27	[BUG]  [BUGGY]  Option  currentOption  =  options,  options.getToken();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options,  options.getToken();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options,  options.getToken();	  Option    currentOption    =    options,    options.getSelectedOption();    	non-compiled	[CE]  ';'  expected	26	None	replace
28	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
29	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
30	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  skipParsing);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  skipParsing);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
31	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  0);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  0);	  Option    currentOption    =    options.getRequiredOption(argument);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
33	[BUG]  [BUGGY]  options  =  null;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options  =  null;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	options  =  null;  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
34	[BUG]  [BUGGY]  options  =  new  Options();  this.stopAtNonOption  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options  =  new  Options();  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	options  =  new  Options();  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
35	[BUG]  [BUGGY]  Option  currentToken  =  option.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  option.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  option.getSelectedOption();	  Option    currentToken    =    option.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
36	[BUG]  [BUGGY]  Option  currentToken  =  option.getImplicitRequiredOption();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  option.getImplicitRequiredOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  option.getImplicitRequiredOption();	  Option    currentToken    =    option.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
37	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  options);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  options);	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
38	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptions());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getSelectedOptions());	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
39	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions()  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions()  +  1);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getRequiredOptions()  +  1);	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
40	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  stopAtNonOption;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    option;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
41	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.stopAtNonOption;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    option;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getGroup(currentToken);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  currentOption.getGroup(currentToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  currentOption.getGroup(currentToken);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
43	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getGroup(options);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  currentOption.getGroup(options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  currentOption.getGroup(options);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
44	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(),  this.stopAtNonOption);	  Option    currentToken    =    options.getRequiredOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.skipParsing);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(),  this.skipParsing);	  Option    currentToken    =    options.getRequiredOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  arguments);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  arguments);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(),  arguments);	  Option    currentToken    =    options.getRequiredOption(),    stopAtNonOption);    	non-compiled	[CE]  ';'  expected	10	None	replace
47	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.options);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(),  this.options);	  Option    currentToken    =    options.getRequiredOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  this;  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  this;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(stopAtNonOption)  {  skipParsing  =  this;  }	  skipParsing    =    this;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
49	[BUG]  [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  null;  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(stopAtNonOption)  {  skipParsing  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(stopAtNonOption)  {  skipParsing  =  null;  }	  skipParsing    =    this;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
50	[BUG]  [BUGGY]  this.options  =  options;  this.stopAtNonOption  =  StopAtNonOption;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.options  =  options;  this.stopAtNonOption  =  StopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.options  =  options;  this.stopAtNonOption  =  StopAtNonOption;	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
51	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  this.stopAtNonOption);	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.skipParsing);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.skipParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  this.skipParsing);	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.options);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  this.options);	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(false,  cmd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(false,  cmd);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(false,  cmd);	  OptionGroup    group    =    options.getGroup(false);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
55	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  this.options.getRequiredOption()  :  null;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  this.options.getRequiredOption()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  this.options.getRequiredOption()  :  null;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    null;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
56	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  option.getRequiredOption()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  option.getRequiredOption()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  option.getRequiredOption()  :  null;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    null;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
57	[BUG]  [BUGGY]  Option  currentToken  =  option.hasRequiredOption()?  options.getRequiredOption()  :  null;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  option.hasRequiredOption()?  options.getRequiredOption()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  option.hasRequiredOption()?  options.getRequiredOption()  :  null;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    null;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
58	[BUG]  [BUGGY]  This.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  This.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	This.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
59	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  this.stopAtNonOption  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  options  =  options.getOptions();  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  options  =  options.getOptions();  this.stopAtNonOption  =  stopAtNonOption;	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
60	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]);	  Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
61	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[1]);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[1]);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[1]);	  Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
62	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
63	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  null);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  null);	  Option    currentOption    =    options.getRequiredOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
64	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  option);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  option);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  option);	  Option    currentOption    =    options.getRequiredOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
65	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getToken();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  this.options.getToken();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  this.options.getToken();	  Option    currentToken    =    options.getToken();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
66	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getToken(),  stopAtNonOption;	  Option    currentToken    =    options.getToken();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
67	[BUG]  [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getToken(),  stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getToken(),  stopAtNonOption);	  Option    currentToken    =    options.getToken();    	non-compiled	[CE]  ';'  expected	45	None	replace
68	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.stopAtNonOption;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  this.stopAtNonOption;	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
69	[BUG]  [BUGGY]  Option  currentOption  =  option.getSelectedOption(),  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  option.getSelectedOption(),  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  option.getSelectedOption(),  stopAtNonOption;	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
70	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  this.options.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  this.options.getSelectedOption();	  Option    currentToken    =    this.options.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
71	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getRequiredOption(argument);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  this.options.getRequiredOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  this.options.getRequiredOption(argument);	  Option    currentToken    =    this.options.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
72	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroups();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getOptionGroups();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getOptionGroups();	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
73	[BUG]  [BUGGY]  Option  group  =  options.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getSelectedOption();	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
74	[BUG]  [BUGGY]  Option  group  =  options.getGroups()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getGroups()  +  1;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getGroups()  +  1;	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
75	[BUG]  [BUGGY]  options.setSelected(options.getSelectedOption());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options.setSelected(options.getSelectedOption());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	options.setSelected(options.getSelectedOption());	  options    currentOption    =    options.getSelectedOption();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
76	[BUG]  [BUGGY]  skippeParsing  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  =  stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippeParsing  =  stopAtNonOption;	  skippeParsing    =    null;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
77	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(!stopAtNonOption)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(!stopAtNonOption)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }	  this.options    =    properties;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
78	[BUG]  [BUGGY]  skippingParsing  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippingParsing  =  stopAtNonOption;	  skippingParsing    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
79	[BUG]  [BUGGY]  skippingParsing  =  skipParsing?  null  :  skipParsing;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  skipParsing?  null  :  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippingParsing  =  skipParsing?  null  :  skipParsing;	  skippingParsing    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
80	[BUG]  [BUGGY]  skippingParsing  =  skipParsing;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippingParsing  =  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippingParsing  =  skipParsing;	  skippingParsing    =    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
81	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
82	[BUG]  [BUGGY]  OptionGroup  group  =  arguments.getGroup(argument);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  arguments.getGroup(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  arguments.getGroup(argument);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
83	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  this.stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  this.stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(argument,  this.stopAtNonOption);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
84	[BUG]  [BUGGY]  this.stopAtNonOption  =  null;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.stopAtNonOption  =  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.stopAtNonOption  =  null;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
85	[BUG]  [BUGGY]  this.stopAtNonOption  =  StopAtNonOption;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.stopAtNonOption  =  StopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.stopAtNonOption  =  StopAtNonOption;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
86	[BUG]  [BUGGY]  skipParsing  = " ";  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  = " ";  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  = " ";	  skipParsing    =    this;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
87	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  0);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  0);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
88	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  blockAtNonOption;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  blockAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  blockAtNonOption;	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
89	[BUG]  [BUGGY]  Option  group  =  options.getGroup(true);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getGroup(true);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getGroup(true);	  OptionGroup    group    =    options.getGroup(false);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
90	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  null);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
91	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptionGroups());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptionGroups());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getSelectedOptionGroups());	  OptionGroup    group    =    options.getGroup(options.getOptionGroups());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
92	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options.getRequiredOptions());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options.getRequiredOptions());	  OptionGroup    group    =    options.getGroup(options.getOptionGroups());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
93	[BUG]  [BUGGY]  skiingppingParsing  =  null;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skiingppingParsing  =  null;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skiingppingParsing  =  null;	  skiingppingParsing    =    false;    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
94	[BUG]  [BUGGY]  Option  currentToken  =  option.getRequiredOption(argument);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  option.getRequiredOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  option.getRequiredOption(argument);	  Option    currentToken    =    option.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
95	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(argument);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroups(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroups(argument);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
96	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argumentOpts);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(argumentOpts);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(argumentOpts);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
97	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  null);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(argument,  null);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
98	[BUG]  [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().length  >  0;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().length  >  0;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().length  >  0;	  skipParsing    =    this.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
99	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  option.getOptionGroups();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  option.getOptionGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
100	[BUG]  [BUGGY]  Option  group  =  options.getGroup(options.getRequiredOptions());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getGroup(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getGroup(options.getRequiredOptions());	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
101	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options.getRequiredOptions());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getOptionGroup(options.getRequiredOptions());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getOptionGroup(options.getRequiredOptions());	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  option  =  options.getOptionGroup();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  option  =  options.getOptionGroup();	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
103	[BUG]  [BUGGY]  Option  currentToken  =  option.getToken();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  option.getToken();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  option.getToken();	  Option    currentToken    =    options.getToken();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
104	[BUG]  [BUGGY]  Option  currentToken  =  options.selectToken(argument);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.selectToken(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.selectToken(argument);	  Option    currentToken    =    options.getToken();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
105	[BUG]  [BUGGY]  Option  currentOption  =  optionGroup.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  optionGroup.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  optionGroup.getSelectedOption();	  Option    currentOption    =    option.getSelectedOption();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
106	[BUG]  [BUGGY]  options  =  option.getSelectedOption();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options  =  option.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	options  =  option.getSelectedOption();	  Option    currentOption    =    option.getSelectedOption();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
107	[BUG]  [BUGGY]  Option  currentToken  =  options.isRequiredOption()?  options.getRequiredOption()  :  null;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.isRequiredOption()?  options.getRequiredOption()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.isRequiredOption()?  options.getRequiredOption()  :  null;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    null;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
108	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption()?  options.getRequiredOption()  :  null;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption()?  options.getRequiredOption()  :  null;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption()?  options.getRequiredOption()  :  null;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    null;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
109	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
110	[BUG]  [BUGGY]  Option  currentToken  =  this.options.getOption(argument);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  this.options.getOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  this.options.getOption(argument);	  Option    currentToken    =    this.options.getRequiredOption();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
111	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
112	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(argument);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
113	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(true,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(true,  false);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(true,  false);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
114	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(options!=  null)  {  this.options  =  properties;  this.stopAtNonOption  =  stopAtNonOption;  }	  this.options    =    properties;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
115	[BUG]  [BUGGY]  this.options  =  arguments;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.options  =  arguments;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.options  =  arguments;  this.stopAtNonOption  =  stopAtNonOption;	  this.options    =    properties;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
116	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  null);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  expectedOpts,  null);	  Option    currentOption    =    options.getRequiredOption(arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
117	[BUG]  [BUGGY]  Option  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  Options  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Options  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Options  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  Option  option  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  option  =  options;  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  option  =  options;  this.stopAtNonOption  =  stopAtNonOption;	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
120	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.stopAtNonOption  =  stopAtNonOption?  null  :  stopAtNonOption;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
121	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.stopAtNonOption  =  stopAtNonOption  &&  options.getRequiredOptions().length  >  0;	  this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
122	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.argument;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.argument;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.argument;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    argument;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
123	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.option;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.option;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.option;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    option;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
124	[BUG]  [BUGGY]  skippeParsing  =  skipParsing;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  =  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippeParsing  =  skipParsing;	  skippeParsing    =    null;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
125	[BUG]  [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  option.getOptionGroup();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  option.getOptionGroup();	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
126	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getOptionGroup();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getOptionGroup();	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
127	[BUG]  [BUGGY]  options  currentOption  =  options.getOption();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  options  currentOption  =  options.getOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	options  currentOption  =  options.getOption();	  options    currentOption    =    options.getSelectedOption();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
128	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  argument);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(),  argument);	  Option    currentToken    =    options.getRequiredOption(),    stopAtNonOption);    	non-compiled	[CE]  ';'  expected	10	None	replace
129	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.paramParsing);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(),  this.paramParsing);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.getRequiredOption(),  this.paramParsing);	  Option    currentToken    =    options.getRequiredOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
130	[BUG]  [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.options;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.options;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentToken  =  options.hasRequiredOption()?  options.getRequiredOption()  :  this.options;	  Option    currentToken    =    options.hasRequiredOption()?    options.getRequiredOption()    :    option;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
131	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  arguments);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  arguments);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  arguments);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
132	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.defaultToken);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  this.defaultToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  this.defaultToken);	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
133	[BUG]  [BUGGY]  OptionGroup  group  =  arguments.getGroup(options);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  arguments.getGroup(options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  arguments.getGroup(options);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
134	[BUG]  [BUGGY]  if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	if(options!=  null)  {  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
135	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getOptionGroup(argument);	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
136	[BUG]  [BUGGY]  Option  group  =  options.getGroup(argument);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  group  =  options.getGroup(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  group  =  options.getGroup(argument);	  Option    group    =    options.getGroups();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
137	[BUG]  [BUGGY]  skipParsing  =  stopAtNonOption  ||  this.skipParsing.equals(stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  stopAtNonOption  ||  this.skipParsing.equals(stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  stopAtNonOption  ||  this.skipParsing.equals(stopAtNonOption);	  skipParsing    =    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
138	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getArgumentOpts());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getArgumentOpts());  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(options.getArgumentOpts());	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
139	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  option;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(),  option;  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getSelectedOption(),  option;	  Option    currentOption    =    options.getSelectedOption(),    stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
140	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  argument);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  argument);	  Option    currentOption    =    options.getRequiredOption(arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
141	[BUG]  [BUGGY]  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
142	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  this.stopAtNonOption);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  this.stopAtNonOption);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  this.stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
143	[BUG]  [BUGGY]  Options  currentOption  =  options.getSelectedOption();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Options  currentOption  =  options.getSelectedOption();  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Options  currentOption  =  options.getSelectedOption();	  options    currentOption    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
144	[BUG]  [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption(currentToken);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getImplicitRequiredOption(currentToken);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
145	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getGroup(argument);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  currentOption.getGroup(argument);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  currentOption.getGroup(argument);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
146	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argumentation);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getGroup(argumentation);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getGroup(argumentation);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
147	[BUG]  [BUGGY]  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  }	  if(options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
148	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
149	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(this.options);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(this.options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroup(this.options);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
150	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(options,  arguments);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(options,  arguments);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	Option  currentOption  =  options.getRequiredOption(options,  arguments);	  Option    currentOption    =    options.getRequiredOption(options);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
151	[BUG]  [BUGGY]  skippeParsing  =  this;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skippeParsing  =  this;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skippeParsing  =  this;	  skippeParsing    =    null;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
152	[BUG]  [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().size()  >  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().size()  >  1;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	skipParsing  =  this.stopAtNonOption  &&  this.options.getRequiredOptions().size()  >  1;	  skipParsing    =    this.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
153	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups(options);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;      [BUGGY]  OptionGroup  group  =  options.getOptionGroups(options);  [BUGGY]      skipParsing  =  false;  currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	104	104	1	replace	OptionGroup  group  =  options.getOptionGroups(options);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
