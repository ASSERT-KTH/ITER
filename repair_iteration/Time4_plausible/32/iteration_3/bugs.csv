bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  types,  iFieldIndex);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  types,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  types,  iFieldIndex);	  iPartial    =    parsePartial(chronology,    values,    iFieldIndex);    	non-compiled	[CE]  	13	None	replace
2	[BUG]  [BUGGY]  iPartial  =  partial.parsePartial(chronology,  values);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  partial.parsePartial(chronology,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  partial.parsePartial(chronology,  values);	  iPartial    =    parser.parsePartial(chronology,    values);    	non-compiled	[CE]  	2	None	replace
3	[BUG]  [BUGGY]  iPartial  =  parser.parsePartial(chronology,  types);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parser.parsePartial(chronology,  types);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parser.parsePartial(chronology,  types);	  iPartial    =    parser.parsePartial(chronology,    values);    	non-compiled	[CE]  	2	None	replace
4	[BUG]  [BUGGY]  iPartial  =  parsePartial(partial);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(partial);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(partial);	  iPartial    =    parsePartial(chronology);    	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  iValues  =  values  ==  1?  values[0]  :  0;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values  ==  1?  values[0]  :  0;  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values  ==  1?  values[0]  :  0;	  iValues    =    values    ==    1?    values[0]    :    values;    	non-compiled	[CE]  	33	None	replace
6	[BUG]  [BUGGY]  iValues  =  values  ==  1?  values[0]  :  values[1];  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values  ==  1?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values  ==  1?  values[0]  :  values[1];	  iValues    =    values    ==    1?    values[0]    :    values;    	non-compiled	[CE]  	33	None	replace
7	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  values,  types,  values);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  values,  types,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  values,  types,  values);	  iPartial    =    parseChronology(chronology,    types,    values,    iValues);    	non-compiled	[CE]  	29	None	replace
8	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  values,  iTypes);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  values,  iTypes);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  values,  iTypes);	  iPartial    =    parseChronology(chronology,    types,    iTypes);    	non-compiled	[CE]  	25	None	replace
9	[BUG]  [BUGGY]  iPartial  =  chronology.parsePartial(partial);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  chronology.parsePartial(partial);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  chronology.parsePartial(partial);	  iPartial    =    partial.parsePartial(chronology);    	non-compiled	[CE]  	1	None	replace
10	[BUG]  [BUGGY]  iPartial  =  partial.parsePartial(this,  values);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  partial.parsePartial(this,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  partial.parsePartial(this,  values);	  iPartial    =    partial.parsePartial(chronology);    	non-compiled	[CE]  	1	None	replace
11	[BUG]  [BUGGY]  iValues  =  values!=  1?  values[0]  :  values[1];  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values!=  1?  values[0]  :  values[1];  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values!=  1?  values[0]  :  values[1];	  iValues    =    values    <    <    1?    values[0]    :    values[1];    	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  iPartial  =  partial.withZone();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  partial.withZone();  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  partial.withZone();	  iPartial    =    partial.withUTC();    	non-compiled	[CE]  	11	None	replace
13	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  values,  iTypes);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  values,  iTypes);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  values,  iTypes);	  iPartial    =    parsePartial(chronology,    types,    iTypes);    	non-compiled	[CE]  	21	None	replace
14	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  values,  types);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  values,  types);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  values,  types);	  iPartial    =    parsePartial(chronology,    values,    iValues);    	non-compiled	[CE]  	22	None	replace
15	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  types,  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  types,  null);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  types,  null);	  iPartial    =    parseChronology(chronology,    values,    null);    	non-compiled	[CE]  	32	None	replace
16	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  types,  values,  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  types,  values,  null);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  types,  values,  null);	  iPartial    =    parseChronology(chronology,    values,    null);    	non-compiled	[CE]  	32	None	replace
17	[BUG]  [BUGGY]  iValues  =  values.length  -  2;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values.length  -  2;  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values.length  -  2;	  iValues    =    values.length    -    1;    	non-compiled	[CE]  	3	None	replace
18	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  types,  iFieldIndex);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  types,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  types,  iFieldIndex);	  iPartial    =    parseChronology(chronology,    values,    iFieldIndex);    	non-compiled	[CE]  	19	None	replace
19	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  values,  types);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  values,  types);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  values,  types);	  iPartial    =    parseChronology(chronology,    types,    values,    iTypes);    	non-compiled	[CE]  	30	None	replace
20	[BUG]  [BUGGY]  iPartial  =  partial.parseChronology(chronology,  types);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  partial.parseChronology(chronology,  types);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  partial.parseChronology(chronology,  types);	  iPartial    =    partial.parseChronology(chronology,    values);    	non-compiled	[CE]  	17	None	replace
21	[BUG]  [BUGGY]  iPartial  =  chronology.parseChronology(partial,  values);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  chronology.parseChronology(partial,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  chronology.parseChronology(partial,  values);	  iPartial    =    partial.parseChronology(chronology,    values);    	non-compiled	[CE]  	17	None	replace
22	[BUG]  [BUGGY]  iPartial  =  getPartialInstance();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  getPartialInstance();  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  getPartialInstance();	  iPartial    =    getPartial();    	non-compiled	[CE]  	20	None	replace
23	[BUG]  [BUGGY]  iValues  =  values.toArray(iValues,  values.length);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values.toArray(iValues,  values.length);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values.toArray(iValues,  values.length);	  iValues    =    values.toArray(iValues);    	non-compiled	[CE]  	15	None	replace
24	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  values,  types,  iFieldIndex);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  values,  types,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  values,  types,  iFieldIndex);	  iPartial    =    parsePartial(chronology,    types,    values,    iFieldIndex);    	non-compiled	[CE]  	5	None	replace
25	[BUG]  [BUGGY]  iPartial  =  partial.clonePartial();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  partial.clonePartial();  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  partial.clonePartial();	  iPartial    =    partial.cloneTree();    	non-compiled	[CE]  	14	None	replace
26	[BUG]  [BUGGY]  iValues  =  values  ==  null?  values.length  :  0;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values  ==  null?  values.length  :  0;  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values  ==  null?  values.length  :  0;	  iValues    =    values!=    null?    values.length    :    0;    	non-compiled	[CE]  	34	None	replace
27	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  types,  iTypes,  values);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  types,  iTypes,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  types,  iTypes,  values);	  iPartial    =    parsePartial(chronology,    types,    values,    iValues);    	non-compiled	[CE]  	35	None	replace
28	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  values,  types,  iFieldIndex);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  values,  types,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  values,  types,  iFieldIndex);	  iPartial    =    parseChronology(chronology,    types,    values,    iFieldIndex);    	non-compiled	[CE]  	9	None	replace
29	[BUG]  [BUGGY]  iValues  =  iValues.toArray(new  int[values.size()  ]);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  iValues.toArray(new  int[values.size()  ]);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  iValues.toArray(new  int[values.size()  ]);	  iValues    =    values.toArray(new    int[values.size()    ]);    	non-compiled	[CE]  	28	None	replace
30	[BUG]  [BUGGY]  iValues  =  values.toArray(iValues,  values);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values.toArray(iValues,  values);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values.toArray(iValues,  values);	  iValues    =    values.toArray(iValues);    	non-compiled	[CE]  	15	None	replace
31	[BUG]  [BUGGY]  iPartial  =  getPartial(chronology);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  getPartial(chronology);  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  getPartial(chronology);	  iPartial    =    getPartial();    	non-compiled	[CE]  	20	None	replace
32	[BUG]  [BUGGY]  iPartial  =  partial.parsePartial(this,  chronology);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  partial.parsePartial(this,  chronology);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  partial.parsePartial(this,  chronology);	  iPartial    =    partial.parsePartial(chronology);    	non-compiled	[CE]  	1	None	replace
33	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  parameters,  values,  iFieldIndex);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  parameters,  values,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  parameters,  values,  iFieldIndex);	  iPartial    =    parseChronology(chronology,    types,    values,    iFieldIndex);    	non-compiled	[CE]  	9	None	replace
34	[BUG]  [BUGGY]  iPartial  =  iChronology.getPartial();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  iChronology.getPartial();  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  iChronology.getPartial();	  iPartial    =    iChronology.withUTC();    	non-compiled	[CE]  	31	None	replace
35	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  values,  types,  values);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  values,  types,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  values,  types,  values);	  iPartial    =    parsePartial(chronology,    types,    values,    iValues);    	non-compiled	[CE]  	35	None	replace
36	[BUG]  [BUGGY]  iPartial  =  chronology.parseChronology(chronology);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  chronology.parseChronology(chronology);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  chronology.parseChronology(chronology);	  iPartial    =    chronology.parseChronology(partial);    	non-compiled	[CE]  	16	None	replace
37	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  types,  iTypes,  values);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  types,  iTypes,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  types,  iTypes,  values);	  iPartial    =    parseChronology(chronology,    types,    values,    iValues);    	non-compiled	[CE]  	29	None	replace
38	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  parameters,  values,  iFieldIndex);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  parameters,  values,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  parameters,  values,  iFieldIndex);	  iPartial    =    parsePartial(chronology,    types,    values,    iFieldIndex);    	non-compiled	[CE]  	5	None	replace
39	[BUG]  [BUGGY]  iPartial  =  parser.parsePartial(chronology,  iValues);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parser.parsePartial(chronology,  iValues);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parser.parsePartial(chronology,  iValues);	  iPartial    =    parser.parsePartial(chronology,    values);    	non-compiled	[CE]  	2	None	replace
40	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  values,  iValues,  iFieldIndex);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  values,  iValues,  iFieldIndex);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  values,  iValues,  iFieldIndex);	  iPartial    =    parsePartial(chronology,    values,    iValues);    	non-compiled	[CE]  	22	None	replace
41	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  iTypes,  types);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  iTypes,  types);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  iTypes,  types);	  iPartial    =    parseChronology(chronology,    types,    iTypes);    	non-compiled	[CE]  	25	None	replace
42	[BUG]  [BUGGY]  iValues  =  values!=  1?  values[1]  :  values;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iValues  =  values!=  1?  values[1]  :  values;  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iValues  =  values!=  1?  values[1]  :  values;	  iValues    =    values    <    <    1?    values[1]    :    values;    	non-compiled	[CE]  	26	None	replace
43	[BUG]  [BUGGY]  iPartial  =  getPartialFormat();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  getPartialFormat();  [BUGGY]      }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  getPartialFormat();	  iPartial    =    getPartial();    	non-compiled	[CE]  	20	None	replace
44	[BUG]  [BUGGY]  iPartial  =  parsePartial(chronology,  iTypes,  values);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parsePartial(chronology,  iTypes,  values);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parsePartial(chronology,  iTypes,  values);	  iPartial    =    parsePartial(chronology,    types,    iTypes);    	non-compiled	[CE]  	21	None	replace
45	[BUG]  [BUGGY]  iPartial  =  parseChronology(chronology,  types,  values,  type);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  parseChronology(chronology,  types,  values,  type);  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  parseChronology(chronology,  types,  values,  type);	  iPartial    =    parseChronology(chronology,    types,    values,    iTypes);    	non-compiled	[CE]  	30	None	replace
46	[BUG]  [BUGGY]  iPartial  =  chronology.withUTC();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      Partial(Chronology  chronology,  DateTimeFieldType[]  types,  int[]  values)  {  super();  iChronology  =  chronology;  iTypes  =  types;      [BUGGY]  iPartial  =  chronology.withUTC();  [BUGGY]      iValues  =  values;  }  [CLASS]  Partial  Property  [METHOD]  <init>  [RETURN_TYPE]  DateTimeFieldType[],int[])  Chronology  chronology  DateTimeFieldType[]  types  int[]  values  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  types  Partial  iPartial  partial  int[]  iValues  values  Chronology  chrono  chronology  iChronology  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  i  iFieldIndex  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.22941573387056174	299	299	1	replace	iPartial  =  chronology.withUTC();	  iPartial    =    iChronology.withUTC();    	non-compiled	[CE]  	31	None	replace
