bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	add	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	compilable	  [FE]  AssertionFailedError  	45	12	replace
2	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	compilable	  [FE]  AssertionFailedError  	45	12	replace
3	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[])  [FE]      AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[])	45	None	replace
4	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  values);  [CE]  cannot  find  symbol  values  [FE]        AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  values);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  values);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  cannot  find  symbol  values	45	None	replace
5	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  values);  [CE]  cannot  find  symbol  values  [FE]          AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  values);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  values);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  cannot  find  symbol  values	45	None	replace
6	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int[])  [FE]            AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int[])	45	None	replace
7	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology)  [FE]              AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  iChronology);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology)	45	None	replace
8	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  i);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int)  [FE]                AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  i);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  i);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int)	45	None	replace
9	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  newPartial  [FE]                  AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]    [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	  	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  cannot  find  symbol  newPartial	45	None	replace
10	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[])  [FE]    AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[])	45	None	replace
11	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues);  [CE]  cannot  find  symbol  iFieldIndex  [FE]      AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	45	None	replace
12	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],DateTimeFieldType)  [FE]    AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  fieldType);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  fieldType);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],DateTimeFieldType)	45	None	replace
13	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  i);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)  [FE]      AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  i);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  i);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)	45	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	add	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	compilable	  [FE]  AssertionFailedError  	45	13	replace
15	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);    [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]  iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues);  	compilable	  [FE]  AssertionFailedError  	45	13	replace
