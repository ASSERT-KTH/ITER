bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[])  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[])	7	None	replace
2	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,int[])  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newValues);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,int[])	7	None	replace
3	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  fieldType,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],DateTimeFieldType,Chronology)  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  fieldType,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  fieldType,  iChronology);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],DateTimeFieldType,Chronology)	7	None	replace
4	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  fields,  iChronology);  [CE]  cannot  find  symbol  fields  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  fields,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  fields,  iChronology);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  cannot  find  symbol  fields	7	None	replace
5	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  chronology,  iChronology);  [CE]  cannot  find  symbol  chronology  [FE]                          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  chronology,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  chronology,  iChronology);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	7	None	replace
6	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,DateTimeFieldType)  [FE]                            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  iChronology,  fieldType);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,DateTimeFieldType)	7	None	replace
7	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  value);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,int)  [FE]                              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  iChronology,  value);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,int)	7	None	replace
8	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(null,  newTypes,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(<null>,DateTimeFieldType[],Chronology)  [FE]                                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(null,  newTypes,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(null,  newTypes,  iChronology);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(<null>,DateTimeFieldType[],Chronology)	7	None	replace
9	[BUG]  [BUGGY]  iChronology.validate(newPartial,  newValues);  [CE]  cannot  find  symbol  newPartial  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  iChronology.validate(newPartial,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	iChronology.validate(newPartial,  newValues);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
10	[BUG]  [BUGGY]  int[]  newValues  =  iChronology.getValues();  [CE]  variable  newValues  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  int[]  newValues  =  iChronology.getValues();  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	int[]  newValues  =  iChronology.getValues();	      	non-compiled	[CE]  variable  newValues  is  already  defined  in  method  with(DateTimeFieldType,int)	9	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newValues.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newValues.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(iValues,  i,  newTypes,  i  +  1,  newValues.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  i,  newTypes,  i  +  1,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  i,  newTypes,  i  +  1,  newValues.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
14	[BUG]  [BUGGY]  int[]  newValues  =  iChronology.getValues();  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length);  [CE]  variable  newValues  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]                                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  int[]  newValues  =  iChronology.getValues();  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	int[]  newValues  =  iChronology.getValues();  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length);	      	non-compiled	[CE]  variable  newValues  is  already  defined  in  method  with(DateTimeFieldType,int)	9	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(iValues,  0,  newValues,  i  +  1,  newValues.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  0,  newValues,  i  +  1,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  0,  newValues,  i  +  1,  newValues.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(iValues,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length  -  i);  [CE]  cannot  find  symbol  newPartial  [FE]                                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length  -  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  0,  newValues,  0,  newValues.length  -  i);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
18	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  value);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int)	3	None	replace
19	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  values);  [CE]  cannot  find  symbol  values  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  values);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  values);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  cannot  find  symbol  values	3	None	replace
20	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newValues,  fieldType,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(int[],DateTimeFieldType,Chronology)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newValues,  fieldType,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newValues,  fieldType,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(int[],DateTimeFieldType,Chronology)	3	None	replace
21	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iFieldIndex,  newValues);  [CE]  cannot  find  symbol  iFieldIndex  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iFieldIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iFieldIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	3	None	replace
22	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  iChronology,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,Chronology,int[])  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  iChronology,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  iChronology,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,Chronology,int[])	3	None	replace
23	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iValues,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int[])  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iValues,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iValues,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int[])	3	None	replace
24	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  fieldType,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,DateTimeFieldType,int[])  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  fieldType,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(this,  iChronology,  fieldType,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,DateTimeFieldType,int[])	3	None	replace
25	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields[i],  newValues);  [CE]  cannot  find  symbol  fields  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields[i],  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fields[i],  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  cannot  find  symbol  fields	3	None	replace
26	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  index);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int)  [FE]                          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  index);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  index);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int)	3	None	replace
27	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newTypes,  i);  [CE]  cannot  find  symbol  fieldTypes  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newTypes,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newTypes,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  cannot  find  symbol  fieldTypes	8	None	replace
28	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],DateTimeFieldType[])  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],DateTimeFieldType[])	8	None	replace
29	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newTypes,  i);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,DateTimeFieldType[],int)  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newTypes,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newTypes,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,DateTimeFieldType[],int)	8	None	replace
30	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int)  [FE]                          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  value);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int)	8	None	replace
31	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],DateTimeFieldType)  [FE]                            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],DateTimeFieldType)	8	None	replace
32	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newTypes,  i);  [CE]  cannot  find  symbol  fields  [FE]                              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newTypes,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fields,  newTypes,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  cannot  find  symbol  fields	8	None	replace
33	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],DateTimeFieldType[])  [FE]                                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],DateTimeFieldType[])	8	None	replace
34	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  i);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int)	13	None	replace
35	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int[])  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int[])	13	None	replace
36	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  i,  newValues,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[],int[])  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  i,  newValues,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  i,  newValues,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[],int[])	13	None	replace
37	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  i,  newValues,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[],DateTimeFieldType[])  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  i,  newValues,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  i,  newValues,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[],DateTimeFieldType[])	13	None	replace
38	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  i,  newTypes,  newValues,  i);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int,DateTimeFieldType[],int[],int)  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  i,  newTypes,  newValues,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  i,  newTypes,  newValues,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int,DateTimeFieldType[],int[],int)	13	None	replace
39	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iClass,  newTypes,  newValues,  i);  [CE]  cannot  find  symbol  iClass  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iClass,  newTypes,  newValues,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iClass,  newTypes,  newValues,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  cannot  find  symbol  iClass	13	None	replace
40	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newValues,  i);  [CE]  cannot  find  symbol  fieldTypes  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newValues,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newValues,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  cannot  find  symbol  fieldTypes	13	None	replace
41	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],DateTimeFieldType[])  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],DateTimeFieldType[])	10	None	replace
42	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iFieldIndex);  [CE]  cannot  find  symbol  iFieldIndex  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iFieldIndex);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iFieldIndex);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    values);    	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	4	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  null);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	add	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  null);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    values);    	compilable	  [FE]  AssertionFailedError  	4	13	replace
44	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  null);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  null);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  null);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    values);    	compilable	  [FE]  AssertionFailedError  	4	13	replace
45	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  fields);  [CE]  cannot  find  symbol  fields  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  fields);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  fields);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    values);    	non-compiled	[CE]  cannot  find  symbol  fields	4	None	replace
46	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  iFieldIndex);  [CE]  cannot  find  symbol  iFieldIndex  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  iFieldIndex);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  iFieldIndex);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	6	None	replace
47	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int[],int)  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues,  value);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int[],int)	6	None	replace
48	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int)  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  value);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int)	6	None	replace
49	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  iTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[])  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  iTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  iTypes);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[])	6	None	replace
50	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  i);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int)  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  i);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],int)	6	None	replace
51	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int[])  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],int[])	12	None	replace
52	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],Chronology)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  newTypes,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],Chronology)	12	None	replace
53	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newValues,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,int[],Chronology)  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newValues,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  newValues,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,int[],Chronology)	12	None	replace
54	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newValues,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,int[],DateTimeFieldType)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,int[],DateTimeFieldType)	12	None	replace
55	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  newTypes,  newValues,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,DateTimeFieldType[],int[],DateTimeFieldType)  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  newTypes,  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(this,  iChronology,  newTypes,  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,DateTimeFieldType[],int[],DateTimeFieldType)	12	None	replace
56	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],Chronology)  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[],Chronology)	12	None	replace
57	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(partial,  iChronology,  newTypes,  newValues,  fieldType);  [CE]  cannot  find  symbol  partial  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(partial,  iChronology,  newTypes,  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(partial,  iChronology,  newTypes,  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  cannot  find  symbol  partial	12	None	replace
58	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
59	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Comparable  <  DateTimeFieldType>  newPartial  =  new  Comparable  <  DateTimeFieldType>(iChronology,  newTypes,  iValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Comparable  <  DateTimeFieldType>  newPartial  =  new  Comparable  <  DateTimeFieldType>(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Comparable  <  DateTimeFieldType>  newPartial  =  new  Comparable  <  DateTimeFieldType>(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
60	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  {  iChronology.validate(newPartial,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  {  iChronology.validate(newPartial,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  {  iChronology.validate(newPartial,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
61	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  partial  =  new  Partial(iChronology,  newTypes,  iValues);  [CE]  cannot  find  symbol  partial  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  partial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    partial  =  new  Partial(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  cannot  find  symbol  partial	14	None	add
62	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  iValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  iTypes,  iValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
63	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  this.iChronology.validate(newPartial,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  this.iChronology.validate(newPartial,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  this.iChronology.validate(newPartial,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
64	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  if(value  ==  getValue(index))  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  if(value  ==  getValue(index))  {  return  this;  }  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  if(value  ==  getValue(index))  {  return  this;  }	  	non-compiled	[CE]  illegal  start  of  type	14	None	add
65	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  {  iChronology.validate(newPartial,  newValues);  return  newPartial;  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  {  iChronology.validate(newPartial,  newValues);  return  newPartial;  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  }  else  {  iChronology.validate(newPartial,  newValues);  return  newPartial;	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
66	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
67	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  partial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  cannot  find  symbol  partial  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  partial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    partial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  find  symbol  partial	1	None	add
68	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
69	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Paratial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Paratial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Paratial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
70	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  oldPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  oldPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Partial  oldPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
71	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Bytial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Bytial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Bytial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
72	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newKeys);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newKeys);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newKeys);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
73	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues));  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues));	  	non-compiled	[CE]  ';'  expected	1	None	add
74	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[])  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  iValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType,int[])	15	None	replace
75	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  iValues);  [CE]  cannot  find  symbol  fieldTypes  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  iValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  cannot  find  symbol  fieldTypes	15	None	replace
76	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues,  value);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)	15	None	replace
77	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  value,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[])  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  value,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  value,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[])	11	None	replace
78	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  index,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[])  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  index,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  index,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int,int[])	11	None	replace
79	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldIndex,  newValues);  [CE]  cannot  find  symbol  fieldIndex  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol  fieldIndex	11	None	replace
80	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(null,  iFieldIndex,  newValues);  [CE]  cannot  find  symbol  iFieldIndex  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(null,  iFieldIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(null,  iFieldIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	11	None	replace
81	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  getFieldIndex(),  newValues);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  getFieldIndex(),  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  getFieldIndex(),  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
82	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(partial,  iFieldIndex,  newValues);  [CE]  cannot  find  symbol  partial  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(partial,  iFieldIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(partial,  iFieldIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol  partial	11	None	replace
83	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  value);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)	2	None	replace
84	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newValues);  [CE]  cannot  find  symbol  fieldTypes  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldTypes,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  cannot  find  symbol  fieldTypes	2	None	replace
85	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  values);  [CE]  cannot  find  symbol  values  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  values);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  values);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  cannot  find  symbol  values	2	None	replace
86	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newValues);  [CE]  cannot  find  symbol  fields  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fields,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  cannot  find  symbol  fields	2	None	replace
87	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  values,  newValues);  [CE]  cannot  find  symbol  values  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  values,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  values,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  cannot  find  symbol  values	2	None	replace
88	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues,  values);  [CE]  cannot  find  symbol  values  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues,  values);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iValues,  newValues,  values);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    values);    	non-compiled	[CE]  cannot  find  symbol  values	5	None	replace
89	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues,  values);  [CE]  cannot  find  symbol  iFieldIndex  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues,  values);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues,  values);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    values);    	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	5	None	replace
90	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  null,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	add	Partial  newPartial  =  new  Partial(newTypes,  null,  iChronology);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	compilable	  [FE]  IllegalArgumentException  	7	12	replace
91	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  null,  iChronology);  [FE]  IllegalArgumentException  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  null,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  null,  iChronology);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	compilable	  [FE]  IllegalArgumentException  	7	12	replace
92	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  index);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  index);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  index);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    values);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int)	5	None	replace
93	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  null);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],<null>)  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  null);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  null);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    values);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],<null>)	5	None	replace
94	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  values);  [CE]  cannot  find  symbol  values  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  values);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  values);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  cannot  find  symbol  values	6	None	replace
95	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newValues,  iValues);  [CE]  no  suitable  constructor  found  for  Partial(int[],int[])  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newValues,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newValues,  iValues);	  Partial    newPartial    =    new    Partial(iChronology,    iValues,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(int[],int[])	6	None	replace
96	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],DateTimeFieldType)  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],DateTimeFieldType)	12	None	replace
97	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[])  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  newTypes,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[])	12	None	replace
98	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  newValues,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[],Chronology)  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  newValues,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  newTypes,  newValues,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[],Chronology)	12	None	replace
99	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newValues,  fieldType);  [CE]  cannot  find  symbol  fields  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fields,  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  cannot  find  symbol  fields	12	None	replace
100	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  oldValues);  [CE]  cannot  find  symbol  oldValues  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  oldValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  oldValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    values);    	non-compiled	[CE]  cannot  find  symbol  oldValues	4	None	replace
101	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newTypes,  iValues);  [CE]  cannot  find  symbol  fields  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fields,  newTypes,  iValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  cannot  find  symbol  fields	15	None	replace
102	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  fieldType,  iValues);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],DateTimeFieldType,int[])  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  fieldType,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  fieldType,  iValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],DateTimeFieldType,int[])	15	None	replace
103	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(i,  newTypes,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(int,DateTimeFieldType[],Chronology)  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(i,  newTypes,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(i,  newTypes,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(int,DateTimeFieldType[],Chronology)	8	None	replace
104	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldType,  newValues);  [CE]  cannot  find  symbol  iFieldType  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldType,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iFieldType,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	3	None	replace
105	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType)  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType)	3	None	replace
106	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(i,  newTypes,  newValues,  i);  [CE]  no  suitable  constructor  found  for  Partial(int,DateTimeFieldType[],int[],int)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(i,  newTypes,  newValues,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(i,  newTypes,  newValues,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(int,DateTimeFieldType[],int[],int)	13	None	replace
107	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int[])  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int[],int[])	13	None	replace
108	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iGeneratorIndex,  newValues);  [CE]  cannot  find  symbol  iGeneratorIndex  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iGeneratorIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iGeneratorIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iGeneratorIndex	11	None	replace
109	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  iChronology  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  iChronology  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    iChronology  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	1	None	add
110	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  System.arraycopy(iValues,  iTypes,  newValues,  i  +  1,  newValues.length  -  i  -  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  System.arraycopy(iValues,  iTypes,  newValues,  i  +  1,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    System.arraycopy(iValues,  iTypes,  newValues,  i  +  1,  newValues.length  -  i  -  1);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	1	None	add
111	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Integer  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Integer  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Integer  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
112	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    newPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
113	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  IllegalArgumentException  iChronology  =  new  IllegalArgumentException(iChronology,  iTypes,  newValues);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(IllegalArgumentException,DateTimeFieldType[],int[])  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  IllegalArgumentException  iChronology  =  new  IllegalArgumentException(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    IllegalArgumentException  iChronology  =  new  IllegalArgumentException(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(IllegalArgumentException,DateTimeFieldType[],int[])	1	None	add
114	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues).set(this,  index,  newValues,  value);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues).set(this,  index,  newValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues).set(this,  index,  newValues,  value);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
115	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  parse(iChronology,  iTypes,  newValues);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  parse(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    parse(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
116	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  System.arraycopy(iValues,  iTypes,  newValues,  i  +  1,  newValues.length  -  i);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  System.arraycopy(iValues,  iTypes,  newValues,  i  +  1,  newValues.length  -  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    System.arraycopy(iValues,  iTypes,  newValues,  i  +  1,  newValues.length  -  i);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	1	None	add
117	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  newValues,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,int[],DateTimeFieldType[])  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  newValues,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(this,  iChronology,  newValues,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,int[],DateTimeFieldType[])	10	None	replace
118	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues,  newTypes);  [CE]  cannot  find  symbol  iFieldIndex  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iFieldIndex,  newValues,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  cannot  find  symbol  iFieldIndex	10	None	replace
119	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes,  value);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[],int)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes,  value);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[],int)	10	None	replace
120	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[])  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iValues,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iValues,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[])	10	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(iValues,  0,  newValues,  0,  i);  [CE]  cannot  find  symbol  newPartial  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  0,  newValues,  0,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  0,  newValues,  0,  i);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length);  [CE]  cannot  find  symbol  newPartial  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  0,  newValues,  0,  newValues.length);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  0,  newValues,  0,  newValues.length);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(iValues,  0,  newValues,  i  +  1,  newValues.length  -  i);  [CE]  cannot  find  symbol  newPartial  [FE]                          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  0,  newValues,  i  +  1,  newValues.length  -  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  0,  newValues,  i  +  1,  newValues.length  -  i);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
124	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  iChronology  =  new  Partial(iChronology,  newTypes,  iValues);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  iChronology  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    iChronology  =  new  Partial(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	14	None	add
125	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  IllegalArgumentException  iChronology  =  new  IllegalArgumentException(iChronology,  newTypes,  iValues);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(IllegalArgumentException,DateTimeFieldType[],int[])  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  IllegalArgumentException  iChronology  =  new  IllegalArgumentException(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    IllegalArgumentException  iChronology  =  new  IllegalArgumentException(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(IllegalArgumentException,DateTimeFieldType[],int[])	14	None	add
126	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Integer  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Integer  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Integer  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
127	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    newPartial  =  new  Partial(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
128	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  System.arraycopy(iValues,  iTypes,  newTypes,  iValues,  i  +  1,  newValues.length  -  i  -  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  System.arraycopy(iValues,  iTypes,  newTypes,  iValues,  i  +  1,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    System.arraycopy(iValues,  iTypes,  newTypes,  iValues,  i  +  1,  newValues.length  -  i  -  1);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	14	None	add
129	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues).set(this,  index,  newValues,  value);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues).set(this,  index,  newValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues).set(this,  index,  newValues,  value);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
130	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  parse(iChronology,  newTypes,  iValues);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  parse(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    parse(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
131	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues).set(this,  index,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues).set(this,  index,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues).set(this,  index,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
132	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  iChronology.validate(newPartial,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  iChronology.validate(newPartial,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    iChronology.validate(newPartial,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	1	None	add
133	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  iPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [CE]  cannot  find  symbol  iPartial  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  iPartial  =  new  Partial(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    iPartial  =  new  Partial(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  find  symbol  iPartial	1	None	add
134	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  parseAndReturn(iChronology,  iTypes,  newValues);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iTypes,  newValues);  parseAndReturn(iChronology,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    parseAndReturn(iChronology,  iTypes,  newValues);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
135	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(i,  newTypes,  newValues,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(int,DateTimeFieldType[],int[],Chronology)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(i,  newTypes,  newValues,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(i,  newTypes,  newValues,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(int,DateTimeFieldType[],int[],Chronology)	13	None	replace
136	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(this,  fieldType,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Partial,DateTimeFieldType,int[])  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(this,  fieldType,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(this,  fieldType,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Partial,DateTimeFieldType,int[])	3	None	replace
137	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  dataArea);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fieldType,  newValues,  dataArea);	  Partial    newPartial    =    new    Partial(iChronology,    fieldType,    newValues);    	non-compiled	[CE]  cannot  find  symbol  dataArea	3	None	replace
138	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,DateTimeFieldType[])  [FE]                  AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newTypes,  iChronology,  newTypes);	  Partial    newPartial    =    new    Partial(newTypes,    iChronology);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType[],Chronology,DateTimeFieldType[])	7	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
140	[BUG]  [BUGGY]  iChronology.validate(fieldType,  newValues);  [CE]  method  validate  in  class  Chronology  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  iChronology.validate(fieldType,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	iChronology.validate(fieldType,  newValues);	      	non-compiled	[CE]  method  validate  in  class  Chronology  cannot  be  applied  to  given  types;	9	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(iValues,  i,  newValues,  0,  newValues.length  -  i  -  1);  [CE]  cannot  find  symbol  newPartial  [FE]                          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  i,  newValues,  0,  newValues.length  -  i  -  1);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  i,  newValues,  0,  newValues.length  -  i  -  1);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
142	[BUG]  [BUGGY]  int  index  =  indexOf(fieldType);  [CE]  variable  index  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]                            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  int  index  =  indexOf(fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	int  index  =  indexOf(fieldType);	      	non-compiled	[CE]  variable  index  is  already  defined  in  method  with(DateTimeFieldType,int)	9	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(iValues,  i,  newValues,  0,  newValues.length  -  i);  [CE]  cannot  find  symbol  newPartial  [FE]                              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  System.arraycopy(iValues,  i,  newValues,  0,  newValues.length  -  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	System.arraycopy(iValues,  i,  newValues,  0,  newValues.length  -  i);	      	non-compiled	[CE]  cannot  find  symbol  newPartial	9	None	replace
144	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  fieldType,  newTypes);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType,DateTimeFieldType[])  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  fieldType,  newTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  fieldType,  newTypes);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType,DateTimeFieldType[])	10	None	replace
145	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes,  fieldType);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[],DateTimeFieldType)  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newValues,    newTypes);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,int[],DateTimeFieldType[],DateTimeFieldType)	10	None	replace
146	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  iValues);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[])  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  newTypes,  iValues);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[])	15	None	replace
147	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues,  values);  [CE]  cannot  find  symbol  values  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues,  values);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues,  values);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    	non-compiled	[CE]  cannot  find  symbol  values	15	None	replace
148	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iClassIndex,  newValues);  [CE]  cannot  find  symbol  iClassIndex  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iClassIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iClassIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iClassIndex	11	None	replace
149	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iIndex,  newValues);  [CE]  cannot  find  symbol  iIndex  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  iIndex,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  iIndex,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iFieldIndex,    newValues);    	non-compiled	[CE]  cannot  find  symbol  iIndex	11	None	replace
150	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(newValues,  iTypes);  [CE]  no  suitable  constructor  found  for  Partial(int[],DateTimeFieldType[])  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(newValues,  iTypes);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(newValues,  iTypes);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(int[],DateTimeFieldType[])	2	None	replace
151	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  iTypes,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[])  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(fieldType,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(fieldType,  iTypes,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(DateTimeFieldType,DateTimeFieldType[],int[])	2	None	replace
152	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(period,  iChronology,  newValues);  [CE]  cannot  find  symbol  period  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(period,  iChronology,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(period,  iChronology,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  cannot  find  symbol  period	2	None	replace
153	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(this,  iTypes,  newValues);  [CE]  no  suitable  constructor  found  for  Partial(Partial,DateTimeFieldType[],int[])  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(this,  iTypes,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(this,  iTypes,  newValues);	  Partial    newPartial    =    new    Partial(iChronology,    iTypes,    newValues);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Partial,DateTimeFieldType[],int[])	2	None	replace
154	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  iChronology.validate(newPartial,  newValues);  [CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)  [FE]    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  iChronology.validate(newPartial,  newValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    iChronology.validate(newPartial,  newValues);	  	non-compiled	[CE]  variable  newPartial  is  already  defined  in  method  with(DateTimeFieldType,int)	14	None	add
155	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  iPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [CE]  cannot  find  symbol  iPartial  [FE]      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  iPartial  =  new  Partial(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    iPartial  =  new  Partial(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  cannot  find  symbol  iPartial	14	None	add
156	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  parseAndReturn(iChronology,  newTypes,  iValues);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  parseAndReturn(iChronology,  newTypes,  iValues);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    parseAndReturn(iChronology,  newTypes,  iValues);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
157	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  parseAndReturn(iChronology,  newTypes,  iValues,  value);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iValues);  parseAndReturn(iChronology,  newTypes,  iValues,  value);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial    newPartial    =    new    Partial(iChronology,    newTypes,    iValues);    parseAndReturn(iChronology,  newTypes,  iValues,  value);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
158	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iChronology);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],Chronology)  [FE]                    AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iChronology);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  iChronology);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],Chronology)	8	None	replace
159	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  newTypes,  i);  [CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,DateTimeFieldType[],int)  [FE]                      AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(this,  iChronology,  newTypes,  i);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(this,  iChronology,  newTypes,  i);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    i);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Partial,Chronology,DateTimeFieldType[],int)	8	None	replace
160	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues.length);  [CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int)  [FE]            AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues.length);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues.length);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    values);    	non-compiled	[CE]  no  suitable  constructor  found  for  Partial(Chronology,DateTimeFieldType[],int)	4	None	replace
161	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields[i],  newValues,  fieldType);  [CE]  cannot  find  symbol  fields  [FE]        AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  fields[i],  newValues,  fieldType);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  fields[i],  newValues,  fieldType);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    fieldType);    	non-compiled	[CE]  cannot  find  symbol  fields	12	None	replace
162	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]              AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  dataArea);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  dataArea);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    values);    	non-compiled	[CE]  cannot  find  symbol  dataArea	5	None	replace
163	[BUG]  [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  data);  [CE]  cannot  find  symbol  data  [FE]                AssertionFailedError    [CONTEXT]    }  }  System.arraycopy(iTypes,  0,  newTypes,  0,  i);  System.arraycopy(iValues,  0,  newValues,  0,  i);  newTypes[i]  =  fieldType;  newValues[i]  =  value;  System.arraycopy(iTypes,  i,  newTypes,  i  +  1,  newTypes.length  -  i  -  1);  System.arraycopy(iValues,  i,  newValues,  i  +  1,  newValues.length  -  i  -  1);      [BUGGY]  Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  data);  [BUGGY]    iChronology.validate(newPartial,  newValues);  return  newPartial;  }  if  (value  ==  getValue(index))  {  return  this;  }  int[]  newValues  =  getValues();  newValues  =  getField(index).set(this,  index,  newValues,  value);  return  new  Partial(this,  newValues);  }  [CLASS]  Partial  Property  [METHOD]  with  [RETURN_TYPE]  Partial  DateTimeFieldType  fieldType  int  value  [VARIABLES]  boolean  DateTimeFieldType[]  iTypes  newTypes  types  Partial  iPartial  newPartial  partial  DateTimeFieldType  fieldType  loopType  int[]  iValues  newValues  values  Chronology  chrono  chronology  iChronology  newChronology  DurationField  loopRangeField  loopUnitField  rangeField  unitField  long  serialVersionUID  DateTimeFormatter[]  iFormatter  int  compare  fieldIndex  i  iFieldIndex  index  value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2773500981126146	464	464	1	replace	Partial  newPartial  =  new  Partial(iChronology,  newTypes,  newValues,  data);	  Partial    newPartial    =    new    Partial(iChronology,    newTypes,    newValues,    values);    	non-compiled	[CE]  cannot  find  symbol  data	5	None	replace
