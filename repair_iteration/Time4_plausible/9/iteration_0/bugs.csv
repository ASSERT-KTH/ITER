bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
17	[BUG] [BUGGY] DateTimeFieldType loopType = iTypes[i]; [FE] AssertionFailedError [CONTEXT] int index = indexOf(fieldType); if (index == -1) { DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1]; int[] newValues = new int[newTypes.length];  int i = 0; DurationField unitField = fieldType.getDurationType().getField(iChronology); if (unitField.isSupported()) { for (; i < iTypes.length; i++) { [BUGGY] DateTimeFieldType loopType = iTypes[i]; [BUGGY] DurationField loopUnitField = loopType.getDurationType().getField(iChronology); if (loopUnitField.isSupported()) { int compare = unitField.compareTo(loopUnitField); if (compare > 0) { break; } else if (compare == 0) { DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology); DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology); if (rangeField.compareTo(loopRangeField) > 0) { break; [CLASS] Partial Property [METHOD] with [RETURN_TYPE] Partial  DateTimeFieldType fieldType int value [VARIABLES] boolean DateTimeFieldType[] iTypes newTypes types Partial iPartial newPartial partial DateTimeFieldType fieldType loopType int[] iValues newValues values Chronology chrono chronology iChronology newChronology DurationField loopRangeField loopUnitField rangeField unitField long serialVersionUID DateTimeFormatter[] iFormatter int compare fieldIndex i iFieldIndex index value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2886751345948129	440	440	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int index = indexOf(fieldType); if (index == -1) { DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1]; int[] newValues = new int[newTypes.length];  int i = 0; DurationField unitField = fieldType.getDurationType().getField(iChronology); if (unitField.isSupported()) { for (; i < iTypes.length; i++) { [BUGGY] [BUGGY] DateTimeFieldType loopType = iTypes[i]; DurationField loopUnitField = loopType.getDurationType().getField(iChronology); if (loopUnitField.isSupported()) { int compare = unitField.compareTo(loopUnitField); if (compare > 0) { break; } else if (compare == 0) { DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology); DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology); if (rangeField.compareTo(loopRangeField) > 0) { break; [CLASS] Partial Property [METHOD] with [RETURN_TYPE] Partial  DateTimeFieldType fieldType int value [VARIABLES] boolean DateTimeFieldType[] iTypes newTypes types Partial iPartial newPartial partial DateTimeFieldType fieldType loopType int[] iValues newValues values Chronology chrono chronology iChronology newChronology DurationField loopRangeField loopUnitField rangeField unitField long serialVersionUID DateTimeFormatter[] iFormatter int compare fieldIndex i iFieldIndex index value  	projects/Time4/src/main/java/org/joda/time/Partial.java	0.2886751345948129	440	440	1	add	
