projects/Time4/src/main/java/org/joda/time/Partial.java427if(fieldType==null){
projects/Time4/src/main/java/org/joda/time/Partial.java427if(fieldType==null||value==0){
projects/Time4/src/main/java/org/joda/time/Partial.java427
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=getValues();
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iPartial.getValues();
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(iFieldIndex);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(value);
projects/Time4/src/main/java/org/joda/time/Partial.java427DateTimeFieldTypefieldType=fieldType.getDurationType();
projects/Time4/src/main/java/org/joda/time/Partial.java427if(fieldType==null||value==-1){
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){thrownewIllegalArgumentException("Thefieldtypemustnotbenull.");}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(fieldType==null||value<=0){
projects/Time4/src/main/java/org/joda/time/Partial.java427if(fieldType==null||value<0){
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=getValues(value);
projects/Time4/src/main/java/org/joda/time/Partial.java427tries.add(newTypedField(fieldType,value));
projects/Time4/src/main/java/org/joda/time/Partial.java427aughtExceptionHandler.throwAsIgnoredException("");
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldType);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldType,value);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(iFieldIndex,value);
projects/Time4/src/main/java/org/joda/time/Partial.java427DateTimeFieldTypefieldType=fieldType.getField(iChronology);
projects/Time4/src/main/java/org/joda/time/Partial.java427DateTimeFieldTypefieldType=fieldType.getRangeDurationType();
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=fieldType.getValues();
projects/Time4/src/main/java/org/joda/time/Partial.java427aughtExceptionHandler.throwAsIgnoredError("Thefieldtypemustnotbenull.");
projects/Time4/src/main/java/org/joda/time/Partial.java427nested.add(newTypedField(fieldType,value));
projects/Time4/src/main/java/org/joda/time/Partial.java427nested=newLinkedList<DateTimeFieldType>();
projects/Time4/src/main/java/org/joda/time/Partial.java427safeMultiply(fieldType,value){thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427safeMultiply(fieldType.getValue(),value){thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0||fieldType==null){
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray(newint[0]);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=getValues();for(inti=0;i<newValues.length;++i){if(iTypes[i]!=null){returnwithPartial(iTypes[i]);}
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray(newint[iTypes.size()]);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.values();
projects/Time4/src/main/java/org/joda/time/Partial.java427[Delete]
projects/Time4/src/main/java/org/joda/time/Partial.java427aughtInvalidPartialException("Thefieldtypemustnotbenull.");
projects/Time4/src/main/java/org/joda/time/Partial.java427aughtExceptionHandler(newIllegalArgumentException(""));
projects/Time4/src/main/java/org/joda/time/Partial.java427nested=newArrayList<DateTimeFieldType>();
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(iChronology,value);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldIndex,value);
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){aughtInvalidPartialException("Thefieldtypemustnotbenull.");}else{thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){aughtInvalidPartialException("Thefieldtypemustnotbenull.");}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){aughtExceptionHandler(newIllegalArgumentException(""));}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value<0){aughtExceptionHandler(newIllegalArgumentException(""));}
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldType,index);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldType,values);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray(newint[iTypes.size()-1]);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.getValues();
projects/Time4/src/main/java/org/joda/time/Partial.java427DateTimeFieldTypefieldType=iChronology.getField(fieldType);
projects/Time4/src/main/java/org/joda/time/Partial.java427DateTimeFieldTypefieldType=iChronology.getFieldType(fieldType);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray(newint[1]);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=getValues();for(inti=0;i<newValues.length;++i){if(iTypes[i]!=null){returnwithPartial(iTypes[i]
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=getValues(fieldType);
projects/Time4/src/main/java/org/joda/time/Partial.java427nested.add(newTypedField(fieldType,value),iValues);
projects/Time4/src/main/java/org/joda/time/Partial.java427nested.add(newTypedField(fieldType,value),iChronology);
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){tries.add(newTypedField(fieldType,value));}else{thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value<0){tries.add(newTypedField(fieldType,value));}else{thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray();
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldType,value-1);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray(newint[iTypes.size()+1]);
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.toArray(newint[value]);
projects/Time4/src/main/java/org/joda/time/Partial.java427tries.add(newTypedField(fieldType,value),iValues);
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value==0){aughtExceptionHandler.throwAsIgnoredException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=getValues(fieldType,value);
projects/Time4/src/main/java/org/joda/time/Partial.java427safely(fieldType,value){thrownewIllegalArgumentException("");}
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(iFieldIndex,newValues);
projects/Time4/src/main/java/org/joda/time/Partial.java427if(value<0||fieldType==null){
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=fieldType.values();
projects/Time4/src/main/java/org/joda/time/Partial.java427int[]newValues=iTypes.get(fieldType,value+1);
projects/Time4/src/main/java/org/joda/time/Partial.java427DateTimeFieldTypefieldType=fieldType.getField(iChronology).withUTC();
