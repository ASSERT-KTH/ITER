bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  len  =  input.length();  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  String  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	String  len  =  input.length();	  char    len    =    input.length();    	non-compiled	[CE]  incompatible  types	5	None	replace
2	[BUG]  [BUGGY]  Char  len  =  input.length();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  len  =  input.length();	  char    len    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
3	[BUG]  [BUGGY]  Character  len  =  input.length();  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Character  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Character  len  =  input.length();	  char    len    =    input.length();    	non-compiled	[CE]  incompatible  types	5	None	replace
4	[BUG]  [BUGGY]  int  pos  +=  input.length()  -  1;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length()  -  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length()  -  1;	  pos    +=    input.length()    -    1;    	non-compiled	[CE]  ';'  expected	60	None	replace
5	[BUG]  [BUGGY]  int  pos  +=  input.length();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length();	  pos    +=    input.length()    -    1;    	non-compiled	[CE]  ';'  expected	60	None	replace
6	[BUG]  [BUGGY]  int  len  =  input.length  /  2;  [CE]  cannot  find  symbol  length  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  /  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  /  2;	  int    len    =    input.length    /    1;    	non-compiled	[CE]  cannot  find  symbol  length	66	None	replace
7	[BUG]  [BUGGY]  int  len  =  input.length  /  3;  [CE]  cannot  find  symbol  length  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  /  3;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  /  3;	  int    len    =    input.length    /    1;    	non-compiled	[CE]  cannot  find  symbol  length	66	None	replace
8	[BUG]  [BUGGY]  int  len  =  input.length  /  4;  [CE]  cannot  find  symbol  length  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  /  4;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  /  4;	  int    len    =    input.length    /    1;    	non-compiled	[CE]  cannot  find  symbol  length	66	None	replace
9	[BUG]  [BUGGY]  if(pos  <  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    Output.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
10	[BUG]  [BUGGY]  Output.write('n');  pos++;  [CE]  cannot  find  symbol  Output  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Output.write('n');  pos++;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Output.write('n');  pos++;	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    Output.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  Output	121	None	replace
11	[BUG]  [BUGGY]  if(pos  <  0)  {  if(pos  >  0)  {  Output.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  0)  {  if(pos  >  0)  {  Output.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  if(pos  >  0)  {  Output.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    Output.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
12	[BUG]  [BUGGY]  char[]  input  =  input.toCharArray();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.toCharArray();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toCharArray();	  char[]    input    =    input.toString();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	16	None	replace
13	[BUG]  [BUGGY]  Char[]  input  =  input.toString();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  input.toString();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.toString();	  Char[]    input    =    input.toChars();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
14	[BUG]  [BUGGY]  Char[]  input  =  output.toChars();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  output.toChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  output.toChars();	  Char[]    input    =    input.toChars();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
15	[BUG]  [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  int  inputLength  =  input.length();  int  outputLength  =  input.length();  [CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  int  inputLength  =  input.length();  int  outputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                int        inputLength        =        input.length();        int    outputLength    =    input.length();    int  inputLength  =  input.length();  int  outputLength  =  input.length();	  	non-compiled	[CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)	32	None	add
16	[BUG]  [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  Integer  inputLength  =  input.length();  int  outputLength  =  input.length();  [CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  Integer  inputLength  =  input.length();  int  outputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                int        inputLength        =        input.length();        int    outputLength    =    input.length();    Integer  inputLength  =  input.length();  int  outputLength  =  input.length();	  	non-compiled	[CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)	32	None	add
17	[BUG]  [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  int  outputLength  =  input.length();  int  outputLength  =  input.length();  [CE]  variable  outputLength  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  int  outputLength  =  input.length();  int  outputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                int        inputLength        =        input.length();        int    outputLength    =    input.length();    int  outputLength  =  input.length();  int  outputLength  =  input.length();	  	non-compiled	[CE]  variable  outputLength  is  already  defined  in  method  translate(CharSequence,Writer)	32	None	add
18	[BUG]  [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  int  inputLength  =  output.length();  int  outputLength  =  input.length();  [CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          int    inputLength    =    input.length();    int  outputLength  =  input.length();  int  inputLength  =  output.length();  int  outputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                int        inputLength        =        input.length();        int    outputLength    =    input.length();    int  inputLength  =  output.length();  int  outputLength  =  input.length();	  	non-compiled	[CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)	32	None	add
19	[BUG]  [BUGGY]  InputStream  input  =  input.length();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  InputStream  input  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	InputStream  input  =  input.length();	          pos    =    input.length();    InputStream    input    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
20	[BUG]  [BUGGY]  int  pos  =  input.length();  InputStream  input  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length();  InputStream  input  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length();  InputStream  input  =  input.length();	          pos    =    input.length();    InputStream    input    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	76	None	replace
21	[BUG]  [BUGGY]  pos  =  input.length();  InputStream  input  =  input.input.length();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length();  InputStream  input  =  input.input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length();  InputStream  input  =  input.input.length();	          pos    =    input.length();    InputStream    input    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
22	[BUG]  [BUGGY]  int  pos  =  input.length()  *  out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length()  *  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length()  *  out.length();	  int    pos    =    input.length()    +    out.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	100	None	replace
23	[BUG]  [BUGGY]  int  pos  =  input.length()  +  output.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length()  +  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length()  +  output.length();	  int    pos    =    input.length()    +    out.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	100	None	replace
24	[BUG]  [BUGGY]  int  pos  =  input.length()  +  this.out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length()  +  this.out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length()  +  this.out.length();	  int    pos    =    input.length()    +    out.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	100	None	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  *  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  *  pos;	  int    len    =    input.length()    /    pos;    	compilable	  [FE]  ComparisonFailure  	93	1	replace
26	[BUG]  [BUGGY]  int  len  =  input.length()  *  pos;  [FE]  ComparisonFailure  [FE]    ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  *  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  *  pos;	  int    len    =    input.length()    /    pos;    	compilable	  [FE]  ComparisonFailure  	93	1	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  /  2;	  int    len    =    input.length()    /    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	93	1	replace
28	[BUG]  [BUGGY]  int  len  =  input.length()  /  2;  [FE]  StringIndexOutOfBoundsException  [FE]      ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  /  2;	  int    len    =    input.length()    /    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	93	1	replace
29	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos  +  1));  [CE]  no  suitable  method  found  for  toChars(CharSequence,int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input,  pos  +  1));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos  +  1));	  out.write(Character.toChars(input,    pos));    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence,int)	2	None	replace
30	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos,  0));  [CE]  no  suitable  method  found  for  toChars(CharSequence,int,int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input,  pos,  0));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos,  0));	  out.write(Character.toChars(input,    pos));    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence,int,int)	2	None	replace
31	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos),  pt);  [CE]  no  suitable  method  found  for  toChars(CharSequence,int)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input,  pos),  pt);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos),  pt);	  out.write(Character.toChars(input,    pos));    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence,int)	2	None	replace
32	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos,  pt));  [CE]  cannot  find  symbol  pt  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input,  pos,  pt));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos,  pt));	  out.write(Character.toChars(input,    pos));    	non-compiled	[CE]  cannot  find  symbol  pt	2	None	replace
33	[BUG]  [BUGGY]  if(input!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    out.write('n');    pos    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
34	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  ==  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  ==  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    out.write('n');    pos    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
35	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  pos  +  1;  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  pos  +  1;	  int    len    =    input.length    -    1    +    pos;    	non-compiled	[CE]  cannot  find  symbol  length	113	None	replace
36	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  pos  +  out.length;  [CE]  cannot  find  symbol  length  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1  +  pos  +  out.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  pos  +  out.length;	  int    len    =    input.length    -    1    +    pos;    	non-compiled	[CE]  cannot  find  symbol  length	113	None	replace
37	[BUG]  [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    Integer  len  =  input.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
38	[BUG]  [BUGGY]  Integer  len  =  input.length();  int  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    int  len  =  input.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
39	[BUG]  [BUGGY]  Integer  len  =  input.length();  char[]  input  =  input.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  char[]  input  =  input.getChars();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    char[]  input  =  input.getChars();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
40	[BUG]  [BUGGY]  Integer  len  =  input.length();  char[]  input  =  input.getChars(pos);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  char[]  input  =  input.getChars(pos);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    char[]  input  =  input.getChars(pos);	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
41	[BUG]  [BUGGY]  Integer  pos  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  pos  =  input.length();	  int    pos    =    input.length()    +    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	48	None	replace
42	[BUG]  [BUGGY]  int  pos  =  output.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  output.length();	  int    pos    =    input.length()    +    1;    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	48	None	replace
43	[BUG]  [BUGGY]  if(input.length()  >  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  >  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  >  0)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  if(input.length()  >  0)  {  if(pos  <  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  >  0)  {  if(pos  <  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  >  0)  {  if(pos  <  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  char[]  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.length();	  int    len    =    input.length()    -    2;    char[]    input    =    input.length()    -    2;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	75	None	replace
46	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  input  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  input  =  input.length();	  int    len    =    input.length()    -    2;    char[]    input    =    input.length()    -    2;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	75	None	replace
47	[BUG]  [BUGGY]  Integer  len  =  input.length();  char[]  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  char[]  input  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length();  char[]  input  =  input.length();	  int    len    =    input.length()    -    2;    char[]    input    =    input.length()    -    2;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	75	None	replace
48	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  input  =  output.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  input  =  output.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  input  =  output.length();	  int    len    =    input.length()    -    2;    char[]    input    =    input.length()    -    2;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	75	None	replace
49	[BUG]  [BUGGY]  String  pos  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  String  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	String  pos  =  input.length();	  char    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	50	None	replace
50	[BUG]  [BUGGY]  Char  pos  =  input.length();  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  pos  =  input.length();	  char    pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
51	[BUG]  [BUGGY]  int  input  =  output.read(input);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  input  =  output.read(input);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  output.read(input);	  int    input    =    output.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	57	None	replace
52	[BUG]  [BUGGY]  char  input  =  output.read();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  input  =  output.read();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  input  =  output.read();	  int    input    =    output.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	57	None	replace
53	[BUG]  [BUGGY]  char[]  c  =  input.length()  +  pos;  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  c  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  c  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    char[]    c    =    input.length()    +    pos;    	non-compiled	[CE]  incompatible  types	47	None	replace
54	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  c  =  input.length()  +  pos;  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  c  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  c  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    char[]    c    =    input.length()    +    pos;    	non-compiled	[CE]  incompatible  types	47	None	replace
55	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  c  =  input.length();  [CE]  incompatible  types  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  c  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  c  =  input.length();	  int    len    =    input.length()    +    pos;    char[]    c    =    input.length()    +    pos;    	non-compiled	[CE]  incompatible  types	47	None	replace
56	[BUG]  [BUGGY]  char[]  c  =  input.length();  [CE]  incompatible  types  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  c  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  c  =  input.length();	  int    len    =    input.length()    +    pos;    char[]    c    =    input.length()    +    pos;    	non-compiled	[CE]  incompatible  types	47	None	replace
57	[BUG]  [BUGGY]  out.write(input.charAt(pos  +  1));  [CE]  cannot  find  symbol  len  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.charAt(pos  +  1));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.charAt(pos  +  1));	  out.write(input.charAt(pos));    	non-compiled	[CE]  cannot  find  symbol  len	84	None	replace
58	[BUG]  [BUGGY]  out.write(input.charAt(pos  -  1));  [CE]  cannot  find  symbol  len  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.charAt(pos  -  1));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.charAt(pos  -  1));	  out.write(input.charAt(pos));    	non-compiled	[CE]  cannot  find  symbol  len	84	None	replace
59	[BUG]  [BUGGY]  out.write(input.charAt(pos,  pos));  [CE]  method  charAt  in  interface  CharSequence  cannot  be  applied  to  given  types;  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.charAt(pos,  pos));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.charAt(pos,  pos));	  out.write(input.charAt(pos));    	non-compiled	[CE]  method  charAt  in  interface  CharSequence  cannot  be  applied  to  given  types;	84	None	replace
60	[BUG]  [BUGGY]  char[]  inputLength  =  input.length();  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  inputLength  =  input.length();	          int    inputLength    =    input.length();    char[]    inputLength    =    input.length();    	non-compiled	[CE]  incompatible  types	31	None	replace
61	[BUG]  [BUGGY]  Integer  inputLength  =  input.length();  [CE]  cannot  find  symbol  len  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  inputLength  =  input.length();	          int    inputLength    =    input.length();    char[]    inputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	31	None	replace
62	[BUG]  [BUGGY]  if(input!=  null)  {  pos  =  input.length();  int  pos  =  input.length();  }  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  =  input.length();  int  pos  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  =  input.length();  int  pos  =  input.length();  }	          pos    =    input.length();    int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	8	None	replace
63	[BUG]  [BUGGY]  if(input.length()  >  0)  {  pos  =  input.length();  int  pos  =  input.length();  }  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  >  0)  {  pos  =  input.length();  int  pos  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  >  0)  {  pos  =  input.length();  int  pos  =  input.length();  }	          pos    =    input.length();    int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	8	None	replace
64	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('n',  pos);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.lastIndexOf('n',  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('n',  pos);	  pos    +=    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
65	[BUG]  [BUGGY]  pos  +=  input.indexOf('n');  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.indexOf('n');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.indexOf('n');	  pos    +=    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
66	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('n')+  1;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.lastIndexOf('n')+  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('n')+  1;	  pos    +=    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
67	[BUG]  [BUGGY]  out.write(Integer.toHexString(input));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toHexString(input));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toHexString(input));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	85	None	replace
68	[BUG]  [BUGGY]  out.write(Integer.toHexString(pos  +  1));  [CE]  cannot  find  symbol  len  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toHexString(pos  +  1));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toHexString(pos  +  1));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  cannot  find  symbol  len	85	None	replace
69	[BUG]  [BUGGY]  out.write(Integer.toHexString(pos)+  1);  [CE]  cannot  find  symbol  len  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toHexString(pos)+  1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toHexString(pos)+  1);	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  cannot  find  symbol  len	85	None	replace
70	[BUG]  [BUGGY]  char  len  =  input.length()  +  pos;  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    char    len    =    input.length()    +    pos;    	non-compiled	[CE]  possible  loss  of  precision	97	None	replace
71	[BUG]  [BUGGY]  int  len  =  input.length();  char  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char  len  =  input.length();	  int    len    =    input.length()    +    pos;    char    len    =    input.length()    +    pos;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	97	None	replace
72	[BUG]  [BUGGY]  Char  len  =  input.length()  +  pos;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    char    len    =    input.length()    +    pos;    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
73	[BUG]  [BUGGY]  int  len  =  input.length();  String  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  String  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  String  len  =  input.length();	  int    len    =    input.length()    -    2;    char    len    =    input.length()    -    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	90	None	replace
74	[BUG]  [BUGGY]  Char[]  input  =  output.getChars();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  output.getChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  output.getChars();	  Char[]    input    =    input.getChars();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
75	[BUG]  [BUGGY]  Char[]  input  =  this.input.getChars();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  this.input.getChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  this.input.getChars();	  Char[]    input    =    input.getChars();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
76	[BUG]  [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }	          pos    +=    input.length();    int    pos    +=    input.length();    	non-compiled	[CE]  ';'  expected	36	None	replace
77	[BUG]  [BUGGY]  if(input.length()  >  0)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  >  0)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  >  0)  {  pos  +=  input.length();  int  pos  +=  input.length();  }	          pos    +=    input.length();    int    pos    +=    input.length();    	non-compiled	[CE]  ';'  expected	36	None	replace
78	[BUG]  [BUGGY]  int  pos  =  input.length();  pos  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length();  pos  =  input.length();	          pos    =    input.length();    pos    =    output.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	9	None	replace
79	[BUG]  [BUGGY]  int  pos  =  input.length();  pos  =  output.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length();  pos  =  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length();  pos  =  output.length();	          pos    =    input.length();    pos    =    output.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	9	None	replace
80	[BUG]  [BUGGY]  pos  =  output.length();  [CE]  cannot  find  symbol  output  [FE]                ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  output.length();	          pos    =    input.length();    pos    =    output.length();    	non-compiled	[CE]  cannot  find  symbol  output	9	None	replace
81	[BUG]  [BUGGY]  Integer  len  =  input.length();  char[]  c  =  input.length();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  char[]  c  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length();  char[]  c  =  input.length();	  int    len    =    input.length()    -    2;    char[]    c    =    input.length()    -    2;    	non-compiled	[CE]  incompatible  types	74	None	replace
82	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  c  =  input.getChars(pos,  input.length());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  c  =  input.getChars(pos,  input.length());  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  c  =  input.getChars(pos,  input.length());	  int    len    =    input.length()    -    2;    char[]    c    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
83	[BUG]  [BUGGY]  Int  len  =  input.length()  +  pos;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Int  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Int  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    Int    len    =    input.length()    +    pos;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
84	[BUG]  [BUGGY]  int  len  =  input.length();  Int  len  =  input.length()  +  pos;  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  Int  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  Int  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    Int    len    =    input.length()    +    pos;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
85	[BUG]  [BUGGY]  int  inputLen  =  input.length();  [CE]  cannot  find  symbol  len  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  inputLen  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  inputLen  =  input.length();	  int    inputLength    =    input.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol  len	40	None	replace
86	[BUG]  [BUGGY]  int  pos  +=  input.length();  pos  +=  input.length();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length();  pos  +=  input.length();	          pos    +=    input.length();    pos    +=    in.length();    	non-compiled	[CE]  ';'  expected	38	None	replace
87	[BUG]  [BUGGY]  int  pos  +=  input.length();  pos  +=  output.length();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length();  pos  +=  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length();  pos  +=  output.length();	          pos    +=    input.length();    pos    +=    in.length();    	non-compiled	[CE]  ';'  expected	38	None	replace
88	[BUG]  [BUGGY]  int  pos  +=  input.length();  pos  +=  out.length();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length();  pos  +=  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length();  pos  +=  out.length();	          pos    +=    input.length();    pos    +=    in.length();    	non-compiled	[CE]  ';'  expected	38	None	replace
89	[BUG]  [BUGGY]  out.write(Character.codePointAt(pos,  input));  [CE]  no  suitable  method  found  for  codePointAt(int,CharSequence)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.codePointAt(pos,  input));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(pos,  input));	  out.write(Character.codePointAt(pos));    	non-compiled	[CE]  no  suitable  method  found  for  codePointAt(int,CharSequence)	119	None	replace
90	[BUG]  [BUGGY]  out.write(Character.codePointAt(pos,  input.length));  [CE]  cannot  find  symbol  length  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.codePointAt(pos,  input.length));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(pos,  input.length));	  out.write(Character.codePointAt(pos));    	non-compiled	[CE]  cannot  find  symbol  length	119	None	replace
91	[BUG]  [BUGGY]  out.write(Character.codePointAt(pos,  pos));  [CE]  no  suitable  method  found  for  codePointAt(int,int)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.codePointAt(pos,  pos));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(pos,  pos));	  out.write(Character.codePointAt(pos));    	non-compiled	[CE]  no  suitable  method  found  for  codePointAt(int,int)	119	None	replace
92	[BUG]  [BUGGY]  int  len  =  input.length();  int  len  =  output.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  int  len  =  output.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  int  len  =  output.length();	  int    len    =    input.length()    +    1;    int    len    =    output.length()    +    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	108	None	replace
93	[BUG]  [BUGGY]  char  len  =  input.length();  int  len  =  output.length();  [CE]  possible  loss  of  precision  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  int  len  =  output.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  int  len  =  output.length();	  int    len    =    input.length()    +    1;    int    len    =    output.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	108	None	replace
94	[BUG]  [BUGGY]  Integer  len  =  input.length();  int  len  =  output.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  int  len  =  output.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length();  int  len  =  output.length();	  int    len    =    input.length()    +    1;    int    len    =    output.length()    +    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	108	None	replace
95	[BUG]  [BUGGY]  if(inputLength  >  0)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  [CE]  cannot  find  symbol  inputLength  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(inputLength  >  0)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(inputLength  >  0)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }	          int    inputLength    =    input.length();    int    outputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  inputLength	33	None	replace
96	[BUG]  [BUGGY]  if(inputLength  >  0)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  inputLength  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(inputLength  >  0)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(inputLength  >  0)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    inputLength    =    input.length();    int    outputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  inputLength	33	None	replace
97	[BUG]  [BUGGY]  pos  =  input.length()  +  charAt(pos);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  charAt(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  charAt(pos);	  pos    =    input.length()    +    out.charAt(pos);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
98	[BUG]  [BUGGY]  pos  =  input.length()  +  in.charAt(pos);  [CE]  cannot  find  symbol  in  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  in.charAt(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  in.charAt(pos);	  pos    =    input.length()    +    out.charAt(pos);    	non-compiled	[CE]  cannot  find  symbol  in	101	None	replace
99	[BUG]  [BUGGY]  pos  =  input.length()  +  this.charAt(pos);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  this.charAt(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  this.charAt(pos);	  pos    =    input.length()    +    out.charAt(pos);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
100	[BUG]  [BUGGY]  int  len  =  out.length  -  1  +  input.length;  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  out.length  -  1  +  input.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  out.length  -  1  +  input.length;	  int    len    =    input.length    -    1    +    out.length;    	non-compiled	[CE]  cannot  find  symbol  length	79	None	replace
101	[BUG]  [BUGGY]  int  len  =  output.length  -  1  +  out.length;  [CE]  cannot  find  symbol  output  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  output.length  -  1  +  out.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  output.length  -  1  +  out.length;	  int    len    =    input.length    -    1    +    out.length;    	non-compiled	[CE]  cannot  find  symbol  output	79	None	replace
102	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
103	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
104	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
105	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  If(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  If(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    If(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	non-compiled	[CE]  ';'  expected	86	None	add
106	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	non-compiled	[CE]  not  a  statement	86	None	add
107	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  int  len  =  input.length()  +  pos  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  int  len  =  input.length()  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    int  len  =  input.length()  +  pos  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	27	None	add
108	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  Integer  len  =  input.length()  +  pos  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  Integer  len  =  input.length()  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    Integer  len  =  input.length()  +  pos  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	27	None	add
109	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  Int  len  =  input.length()  +  pos  +  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  Int  len  =  input.length()  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    Int  len  =  input.length()  +  pos  +  1;	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
110	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  char[]  c  =  input.length()  +  pos  +  1;  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  char[]  c  =  input.length()  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    char[]  c  =  input.length()  +  pos  +  1;	  	non-compiled	[CE]  incompatible  types	27	None	add
111	[BUG]  [BUGGY]  Int  inputLength  =  input.length();  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Int  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Int  inputLength  =  input.length();	          int    inputLength    =    input.length();    Int    inputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
112	[BUG]  [BUGGY]  char  input  =  out.read();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  input  =  out.read();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  input  =  out.read();	  int    input    =    out.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	55	None	replace
113	[BUG]  [BUGGY]  int  input  =  out.read(input);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  input  =  out.read(input);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  out.read(input);	  int    input    =    out.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	55	None	replace
114	[BUG]  [BUGGY]  int  len  =  input.length  -  1);  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1);	  int    len    =    input.length    -    1L;    	non-compiled	[CE]  ';'  expected	80	None	replace
115	[BUG]  [BUGGY]  Integer  input  =  input.length()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  input  =  input.length()  -  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  input  =  input.length()  -  1;	  Integer    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	98	None	replace
116	[BUG]  [BUGGY]  Integer  input  =  input.length()  +  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  input  =  input.length()  +  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  input  =  input.length()  +  1;	  Integer    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	98	None	replace
117	[BUG]  [BUGGY]  Integer  input  =  output.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  input  =  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  input  =  output.length();	  Integer    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	98	None	replace
118	[BUG]  [BUGGY]  if(pos  <  1)  {  out.write('n');  pos++;  }  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  1)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  1)  {  out.write('n');  pos++;  }	  if(pos    <    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
119	[BUG]  [BUGGY]  if(pos  <  0)  {  out.write('N');  pos++;  }  [CE]  cannot  find  symbol  len  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  0)  {  out.write('N');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  out.write('N');  pos++;  }	  if(pos    <    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
120	[BUG]  [BUGGY]  CharSequence  input  =  input.getOutputChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getOutputChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getOutputChars();	  char[]    input    =    input.getOutputChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	94	None	replace
121	[BUG]  [BUGGY]  Char[]  input  =  input.getOutputChars();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  input.getOutputChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.getOutputChars();	  char[]    input    =    input.getOutputChars();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
122	[BUG]  [BUGGY]  if(pos  <  0)  {  if(pos  >=  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  0)  {  if(pos  >=  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  if(pos  >=  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    If(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
123	[BUG]  [BUGGY]  if(pos  <  0)  {  if(pos  >  1)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  0)  {  if(pos  >  1)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  if(pos  >  1)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    If(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  int  len  =  input.length  -  4;  [CE]  cannot  find  symbol  length  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  4;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  4;	  int    len    =    input.length    -    3;    	non-compiled	[CE]  cannot  find  symbol  length	65	None	replace
125	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  -  pos  +  1;	  int    len    =    input.length()    +    pos    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
126	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  -  pos  +  1;	  int    len    =    input.length()    +    pos    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
127	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  /  pos  +  1;	  int    len    =    input.length()    +    pos    +    1;    	compilable	  [FE]  ArithmeticException  	28	1	replace
128	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos  +  1;  [FE]  ArithmeticException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  /  pos  +  1;	  int    len    =    input.length()    +    pos    +    1;    	compilable	  [FE]  ArithmeticException  	28	1	replace
129	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  +  pos  +  2;	  int    len    =    input.length()    +    pos    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
130	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  +  pos  +  2;	  int    len    =    input.length()    +    pos    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
131	[BUG]  [BUGGY]  char[]  input  =  input.toChars(pos,  out);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.toChars(pos,  out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toChars(pos,  out);	  char[]    input    =    input.toChars(pos);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
132	[BUG]  [BUGGY]  char[]  input  =  input.toChars(pos  +  1);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.toChars(pos  +  1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toChars(pos  +  1);	  char[]    input    =    input.toChars(pos);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
133	[BUG]  [BUGGY]  char[]  input  =  input.toChars(pos)+  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.toChars(pos)+  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toChars(pos)+  1;	  char[]    input    =    input.toChars(pos);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
134	[BUG]  [BUGGY]  int  pos  >  0)  {  out.write('n');  pos++;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  >  0)  {  out.write('n');  pos++;  }	  pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
135	[BUG]  [BUGGY]  pos  >  0)  {  output.write('n');  pos++;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  >  0)  {  output.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  >  0)  {  output.write('n');  pos++;  }	  pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
136	[BUG]  [BUGGY]  pos  +=  output.length;  [CE]  cannot  find  symbol  output  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  output.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  output.length;	  pos    +=    input.length;    	non-compiled	[CE]  cannot  find  symbol  output	67	None	replace
137	[BUG]  [BUGGY]  pos  +=  input.length+  1;  [CE]  cannot  find  symbol  length  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.length+  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length+  1;	  pos    +=    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	67	None	replace
138	[BUG]  [BUGGY]  pos  +=  out.length;  [CE]  cannot  find  symbol  length  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  out.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  out.length;	  pos    +=    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	67	None	replace
139	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos;  int  len  =  input.length()  /  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos;  int  len  =  input.length()  /  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    /    pos;    int  len  =  input.length()  /  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	92	None	add
140	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos;  Int  len  =  input.length()  /  pos;  [CE]  cannot  find  symbol  [FE]      ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos;  Int  len  =  input.length()  /  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    /    pos;    Int  len  =  input.length()  /  pos;	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
141	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos;  char[]  c  =  input.length()  /  pos;  [CE]  incompatible  types  [FE]        ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos;  char[]  c  =  input.length()  /  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    /    pos;    char[]  c  =  input.length()  /  pos;	  	non-compiled	[CE]  incompatible  types	92	None	add
142	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos;  int  len  =  output.length()  /  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos;  int  len  =  output.length()  /  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    /    pos;    int  len  =  output.length()  /  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	92	None	add
143	[BUG]  [BUGGY]  pos  =  input.length()  +  output.charAt(0);  [CE]  cannot  find  symbol  output  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  output.charAt(0);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  output.charAt(0);	  pos    =    input.length()    +    out.charAt(0);    	non-compiled	[CE]  cannot  find  symbol  output	102	None	replace
144	[BUG]  [BUGGY]  pos  =  input.length()  +  in.charAt(0);  [CE]  cannot  find  symbol  in  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  in.charAt(0);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  in.charAt(0);	  pos    =    input.length()    +    out.charAt(0);    	non-compiled	[CE]  cannot  find  symbol  in	102	None	replace
145	[BUG]  [BUGGY]  pos  =  input.length()  +  charAt(0);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  charAt(0);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  charAt(0);	  pos    =    input.length()    +    out.charAt(0);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
146	[BUG]  [BUGGY]  int  len  =  output.length()  +  pos;  [CE]  cannot  find  symbol  output  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  output.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  output.length()  +  pos;	  int    len    =    input.length()    +    pos;    int    len    =    output.length()    +    pos;    	non-compiled	[CE]  cannot  find  symbol  output	111	None	replace
147	[BUG]  [BUGGY]  String  inputLength  =  input.length();  [CE]  incompatible  types  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  String  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	String  inputLength  =  input.length();	  char    inputLength    =    input.length();    	non-compiled	[CE]  incompatible  types	41	None	replace
148	[BUG]  [BUGGY]  Char  inputLength  =  input.length();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  inputLength  =  input.length();	  char    inputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
149	[BUG]  [BUGGY]  Character  inputLength  =  input.length();  [CE]  incompatible  types  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Character  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Character  inputLength  =  input.length();	  char    inputLength    =    input.length();    	non-compiled	[CE]  incompatible  types	41	None	replace
150	[BUG]  [BUGGY]  pos  =  input.length()  +  2;  [CE]  cannot  find  symbol  len  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  2;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  2;	  pos    =    input.length()    *    2;    	non-compiled	[CE]  cannot  find  symbol  len	63	None	replace
151	[BUG]  [BUGGY]  pos  =  input.length()  /  2;  [CE]  cannot  find  symbol  len  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  /  2;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  /  2;	  pos    =    input.length()    *    2;    	non-compiled	[CE]  cannot  find  symbol  len	63	None	replace
152	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('.',  pos);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('.',  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('.',  pos);	  pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
153	[BUG]  [BUGGY]  pos  =  input.indexOf('.');  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.indexOf('.');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.indexOf('.');	  pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
154	[BUG]  [BUGGY]  int  len  =  input.length  +  1;  [CE]  cannot  find  symbol  length  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  +  1;	  int    len    =    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	88	None	replace
155	[BUG]  [BUGGY]  if(input!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  [CE]  cannot  find  symbol  len  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  =  input.length();  pos  =  input.length();  }	          pos    =    input.length();    pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	7	None	replace
156	[BUG]  [BUGGY]  if(input.length()  >  0)  {  pos  =  input.length();  pos  =  input.length();  }  [CE]  cannot  find  symbol  len  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  >  0)  {  pos  =  input.length();  pos  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  >  0)  {  pos  =  input.length();  pos  =  input.length();  }	          pos    =    input.length();    pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	7	None	replace
157	[BUG]  [BUGGY]  if(input!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  else  {  out.write('n');  }  [CE]  cannot  find  symbol  len  [FE]        ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  else  {  out.write('n');  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  else  {  out.write('n');  }	          pos    =    input.length();    pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	7	None	replace
158	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	Integer  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    Integer    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	replace
159	[BUG]  [BUGGY]  Integer  len  =  input.length()  +  pos;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    Integer    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	replace
160	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	Integer  len  =  input.length()  -  pos;	  int    len    =    input.length()    +    pos;    Integer    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	replace
161	[BUG]  [BUGGY]  Integer  len  =  input.length()  -  pos;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length()  -  pos;	  int    len    =    input.length()    +    pos;    Integer    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	replace
162	[BUG]  [BUGGY]  int  len  =  input.length();  Int  len  =  input.length();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  Int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  Int  len  =  input.length();	  int    len    =    input.length()    -    1;    Int    len    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
163	[BUG]  [BUGGY]  Int  len  =  input.length();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Int  len  =  input.length();	  int    len    =    input.length()    -    1;    Int    len    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
164	[BUG]  [BUGGY]  char  len  =  input.length();  Int  len  =  input.length();  [CE]  possible  loss  of  precision  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  Int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  Int  len  =  input.length();	  int    len    =    input.length()    -    1;    Int    len    =    input.length()    -    1;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
165	[BUG]  [BUGGY]  Int  len  =  input.length();  Int  len  =  input.length();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Int  len  =  input.length();  Int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Int  len  =  input.length();  Int  len  =  input.length();	  int    len    =    input.length()    -    2;    Int    len    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
166	[BUG]  [BUGGY]  out.write(input,  pos);  [CE]  no  suitable  method  found  for  write(CharSequence,int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input,  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input,  pos);	  out.write(input);    	non-compiled	[CE]  no  suitable  method  found  for  write(CharSequence,int)	82	None	replace
167	[BUG]  [BUGGY]  out.write(Integer.toString(pos),  input);  [CE]  no  suitable  method  found  for  write(String,CharSequence)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(pos),  input);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(pos),  input);	  out.write(input);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,CharSequence)	82	None	replace
168	[BUG]  [BUGGY]  out.write(Integer.toString(pos,  input));  [CE]  no  suitable  method  found  for  toString(int,CharSequence)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(pos,  input));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(pos,  input));	  out.write(input);    	non-compiled	[CE]  no  suitable  method  found  for  toString(int,CharSequence)	82	None	replace
169	[BUG]  [BUGGY]  if(input.length()  >  0)  {  pos  +=  input.length();  pos  +=  input.length();  }  [CE]  cannot  find  symbol  len  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  >  0)  {  pos  +=  input.length();  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  >  0)  {  pos  +=  input.length();  pos  +=  input.length();  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	35	None	replace
170	[BUG]  [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  [CE]  cannot  find  symbol  len  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	35	None	replace
171	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  pos  +=  input.length();  pos  +=  input.length();  }  [CE]  cannot  find  symbol  len  [FE]        ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input.length()  ==  0)  {  pos  +=  input.length();  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input.length()  ==  0)  {  pos  +=  input.length();  pos  +=  input.length();  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	35	None	replace
172	[BUG]  [BUGGY]  int  len  =  input.length();  Integer  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  Integer  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  Integer  len  =  input.length();	  int    len    =    input.length()    +    1;    Integer    len    =    input.length()    +    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	69	None	replace
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  input.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                pos        =        input.length();        pos    =    input.length();    pos  =  input.length();  pos  =  input.length();	  	compilable	  [FE]  ComparisonFailure  	6	1	add
174	[BUG]  [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  input.length();  pos  =  input.length();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  input.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        =        input.length();        pos    =    input.length();    pos  =  input.length();  pos  =  input.length();	  	compilable	  [FE]  ComparisonFailure  	6	1	add
175	[BUG]  [BUGGY]          pos    =    input.length();    pos  =  input.length();  int  pos  =  input.length();  pos  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    =    input.length();    pos  =  input.length();  int  pos  =  input.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        =        input.length();        pos    =    input.length();    int  pos  =  input.length();  pos  =  input.length();	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	6	None	add
176	[BUG]  [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  input.length();  pos  =  output.length();  [CE]  cannot  find  symbol  output  [FE]        ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  input.length();  pos  =  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        =        input.length();        pos    =    input.length();    pos  =  input.length();  pos  =  output.length();	  	non-compiled	[CE]  cannot  find  symbol  output	6	None	add
177	[BUG]  [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  output.length();  pos  =  input.length();  [CE]  cannot  find  symbol  output  [FE]          ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  output.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        =        input.length();        pos    =    input.length();    pos  =  output.length();  pos  =  input.length();	  	non-compiled	[CE]  cannot  find  symbol  output	6	None	add
178	[BUG]  [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  in.length();  pos  =  input.length();  [CE]  cannot  find  symbol  in  [FE]            ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    =    input.length();    pos  =  input.length();  pos  =  in.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        =        input.length();        pos    =    input.length();    pos  =  in.length();  pos  =  input.length();	  	non-compiled	[CE]  cannot  find  symbol  in	6	None	add
179	[BUG]  [BUGGY]  char  len  =  input.length();  int  len  =  input.length();  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  int  len  =  input.length();	  int    len    =    input.length()    +    pos;    int    len    =    input.length()    +    pos;    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
180	[BUG]  [BUGGY]  pos  +=  input.indexOf('/')+  1;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.indexOf('/')+  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.indexOf('/')+  1;	  pos    +=    input.lastIndexOf('/')+    1;    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
181	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('/')+  2;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.lastIndexOf('/')+  2;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('/')+  2;	  pos    +=    input.lastIndexOf('/')+    1;    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
182	[BUG]  [BUGGY]  out.write(input.length);  [CE]  cannot  find  symbol  length  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.length);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.length);	  out.write(pt);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
183	[BUG]  [BUGGY]  out.write(buf,  pos);  [CE]  cannot  find  symbol  buf  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(buf,  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(buf,  pos);	  out.write(pt);    	non-compiled	[CE]  cannot  find  symbol  buf	3	None	replace
184	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  -  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	Integer  len  =  input.length()  -  1;	  Integer    len    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
185	[BUG]  [BUGGY]  Integer  len  =  input.length()  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  -  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length()  -  1;	  Integer    len    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
186	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	Integer  len  =  input.length()  +  1;	  Integer    len    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
187	[BUG]  [BUGGY]  Integer  len  =  input.length()  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length()  +  1;	  Integer    len    =    input.length();    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
188	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  -  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	Integer  len  =  input.length()  -  2;	  Integer    len    =    input.length();    	compilable	  [FE]  ComparisonFailure  	78	1	replace
189	[BUG]  [BUGGY]  Integer  len  =  input.length()  -  2;  [FE]  ComparisonFailure  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length()  -  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length()  -  2;	  Integer    len    =    input.length();    	compilable	  [FE]  ComparisonFailure  	78	1	replace
190	[BUG]  [BUGGY]  pos  +=  input.length()  /  2;  [CE]  cannot  find  symbol  len  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.length()  /  2;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length()  /  2;	  pos    +=    input.length()    *    2;    	non-compiled	[CE]  cannot  find  symbol  len	59	None	replace
191	[BUG]  [BUGGY]  int  pos  +=  input.length()  *  2;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length()  *  2;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length()  *  2;	  pos    +=    input.length()    *    2;    	non-compiled	[CE]  ';'  expected	59	None	replace
192	[BUG]  [BUGGY]  out.write('0');  pos++;  [CE]  cannot  find  symbol  len  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write('0');  pos++;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write('0');  pos++;	  out.write('n');    pos++;    	non-compiled	[CE]  cannot  find  symbol  len	13	None	replace
193	[BUG]  [BUGGY]  out.write(c);  pos++;  [CE]  cannot  find  symbol  c  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(c);  pos++;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(c);  pos++;	  out.write('n');    pos++;    	non-compiled	[CE]  cannot  find  symbol  c	13	None	replace
194	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  input  =  input.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  input  =  input.getChars();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  input  =  input.getChars();	  int    len    =    input.length()    -    1;    char[]    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	54	None	replace
195	[BUG]  [BUGGY]  int  pos  =  input.read(out);  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.read(out);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.read(out);	  int    pos    =    input.read();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	115	None	replace
196	[BUG]  [BUGGY]  int  pos  =  input.read(input);  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.read(input);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.read(input);	  int    pos    =    input.read();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	115	None	replace
197	[BUG]  [BUGGY]  int  pos  =  input.readInt();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.readInt();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.readInt();	  int    pos    =    input.read();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	115	None	replace
198	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
199	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
200	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
201	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
202	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('  [CE]  illegal  line  end  in  character  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('	  	non-compiled	[CE]  illegal  line  end  in  character  literal	17	None	add
203	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
204	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n'  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n'  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n'	  	non-compiled	[CE]  ')'  expected	17	None	add
205	[BUG]  [BUGGY]  CharSequence  input  =  input.getInputChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getInputChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getInputChars();	  char[]    input    =    input.getInputChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	105	None	replace
206	[BUG]  [BUGGY]  Char[]  input  =  input.getInputChars();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  input.getInputChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.getInputChars();	  char[]    input    =    input.getInputChars();    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
207	[BUG]  [BUGGY]  int  input  =  input.read(pos);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  input  =  input.read(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  input.read(pos);	  int    input    =    input.read(input);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	114	None	replace
208	[BUG]  [BUGGY]  int  input  =  input.read(out);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  input  =  input.read(out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  input.read(out);	  int    input    =    input.read(input);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	114	None	replace
209	[BUG]  [BUGGY]  String  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  String  input  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	String  input  =  input.length();	  char    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	42	None	replace
210	[BUG]  [BUGGY]  Char  input  =  input.length();  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  input  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  input  =  input.length();	  char    input    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
211	[BUG]  [BUGGY]  char  pos  =  out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  pos  =  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  pos  =  out.length();	  int    pos    =    out.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	99	None	replace
212	[BUG]  [BUGGY]  float  pos  =  out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  float  pos  =  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	float  pos  =  out.length();	  int    pos    =    out.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	99	None	replace
213	[BUG]  [BUGGY]  int  len  =  input.length();  int  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  int  len  =  input.length();	  int    len    =    input.length()    +    1;    int    len    =    input.length()    +    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	68	None	replace
214	[BUG]  [BUGGY]  CharSequence  input  =  input.getChars(pos);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getChars(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getChars(pos);	  CharSequence    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	22	None	replace
215	[BUG]  [BUGGY]  CharSequence  input  =  input.getValue();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getValue();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getValue();	  CharSequence    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	22	None	replace
216	[BUG]  [BUGGY]  CharSequence  input  =  output.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  output.getChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  output.getChars();	  CharSequence    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	22	None	replace
217	[BUG]  [BUGGY]  pos  =  0;  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  0;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  0;	  if(pos    ==    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	117	None	replace
218	[BUG]  [BUGGY]  out.write(Character.codePointAt(input,  pos  +  1));  [CE]  cannot  find  symbol  len  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.codePointAt(input,  pos  +  1));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(input,  pos  +  1));	  out.write(Character.codePointAt(input,    pos));    	non-compiled	[CE]  cannot  find  symbol  len	118	None	replace
219	[BUG]  [BUGGY]  out.write(Character.codePointAt(input,  pos)+  1);  [CE]  cannot  find  symbol  len  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.codePointAt(input,  pos)+  1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(input,  pos)+  1);	  out.write(Character.codePointAt(input,    pos));    	non-compiled	[CE]  cannot  find  symbol  len	118	None	replace
220	[BUG]  [BUGGY]  out.write(Integer.toString(input));  [CE]  no  suitable  method  found  for  toString(CharSequence)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(input));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(input));	  out.write(Character.toChars(input));    	non-compiled	[CE]  no  suitable  method  found  for  toString(CharSequence)	1	None	replace
221	[BUG]  [BUGGY]  out.write(Character.toChars(input),  pos);  [CE]  no  suitable  method  found  for  toChars(CharSequence)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input),  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input),  pos);	  out.write(Character.toChars(input));    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence)	1	None	replace
222	[BUG]  [BUGGY]  out.write(input.toChars(char));  [CE]  '.class'  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.toChars(char));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.toChars(char));	  out.write(Character.toChars(input));    	non-compiled	[CE]  '.class'  expected	1	None	replace
223	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  int  len  =  input.length()  -  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos;  int  len  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    pos;    int  len  =  input.length()  -  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	25	None	add
224	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  Int  len  =  input.length()  -  pos;  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos;  Int  len  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    pos;    Int  len  =  input.length()  -  pos;	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
225	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  char[]  c  =  input.length()  -  pos;  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos;  char[]  c  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    pos;    char[]  c  =  input.length()  -  pos;	  	non-compiled	[CE]  incompatible  types	25	None	add
226	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  int  len  =  output.length()  -  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos;  int  len  =  output.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    pos;    int  len  =  output.length()  -  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	25	None	add
227	[BUG]  [BUGGY]  out.write(Integer.toString(pos  +  1));  [CE]  cannot  find  symbol  len  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(pos  +  1));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(pos  +  1));	  out.write(Integer.toString(pos));    	non-compiled	[CE]  cannot  find  symbol  len	83	None	replace
228	[BUG]  [BUGGY]  out.write(Integer.toString(pos)+  1);  [CE]  cannot  find  symbol  len  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(pos)+  1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(pos)+  1);	  out.write(Integer.toString(pos));    	non-compiled	[CE]  cannot  find  symbol  len	83	None	replace
229	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('n',  pos);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('n',  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('n',  pos);	  pos    =    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
230	[BUG]  [BUGGY]  pos  =  input.indexOf('n');  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.indexOf('n');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.indexOf('n');	  pos    =    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
231	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('n')+  1;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('n')+  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('n')+  1;	  pos    =    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
232	[BUG]  [BUGGY]  Char[]  input  =  input.toCharsArray();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  input.toCharsArray();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.toCharsArray();	  char[]    input    =    input.toCharsArray();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
233	[BUG]  [BUGGY]  char[]  input  =  output.toCharsArray();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  output.toCharsArray();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  output.toCharsArray();	  char[]    input    =    input.toCharsArray();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	15	None	replace
234	[BUG]  [BUGGY]  CharSequence  input  =  input.toCharsArray();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.toCharsArray();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.toCharsArray();	  char[]    input    =    input.toCharsArray();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	15	None	replace
235	[BUG]  [BUGGY]  int  pos  =  input.lastIndexOf('.',  pos);  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.lastIndexOf('.',  pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.lastIndexOf('.',  pos);	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
236	[BUG]  [BUGGY]  int  pos  =  input.lastIndexOf('.',  0);  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.lastIndexOf('.',  0);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.lastIndexOf('.',  0);	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
237	[BUG]  [BUGGY]  int  pos  =  input.lastIndexOf('.',  out);  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.lastIndexOf('.',  out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.lastIndexOf('.',  out);	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
238	[BUG]  [BUGGY]  char  pos  =  input.lastIndexOf('.');  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  pos  =  input.lastIndexOf('.');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  pos  =  input.lastIndexOf('.');	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
239	[BUG]  [BUGGY]  int  len  =  pos.length();  [CE]  int  cannot  be  dereferenced  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  pos.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  pos.length();	  int    len    =    output.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                pos        +=        input.length();        pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();	  	compilable	  [FE]  ComparisonFailure  	34	1	add
241	[BUG]  [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();  pos  +=  input.length();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        +=        input.length();        pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();	  	compilable	  [FE]  ComparisonFailure  	34	1	add
242	[BUG]  [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  int  pos  +=  input.length();  pos  +=  input.length();  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  int  pos  +=  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        +=        input.length();        pos    +=    input.length();    int  pos  +=  input.length();  pos  +=  input.length();	  	non-compiled	[CE]  ';'  expected	34	None	add
243	[BUG]  [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();  pos  +=  output.length();  [CE]  cannot  find  symbol  output  [FE]        ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  input.length();  pos  +=  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        +=        input.length();        pos    +=    input.length();    pos  +=  input.length();  pos  +=  output.length();	  	non-compiled	[CE]  cannot  find  symbol  output	34	None	add
244	[BUG]  [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  output.length();  pos  +=  input.length();  [CE]  cannot  find  symbol  output  [FE]          ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  +=  output.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        +=        input.length();        pos    +=    input.length();    pos  +=  output.length();  pos  +=  input.length();	  	non-compiled	[CE]  cannot  find  symbol  output	34	None	add
245	[BUG]  [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  int  pos  =  input.length();  pos  +=  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  int  pos  =  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        +=        input.length();        pos    +=    input.length();    int  pos  =  input.length();  pos  +=  input.length();	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	34	None	add
246	[BUG]  [BUGGY]  int  pos  =  input.length();  pos  =  out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length();  pos  =  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length();  pos  =  out.length();	          pos    =    input.length();    pos    =    in.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	10	None	replace
247	[BUG]  [BUGGY]  int  pos  =  input.length();  pos  =  in.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.length();  pos  =  in.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length();  pos  =  in.length();	          pos    =    input.length();    pos    =    in.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	10	None	replace
248	[BUG]  [BUGGY]  if(pos  >  0)  {  output.write('n');  pos++;  }  [CE]  cannot  find  symbol  output  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  >  0)  {  output.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  >  0)  {  output.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    output.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  output	120	None	replace
249	[BUG]  [BUGGY]  if(pos  >  0)  {  out.write('n');  pos++;  }  else  {  output.write('n');  pos++;  }  [CE]  cannot  find  symbol  output  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  >  0)  {  out.write('n');  pos++;  }  else  {  output.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  >  0)  {  out.write('n');  pos++;  }  else  {  output.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    output.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  output	120	None	replace
250	[BUG]  [BUGGY]  String  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  String  input  =  input.read();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	String  input  =  input.read();	  char    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	56	None	replace
251	[BUG]  [BUGGY]  Char  input  =  input.read();  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  input  =  input.read();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  input  =  input.read();	  char    input    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
252	[BUG]  [BUGGY]  Integer  len  =  input.length();  char  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  char  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length();  char  len  =  input.length();	  int    len    =    input.length()    +    1;    char    len    =    input.length()    +    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	89	None	replace
253	[BUG]  [BUGGY]  if(input!=  null)  {  pos  =  input.length();  int  pos  =  input.length();  }  else  {  out.write(out);  return;  }  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  =  input.length();  int  pos  =  input.length();  }  else  {  out.write(out);  return;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  =  input.length();  int  pos  =  input.length();  }  else  {  out.write(out);  return;  }	          pos    =    input.length();    int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	8	None	replace
254	[BUG]  [BUGGY]  pos  =  input.length();  pos  =  out.length();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length();  pos  =  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length();  pos  =  out.length();	          pos    =    input.length();    pos    =    in.length();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
255	[BUG]  [BUGGY]  char  len  =  input.length();  Integer  len  =  input.length();  [CE]  possible  loss  of  precision  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  Integer  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  Integer  len  =  input.length();	  int    len    =    input.length()    +    1;    Integer    len    =    input.length()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
256	[BUG]  [BUGGY]  out.write(Character.toChars(Character.codePointAt(input,  pos));  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(Character.codePointAt(input,  pos));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(Character.codePointAt(input,  pos));	  out.write(Character.codePointAt(input,    pos));    	non-compiled	[CE]  ')'  expected	118	None	replace
257	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos--;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos--;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
258	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos--;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos--;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos--;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
259	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(position  >  0)  {  out.write('n');  pos  =  0;  }  [CE]  cannot  find  symbol  position  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(position  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(position  >  0)  {  out.write('n');  pos  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  position	86	None	add
260	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
261	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	86	1	add
262	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  char  len  =  input.length()  +  pos  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  char  len  =  input.length()  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    char  len  =  input.length()  +  pos  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	27	None	add
263	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('n',  out);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.lastIndexOf('n',  out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('n',  out);	  pos    +=    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
264	[BUG]  [BUGGY]  char  len  =  input.length();  char[]  c  =  input.length();  [CE]  possible  loss  of  precision  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  char[]  c  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  char[]  c  =  input.length();	  int    len    =    input.length()    -    2;    char[]    c    =    input.length()    -    2;    	non-compiled	[CE]  possible  loss  of  precision	74	None	replace
265	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos;  char  len  =  input.length()  /  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  pos;  char  len  =  input.length()  /  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    /    pos;    char  len  =  input.length()  /  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	92	None	add
266	[BUG]  [BUGGY]  pos  +=  input.length();  pos  +=  out.length();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.length();  pos  +=  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length();  pos  +=  out.length();	          pos    +=    input.length();    pos    +=    in.length();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
267	[BUG]  [BUGGY]  pos  >  0)  {  out.write('n',  pos);  pos++;  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  >  0)  {  out.write('n',  pos);  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  >  0)  {  out.write('n',  pos);  pos++;  }	  pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
268	[BUG]  [BUGGY]  char[]  input  =  input.toCharSequence();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.toCharSequence();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toCharSequence();	  char[]    input    =    input.toString();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	16	None	replace
269	[BUG]  [BUGGY]  if(input  ==  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input  ==  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input  ==  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    int    pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
270	[BUG]  [BUGGY]  int  input  =  input.read(in);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  input  =  input.read(in);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  input.read(in);	  int    input    =    input.read(input);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	114	None	replace
271	[BUG]  [BUGGY]  int  len  =  input.length();  char  len  =  input.length()  +  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    char    len    =    input.length()    +    pos;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	97	None	replace
272	[BUG]  [BUGGY]  int  len  =  input.length();  Integer  len  =  input.length()  +  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  Integer  len  =  input.length()  +  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  Integer  len  =  input.length()  +  pos;	  int    len    =    input.length()    +    pos;    Integer    len    =    input.length()    +    pos;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	45	None	replace
273	[BUG]  [BUGGY]  int  len  =  out.length();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  out.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  out.length();	  int    len    =    output.length();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
274	[BUG]  [BUGGY]  CharSequence  input  =  input.toChars(pos);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.toChars(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.toChars(pos);	  char[]    input    =    input.toChars(pos);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
275	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
276	[BUG]  [BUGGY]  pos  +=  input.length()  *  4;  [CE]  cannot  find  symbol  len  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.length()  *  4;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length()  *  4;	  pos    +=    input.length()    *    2;    	non-compiled	[CE]  cannot  find  symbol  len	59	None	replace
277	[BUG]  [BUGGY]  char  len  =  input.length();  char[]  input  =  input.length();  [CE]  possible  loss  of  precision  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  char[]  input  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  char[]  input  =  input.length();	  int    len    =    input.length()    -    2;    char[]    input    =    input.length()    -    2;    	non-compiled	[CE]  possible  loss  of  precision	75	None	replace
278	[BUG]  [BUGGY]  if(out!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(out!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(out!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    Output.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
279	[BUG]  [BUGGY]  int  pos  =  out.length()  +  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  out.length()  +  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  out.length()  +  input.length();	  int    pos    =    input.length()    +    out.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	100	None	replace
280	[BUG]  [BUGGY]  float  len  =  input.length();  int  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  float  len  =  input.length();  int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	float  len  =  input.length();  int  len  =  input.length();	  int    len    =    input.length()    -    1;    int    len    =    input.length()    -    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	51	None	replace
281	[BUG]  [BUGGY]  Character  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Character  input  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Character  input  =  input.length();	  char    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	42	None	replace
282	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos)+  1);  [CE]  no  suitable  method  found  for  toChars(CharSequence,int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input,  pos)+  1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos)+  1);	  out.write(Character.toChars(input,    pos));    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence,int)	2	None	replace
283	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos),  input);  [CE]  no  suitable  method  found  for  toChars(CharSequence,int)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(input,  pos),  input);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos),  input);	  out.write(Character.toChars(input,    pos));    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence,int)	2	None	replace
284	[BUG]  [BUGGY]  CharSequence  input  =  input.getChars(),  out);  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getChars(),  out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getChars(),  out);	  CharSequence    input    =    input.getChars();    	non-compiled	[CE]  ';'  expected	22	None	replace
285	[BUG]  [BUGGY]  char[]  input  =  input.getOutputBuffer();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.getOutputBuffer();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.getOutputBuffer();	  char[]    input    =    input.getOutputChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	94	None	replace
286	[BUG]  [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  pos  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  pos  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    Integer  len  =  input.length();  pos  =  input.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
287	[BUG]  [BUGGY]  Integer  len  =  input.length();  char  c  =  input.charAt(pos);  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  char  c  =  input.charAt(pos);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    char  c  =  input.charAt(pos);	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
288	[BUG]  [BUGGY]  Integer  len  =  input.length();  Float  len  =  input.length();  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  Float  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    Float  len  =  input.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
289	[BUG]  [BUGGY]  char  len  =  input.length();  char[]  input  =  input.getChars();  [CE]  possible  loss  of  precision  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  len  =  input.length();  char[]  input  =  input.getChars();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();  char[]  input  =  input.getChars();	  int    len    =    input.length()    +    1;    char[]    input    =    input.getChars();    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
290	[BUG]  [BUGGY]  if(out!=  null)  {  if(pos  >  0)  {  output.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(out!=  null)  {  if(pos  >  0)  {  output.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(out!=  null)  {  if(pos  >  0)  {  output.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    output.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
291	[BUG]  [BUGGY]  Char[]  input  =  inputStream.getChars();  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  inputStream.getChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  inputStream.getChars();	  Char[]    input    =    input.getChars();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
292	[BUG]  [BUGGY]  Char[]  input  =  input.getString();  [CE]  cannot  find  symbol  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  input.getString();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.getString();	  Char[]    input    =    input.getChars();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
293	[BUG]  [BUGGY]  out.write(Integer.toString(input,  pos));  [CE]  no  suitable  method  found  for  toString(CharSequence,int)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(input,  pos));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(input,  pos));	  out.write(Integer.toString(pos));    	non-compiled	[CE]  no  suitable  method  found  for  toString(CharSequence,int)	83	None	replace
294	[BUG]  [BUGGY]  out.write(Integer.toString(input.charAt(pos)));  [CE]  cannot  find  symbol  len  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toString(input.charAt(pos)));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(input.charAt(pos)));	  out.write(input.charAt(pos));    	non-compiled	[CE]  cannot  find  symbol  len	84	None	replace
295	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  out;  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1  +  out;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  out;	  int    len    =    input.length    -    1    +    pos;    	non-compiled	[CE]  cannot  find  symbol  length	113	None	replace
296	[BUG]  [BUGGY]  out.write('-');  pos++;  [CE]  cannot  find  symbol  len  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write('-');  pos++;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write('-');  pos++;	  out.write('n');    pos++;    	non-compiled	[CE]  cannot  find  symbol  len	13	None	replace
297	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  Integer  len  =  input.length()  -  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos;  Integer  len  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    pos;    Integer  len  =  input.length()  -  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	25	None	add
298	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  char  len  =  input.length()  -  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  pos;  char  len  =  input.length()  -  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    pos;    char  len  =  input.length()  -  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	25	None	add
299	[BUG]  [BUGGY]  char[]  input  =  input.getInputBuffer();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.getInputBuffer();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.getInputBuffer();	  char[]    input    =    input.getInputChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	105	None	replace
300	[BUG]  [BUGGY]  char[]  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.getInputStream();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.getInputStream();	  char[]    input    =    input.getInputChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	105	None	replace
301	[BUG]  [BUGGY]  char[]  input  =  input.getInputData();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char[]  input  =  input.getInputData();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.getInputData();	  char[]    input    =    input.getInputChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	105	None	replace
302	[BUG]  [BUGGY]  out.write(Integer.toHexString(pos,  input.length));  [CE]  cannot  find  symbol  length  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toHexString(pos,  input.length));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toHexString(pos,  input.length));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
303	[BUG]  [BUGGY]  if(input  ==  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  [CE]  cannot  find  symbol  len  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input  ==  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input  ==  null)  {  pos  +=  input.length();  pos  +=  input.length();  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	35	None	replace
304	[BUG]  [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  out.write(out);  return;  }  [CE]  no  suitable  method  found  for  write(Writer)  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  out.write(out);  return;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  out.write(out);  return;  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  no  suitable  method  found  for  write(Writer)	35	None	replace
305	[BUG]  [BUGGY]  out.write(input.toChars());  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.toChars());  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.toChars());	  out.write(Character.toChars(input));    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
306	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  output.length;  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1  +  output.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  output.length;	  int    len    =    input.length    -    1    +    out.length;    	non-compiled	[CE]  cannot  find  symbol  length	79	None	replace
307	[BUG]  [BUGGY]  int  len  =  input.length  -  out.length;  [CE]  cannot  find  symbol  length  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  out.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  out.length;	  int    len    =    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	88	None	replace
308	[BUG]  [BUGGY]  pos  =  input.length()  +  output.charAt(pos);  [CE]  cannot  find  symbol  output  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  output.charAt(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  output.charAt(pos);	  pos    =    input.length()    +    out.charAt(pos);    	non-compiled	[CE]  cannot  find  symbol  output	101	None	replace
309	[BUG]  [BUGGY]  pos  =  input.length()  +  toString(out);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  toString(out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  toString(out);	  pos    =    input.length()    +    out.charAt(pos);    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	101	None	replace
310	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('.',  out);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('.',  out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('.',  out);	  pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
311	[BUG]  [BUGGY]  pos  +=  out.length()  -  1;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  out.length()  -  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  out.length()  -  1;	  pos    +=    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
312	[BUG]  [BUGGY]  if(input!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  else  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  else  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  else  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    If(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
313	[BUG]  [BUGGY]  float  inputLength  =  input.length();  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  float  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	float  inputLength  =  input.length();	          int    inputLength    =    input.length();    int    inputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	29	None	replace
314	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('n',  out);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('n',  out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('n',  out);	  pos    =    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
315	[BUG]  [BUGGY]  int  len  =  input.length  -  1L  +  out.length;  [CE]  cannot  find  symbol  length  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1L  +  out.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1L  +  out.length;	  int    len    =    input.length    -    1L;    	non-compiled	[CE]  cannot  find  symbol  length	80	None	replace
316	[BUG]  [BUGGY]  int  input  =  output.read(out);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  input  =  output.read(out);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  output.read(out);	  int    input    =    output.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	57	None	replace
317	[BUG]  [BUGGY]  if(input  ==  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input  ==  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input  ==  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }	          pos    +=    input.length();    int    pos    +=    input.length();    	non-compiled	[CE]  ';'  expected	36	None	replace
318	[BUG]  [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  else  {  out.write(out);  return;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  else  {  out.write(out);  return;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  +=  input.length();  int  pos  +=  input.length();  }  else  {  out.write(out);  return;  }	          pos    +=    input.length();    int    pos    +=    input.length();    	non-compiled	[CE]  ';'  expected	36	None	replace
319	[BUG]  [BUGGY]  if(input!=  null)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }	          int    inputLength    =    input.length();    int    outputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	33	None	replace
320	[BUG]  [BUGGY]  char  inputLength  =  input.length();  int  outputLength  =  input.length();  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  inputLength  =  input.length();  int  outputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  inputLength  =  input.length();  int  outputLength  =  input.length();	          int    inputLength    =    input.length();    int    outputLength    =    input.length();    	non-compiled	[CE]  possible  loss  of  precision	33	None	replace
321	[BUG]  [BUGGY]  if(input!=  null)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  else  {  out.write(Integer.toString(pos));  return;  }  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  else  {  out.write(Integer.toString(pos));  return;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  int  inputLength  =  input.length();  int  outputLength  =  input.length();  }  else  {  out.write(Integer.toString(pos));  return;  }	          int    inputLength    =    input.length();    int    outputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	33	None	replace
322	[BUG]  [BUGGY]  int  pos  =  input.indexOf('.');  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.indexOf('.');  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.indexOf('.');	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
323	[BUG]  [BUGGY]  int  pos  =  input.lastIndexOf('.')+  1;  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.lastIndexOf('.')+  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.lastIndexOf('.')+  1;	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
324	[BUG]  [BUGGY]  Integer  input  =  out.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  input  =  out.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  input  =  out.length();	  Integer    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	98	None	replace
325	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  =  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	                pos        +=        input.length();        pos    +=    input.length();    pos  =  input.length();  pos  +=  input.length();	  	compilable	  [FE]  ComparisonFailure  	34	1	add
326	[BUG]  [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  =  input.length();  pos  +=  input.length();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          pos    +=    input.length();    pos  +=  input.length();  pos  =  input.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                pos        +=        input.length();        pos    +=    input.length();    pos  =  input.length();  pos  +=  input.length();	  	compilable	  [FE]  ComparisonFailure  	34	1	add
327	[BUG]  [BUGGY]  if(input  ==  null)  {  pos  =  input.length();  pos  =  input.length();  }  [CE]  cannot  find  symbol  len  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input  ==  null)  {  pos  =  input.length();  pos  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input  ==  null)  {  pos  =  input.length();  pos  =  input.length();  }	          pos    =    input.length();    pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	7	None	replace
328	[BUG]  [BUGGY]  if(out!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  [CE]  cannot  find  symbol  len  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(out!=  null)  {  pos  =  input.length();  pos  =  input.length();  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(out!=  null)  {  pos  =  input.length();  pos  =  input.length();  }	          pos    =    input.length();    pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	7	None	replace
329	[BUG]  [BUGGY]  pos  =  input.length()  +  out.charAt(1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  out.charAt(1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  out.charAt(1);	  pos    =    input.length()    +    out.charAt(0);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
330	[BUG]  [BUGGY]  int  outputLength  =  input.length();  [CE]  cannot  find  symbol  len  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  outputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  outputLength  =  input.length();	  int    inputLength    =    input.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol  len	40	None	replace
331	[BUG]  [BUGGY]  int  inputLength  =  output.length();  [CE]  cannot  find  symbol  output  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  inputLength  =  output.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  inputLength  =  output.length();	  int    inputLength    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  output	39	None	replace
332	[BUG]  [BUGGY]  int  pos  =  out.read();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  out.read();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  out.read();	  int    pos    =    input.read();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	115	None	replace
333	[BUG]  [BUGGY]  int  pos  =  output.read();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  output.read();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  output.read();	  int    pos    =    input.read();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	115	None	replace
334	[BUG]  [BUGGY]  pos  =  input.length();  this.pos  =  input.length();  [CE]  cannot  find  symbol  pos  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length();  this.pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length();  this.pos  =  input.length();	          pos    =    input.length();    pos    =    output.length();    	non-compiled	[CE]  cannot  find  symbol  pos	9	None	replace
335	[BUG]  [BUGGY]  pos  =  input.length();  else  pos  =  input.length();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length();  else  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length();  else  pos  =  input.length();	          pos    =    input.length();    pos    =    output.length();    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
336	[BUG]  [BUGGY]  pos  =  out.length();  pos  =  input.length();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  out.length();  pos  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  out.length();  pos  =  input.length();	          pos    =    input.length();    pos    =    output.length();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
337	[BUG]  [BUGGY]  Char[]  input  =  input.toChars(pos);  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char[]  input  =  input.toChars(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.toChars(pos);	  Char[]    input    =    input.toChars();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
338	[BUG]  [BUGGY]  Integer  input  =  input.length()  -  2;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  input  =  input.length()  -  2;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  input  =  input.length()  -  2;	  Integer    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	98	None	replace
339	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('n',  pt);  [CE]  cannot  find  symbol  pt  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('n',  pt);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('n',  pt);	  pos    =    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol  pt	110	None	replace
340	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  c  =  input.charAt(pos);  [CE]  incompatible  types  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  c  =  input.charAt(pos);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  c  =  input.charAt(pos);	  int    len    =    input.length()    +    pos;    char[]    c    =    input.length()    +    pos;    	non-compiled	[CE]  incompatible  types	47	None	replace
341	[BUG]  [BUGGY]  pos  =  input.length()  +  this.charAt(0);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  +  this.charAt(0);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  this.charAt(0);	  pos    =    input.length()    +    out.charAt(0);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
342	[BUG]  [BUGGY]  pos  +=  input.length()  *  1;  [CE]  cannot  find  symbol  len  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.length()  *  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length()  *  1;	  pos    +=    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  len	60	None	replace
343	[BUG]  [BUGGY]  pos  +=  in.length()  -  1;  [CE]  cannot  find  symbol  in  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  in.length()  -  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  in.length()  -  1;	  pos    +=    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  in	60	None	replace
344	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  4;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  /  4;	  int    len    =    input.length()    /    pos;    	compilable	  [FE]  ComparisonFailure  	93	1	replace
345	[BUG]  [BUGGY]  int  len  =  input.length()  /  4;  [FE]  ComparisonFailure  [FE]    ArithmeticException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  /  4;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  /  4;	  int    len    =    input.length()    /    pos;    	compilable	  [FE]  ComparisonFailure  	93	1	replace
346	[BUG]  [BUGGY]  int  len  =  input.length  -  1L  +  1;  [CE]  cannot  find  symbol  length  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1L  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1L  +  1;	  int    len    =    input.length    -    1L;    	non-compiled	[CE]  cannot  find  symbol  length	80	None	replace
347	[BUG]  [BUGGY]  if(pos  >  0)  {  input.write('n');  pos++;  }  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  >  0)  {  input.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  >  0)  {  input.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    output.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
348	[BUG]  [BUGGY]  if(pos  >  0)  {  out.write('n',  pos);  pos++;  }  [CE]  no  suitable  method  found  for  write(char,int)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  >  0)  {  out.write('n',  pos);  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  >  0)  {  out.write('n',  pos);  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    Output.write('n');    pos++;    }    	non-compiled	[CE]  no  suitable  method  found  for  write(char,int)	121	None	replace
349	[BUG]  [BUGGY]  CharSequence  input  =  input.getAssignedValue();  char[]  inputLength  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getAssignedValue();  char[]  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getAssignedValue();  char[]  inputLength  =  input.length();	          int    inputLength    =    input.length();    char[]    inputLength    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	31	None	replace
350	[BUG]  [BUGGY]  pos  =  input.length();  InputStream  input  =  input.getInputStream();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length();  InputStream  input  =  input.getInputStream();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length();  InputStream  input  =  input.getInputStream();	          pos    =    input.length();    InputStream    input    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
351	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  pt;  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length  -  1  +  pt;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  pt;	  int    len    =    input.length    -    1    +    out.length;    	non-compiled	[CE]  cannot  find  symbol  length	79	None	replace
352	[BUG]  [BUGGY]  char  inputLength  =  input.length();  Int  inputLength  =  input.length();  [CE]  possible  loss  of  precision  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  char  inputLength  =  input.length();  Int  inputLength  =  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  inputLength  =  input.length();  Int  inputLength  =  input.length();	          int    inputLength    =    input.length();    Int    inputLength    =    input.length();    	non-compiled	[CE]  possible  loss  of  precision	30	None	replace
353	[BUG]  [BUGGY]  Char  input  =  input.charAt(pos);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Char  input  =  input.charAt(pos);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char  input  =  input.charAt(pos);	  char    input    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
354	[BUG]  [BUGGY]  int  len  =  input.length()  *  pos;  Int  len  =  input.length()  *  pos;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  *  pos;  Int  len  =  input.length()  *  pos;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  *  pos;  Int  len  =  input.length()  *  pos;	  int    len    =    input.length()    +    pos;    Int    len    =    input.length()    +    pos;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
355	[BUG]  [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  System.arraycopy(input,  0,  out,  0,  input.length());  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  System.arraycopy(input,  0,  out,  0,  input.length());  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    Integer  len  =  input.length();  System.arraycopy(input,  0,  out,  0,  input.length());	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
356	[BUG]  [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  System.arraycopy(input,  0,  c,  0,  input.length());  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  System.arraycopy(input,  0,  c,  0,  input.length());  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    Integer  len  =  input.length();  System.arraycopy(input,  0,  c,  0,  input.length());	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
357	[BUG]  [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  System.arraycopy(input,  0,  input,  0,  input.length());  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  Integer  len  =  input.length();  Integer  len  =  input.length();  System.arraycopy(input,  0,  input,  0,  input.length());  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer    len    =    input.length();    Integer  len  =  input.length();  System.arraycopy(input,  0,  input,  0,  input.length());	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	77	None	add
358	[BUG]  [BUGGY]  out.write(input.charAt(0));  [CE]  cannot  find  symbol  len  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.charAt(0));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.charAt(0));	  out.write(input);    	non-compiled	[CE]  cannot  find  symbol  len	82	None	replace
359	[BUG]  [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	                if(pos        >        0)        {        out.write('n');        pos++;        }        if(pos    >    0)    {    out.write('n');    pos    =    0;    }    if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
360	[BUG]  [BUGGY]  pos  =  input.length()  *  2  +  1;  [CE]  cannot  find  symbol  len  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.length()  *  2  +  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  *  2  +  1;	  pos    =    input.length()    *    2;    	non-compiled	[CE]  cannot  find  symbol  len	63	None	replace
361	[BUG]  [BUGGY]  pos  +=  in.length();  [CE]  cannot  find  symbol  in  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  in.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  in.length();	  pos    +=    output.length();    	non-compiled	[CE]  cannot  find  symbol  in	95	None	replace
362	[BUG]  [BUGGY]  out.write(Integer.toHexString(input,  pos));  [CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Integer.toHexString(input,  pos));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toHexString(input,  pos));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  method  toHexString  in  class  Integer  cannot  be  applied  to  given  types;	85	None	replace
363	[BUG]  [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  out.write(input);  }  [CE]  no  suitable  method  found  for  write(CharSequence)  [FE]    ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  out.write(input);  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  out.write(input);  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  no  suitable  method  found  for  write(CharSequence)	35	None	replace
364	[BUG]  [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  break;  }  [CE]  break  outside  switch  or  loop  [FE]      ComparisonFailure    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  break;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(input!=  null)  {  pos  +=  input.length();  pos  +=  input.length();  }  else  {  break;  }	          pos    +=    input.length();    pos    +=    input.length();    	non-compiled	[CE]  break  outside  switch  or  loop	35	None	replace
365	[BUG]  [BUGGY]  int  len  =  input.length();  char[]  c  =  input.getChars(pos);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length();  char[]  c  =  input.getChars(pos);  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length();  char[]  c  =  input.getChars(pos);	  int    len    =    input.length()    -    2;    char[]    c    =    input.length()    -    2;    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
366	[BUG]  [BUGGY]  if(pos  <  1)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  1)  {  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  1)  {  if(pos  >  0)  {  out.write('n');  pos++;  }	          if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
367	[BUG]  [BUGGY]  int  pos  +=  input.length;  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  +=  input.length;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  +=  input.length;	  pos    +=    input.length;    	non-compiled	[CE]  ';'  expected	67	None	replace
368	[BUG]  [BUGGY]  out.write(input.substring(pos));  [CE]  cannot  find  symbol  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(input.substring(pos));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.substring(pos));	  out.write(pt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
369	[BUG]  [BUGGY]  int  pos  =  input.lastIndexOf('.',  -1);  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  pos  =  input.lastIndexOf('.',  -1);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.lastIndexOf('.',  -1);	  int    pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	116	None	replace
370	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('n',  pt);  [CE]  cannot  find  symbol  pt  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  input.lastIndexOf('n',  pt);  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('n',  pt);	  pos    +=    input.lastIndexOf('n');    	non-compiled	[CE]  cannot  find  symbol  pt	106	None	replace
371	[BUG]  [BUGGY]  out.write(Character.toChars(Character.codePointAt(input,  pos)));  [CE]  cannot  find  symbol  len  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  out.write(Character.toChars(Character.codePointAt(input,  pos)));  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(Character.codePointAt(input,  pos)));	  out.write(Character.codePointAt(pos));    	non-compiled	[CE]  cannot  find  symbol  len	119	None	replace
372	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('.')+  1;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  =  input.lastIndexOf('.')+  1;  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('.')+  1;	  pos    =    input.lastIndexOf('.');    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
373	[BUG]  [BUGGY]  CharSequence  input  =  input.getInput();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getInput();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getInput();	  CharSequence    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	22	None	replace
374	[BUG]  [BUGGY]  CharSequence  input  =  input.getAssignedChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.getAssignedChars();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getAssignedChars();	  CharSequence    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	22	None	replace
375	[BUG]  [BUGGY]  CharInput  input  =  input.read();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharInput  input  =  input.read();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharInput  input  =  input.read();	  char    input    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
376	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  Int  len  =  input.length();  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  -  1;  Int  len  =  input.length();  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  -  1;  Int  len  =  input.length();	  int    len    =    input.length()    -    1;    Int    len    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
377	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  int  len  =  output.length()  +  pos  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  int  len  =  output.length()  +  pos  +  1;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    int  len  =  output.length()  +  pos  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	27	None	add
378	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  int  len  =  input.length()  +  pos  +  2;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  int  len  =  input.length()  +  pos  +  1;  int  len  =  input.length()  +  pos  +  2;  [BUGGY]      while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos    +    1;    int  len  =  input.length()  +  pos  +  2;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	27	None	add
379	[BUG]  [BUGGY]  pos  +=  out.length();  pos  +=  input.length();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  +=  out.length();  pos  +=  input.length();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  out.length();  pos  +=  input.length();	          pos    +=    input.length();    pos    +=    in.length();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
380	[BUG]  [BUGGY]  if(pos  <  0)  {  input.write('n');  pos++;  }  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  if(pos  <  0)  {  input.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  input.write('n');  pos++;  }	  if(pos    <    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
381	[BUG]  [BUGGY]  CharSequence  input  =  input.toString();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  CharSequence  input  =  input.toString();  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.toString();	  char[]    input    =    input.toString();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	16	None	replace
382	[BUG]  [BUGGY]  pos  >  0)  {  input.write('n');  pos++;  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;      [BUGGY]  pos  >  0)  {  input.write('n');  pos++;  }  [BUGGY]      int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  >  0)  {  input.write('n');  pos++;  }	  pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
