bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
2	[BUG] [BUGGY] if (input == null) { [FE] StringIndexOutOfBoundsException [CONTEXT] public final String translate(CharSequence input) { [BUGGY] if (input == null) { [BUGGY] return null; } try { StringWriter writer = new StringWriter(input.length() * 2); translate(input, writer); return writer.toString(); } catch (IOException ioe) {  throw new RuntimeException(ioe); } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] String  CharSequence input [VARIABLES] boolean StringWriter writer CharSequence input IOException ioe  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	54	54	1	replace	
3	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final String translate(CharSequence input) { [BUGGY] [BUGGY] if (input == null) { return null; } try { StringWriter writer = new StringWriter(input.length() * 2); translate(input, writer); return writer.toString(); } catch (IOException ioe) {  throw new RuntimeException(ioe); } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] String  CharSequence input [VARIABLES] boolean StringWriter writer CharSequence input IOException ioe  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	54	54	1	add	
4	[BUG] [BUGGY] StringWriter writer = new StringWriter(input.length() * 2); [FE] StringIndexOutOfBoundsException [CONTEXT] public final String translate(CharSequence input) { if (input == null) { return null; } try { [BUGGY] StringWriter writer = new StringWriter(input.length() * 2); [BUGGY] translate(input, writer); return writer.toString(); } catch (IOException ioe) {  throw new RuntimeException(ioe); } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] String  CharSequence input [VARIABLES] boolean StringWriter writer CharSequence input IOException ioe  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	58	58	1	replace	
5	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final String translate(CharSequence input) { if (input == null) { return null; } try { [BUGGY] [BUGGY] StringWriter writer = new StringWriter(input.length() * 2); translate(input, writer); return writer.toString(); } catch (IOException ioe) {  throw new RuntimeException(ioe); } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] String  CharSequence input [VARIABLES] boolean StringWriter writer CharSequence input IOException ioe  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	58	58	1	add	
6	[BUG] [BUGGY] translate(input, writer); [FE] StringIndexOutOfBoundsException [CONTEXT] public final String translate(CharSequence input) { if (input == null) { return null; } try { StringWriter writer = new StringWriter(input.length() * 2); [BUGGY] translate(input, writer); [BUGGY] return writer.toString(); } catch (IOException ioe) {  throw new RuntimeException(ioe); } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] String  CharSequence input [VARIABLES] boolean StringWriter writer CharSequence input IOException ioe  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	59	59	1	replace	
7	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final String translate(CharSequence input) { if (input == null) { return null; } try { StringWriter writer = new StringWriter(input.length() * 2); [BUGGY] [BUGGY] translate(input, writer); return writer.toString(); } catch (IOException ioe) {  throw new RuntimeException(ioe); } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] String  CharSequence input [VARIABLES] boolean StringWriter writer CharSequence input IOException ioe  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	59	59	1	add	
8	[BUG] [BUGGY] if (out == null) { [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { [BUGGY] if (out == null) { [BUGGY] throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	
9	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { [BUGGY] [BUGGY] if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	
10	[BUG] [BUGGY] if (input == null) { [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } [BUGGY] if (input == null) { [BUGGY] return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	79	79	1	replace	
11	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } [BUGGY] [BUGGY] if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	79	79	1	add	
12	[BUG] [BUGGY] int pos = 0; [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } [BUGGY] int pos = 0; [BUGGY] int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }  [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	82	82	1	replace	
13	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } [BUGGY] [BUGGY] int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }  [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	82	82	1	add	
14	[BUG] [BUGGY] int len = input.length(); [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; [BUGGY] int len = input.length(); [BUGGY] while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	
15	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; [BUGGY] [BUGGY] int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	
16	[BUG] [BUGGY] while (pos < len) { [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); [BUGGY] while (pos < len) { [BUGGY] int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	84	84	1	replace	
17	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); [BUGGY] [BUGGY] while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	84	84	1	add	
18	[BUG] [BUGGY] int consumed = translate(input, pos, out); [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { [BUGGY] int consumed = translate(input, pos, out); [BUGGY] if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { pos += Character.charCount(Character.codePointAt(input, pos)); [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	85	85	1	replace	
19	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { [BUGGY] [BUGGY] int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { pos += Character.charCount(Character.codePointAt(input, pos)); [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	85	85	1	add	
20	[BUG] [BUGGY] if (consumed == 0) { [FE] StringIndexOutOfBoundsException [CONTEXT] if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); [BUGGY] if (consumed == 0) { [BUGGY] char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { pos += Character.charCount(Character.codePointAt(input, pos)); } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	86	86	1	replace	
21	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); [BUGGY] [BUGGY] if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { pos += Character.charCount(Character.codePointAt(input, pos)); } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	86	86	1	add	
22	[BUG] [BUGGY] for (int pt = 0; pt < consumed; pt++) { [FE] StringIndexOutOfBoundsException [CONTEXT] while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   [BUGGY] for (int pt = 0; pt < consumed; pt++) { [BUGGY] pos += Character.charCount(Character.codePointAt(input, pos)); } } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	94	94	1	replace	
23	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   [BUGGY] [BUGGY] for (int pt = 0; pt < consumed; pt++) { pos += Character.charCount(Character.codePointAt(input, pos)); } } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	94	94	1	add	
24	[BUG] [BUGGY] pos += Character.charCount(Character.codePointAt(input, pos)); [FE] StringIndexOutOfBoundsException [CONTEXT] int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { [BUGGY] pos += Character.charCount(Character.codePointAt(input, pos)); [BUGGY] } } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	95	95	1	replace	
25	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   for (int pt = 0; pt < consumed; pt++) { [BUGGY] [BUGGY] pos += Character.charCount(Character.codePointAt(input, pos)); } } } [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	95	95	1	add	
26	[BUG] [BUGGY] CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { [BUGGY] CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; [BUGGY] newArray[0] = this; System.arraycopy(translators, 0, newArray, 1, translators.length); return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	108	108	1	replace	
27	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { [BUGGY] [BUGGY] CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; newArray[0] = this; System.arraycopy(translators, 0, newArray, 1, translators.length); return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	108	108	1	add	
28	[BUG] [BUGGY] newArray[0] = this; [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; [BUGGY] newArray[0] = this; [BUGGY] System.arraycopy(translators, 0, newArray, 1, translators.length); return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	109	109	1	replace	
29	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; [BUGGY] [BUGGY] newArray[0] = this; System.arraycopy(translators, 0, newArray, 1, translators.length); return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	109	109	1	add	
30	[BUG] [BUGGY] System.arraycopy(translators, 0, newArray, 1, translators.length); [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; newArray[0] = this; [BUGGY] System.arraycopy(translators, 0, newArray, 1, translators.length); [BUGGY] return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	110	110	1	replace	
31	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; newArray[0] = this; [BUGGY] [BUGGY] System.arraycopy(translators, 0, newArray, 1, translators.length); return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	110	110	1	add	
32	[BUG] [BUGGY] return new AggregateTranslator(newArray); [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; newArray[0] = this; System.arraycopy(translators, 0, newArray, 1, translators.length); [BUGGY] return new AggregateTranslator(newArray); [BUGGY] } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	111	111	1	replace	
33	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final CharSequenceTranslator with(CharSequenceTranslator... translators) { CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1]; newArray[0] = this; System.arraycopy(translators, 0, newArray, 1, translators.length); [BUGGY] [BUGGY] return new AggregateTranslator(newArray); } [CLASS] CharSequenceTranslator [METHOD] with [RETURN_TYPE] CharSequenceTranslator  translators [VARIABLES] boolean CharSequenceTranslator[] newArray translators  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	111	111	1	add	
