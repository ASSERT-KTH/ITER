bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return caverphone(pString); [FE] ComparisonFailure [CONTEXT] public String encode(String pString) { [BUGGY] return caverphone(pString); [BUGGY] } [CLASS] Caverphone [METHOD] encode [RETURN_TYPE] String  String pString [VARIABLES] boolean String pString  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	170	170	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String encode(String pString) { [BUGGY] [BUGGY] return caverphone(pString); } [CLASS] Caverphone [METHOD] encode [RETURN_TYPE] String  String pString [VARIABLES] boolean String pString  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.31622776601683794	170	170	1	add	
3	[BUG] [BUGGY] txt = txt.toLowerCase(java.util.Locale.ENGLISH); [FE] ComparisonFailure [CONTEXT] public String caverphone(String txt) {   if( txt == null || txt.length() == 0 ) { return "1111111111"; }  [BUGGY] txt = txt.toLowerCase(java.util.Locale.ENGLISH); [BUGGY]   txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String caverphone(String txt) {   if( txt == null || txt.length() == 0 ) { return "1111111111"; }  [BUGGY] [BUGGY] txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	
5	[BUG] [BUGGY] txt = txt.replaceAll("[^a-z]", ""); [FE] ComparisonFailure [CONTEXT]  if( txt == null || txt.length() == 0 ) { return "1111111111"; }  txt = txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY] txt = txt.replaceAll("[^a-z]", ""); [BUGGY]   txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	62	62	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  if( txt == null || txt.length() == 0 ) { return "1111111111"; }  txt = txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY] [BUGGY] txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	62	62	1	add	
7	[BUG] [BUGGY] txt = txt.replaceAll("e$", ""); // 2.0 only // 3. Handle various start options [FE] ComparisonFailure [CONTEXT] return "1111111111"; }  txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  [BUGGY] txt = txt.replaceAll("e$", ""); // 2.0 only    // 3. Handle various start options [BUGGY]   txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");   [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	65	67	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] return "1111111111"; }  txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  [BUGGY] [BUGGY] txt = txt.replaceAll("e$", ""); // 2.0 only    // 3. Handle various start options  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");   [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	65	67	1	add	
9	[BUG] [BUGGY] txt = txt.replaceAll("^cough", "cou2f"); [FE] ComparisonFailure [CONTEXT]  txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  [BUGGY] txt = txt.replaceAll("^cough", "cou2f"); [BUGGY] txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");   [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	68	68	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  [BUGGY] [BUGGY] txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");   [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	68	68	1	add	
11	[BUG] [BUGGY] txt = txt.replaceAll("^rough", "rou2f"); [FE] ComparisonFailure [CONTEXT] txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); [BUGGY] txt = txt.replaceAll("^rough", "rou2f"); [BUGGY] txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	69	69	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.toLowerCase(java.util.Locale.ENGLISH);  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); [BUGGY] [BUGGY] txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	69	69	1	add	
13	[BUG] [BUGGY] txt = txt.replaceAll("^tough", "tou2f"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); [BUGGY] txt = txt.replaceAll("^tough", "tou2f"); [BUGGY] txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	70	70	1	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); [BUGGY] [BUGGY] txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	70	70	1	add	
15	[BUG] [BUGGY] txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f"); // 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); [BUGGY] txt = txt.replaceAll("^enough", "enou2f");// 2.0 only  txt = txt.replaceAll("^trough", "trou2f"); // 2.0 only - note the spec says ^enough here again, c+p error I assume    txt = txt.replaceAll("^gn", "2n"); [BUGGY] txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	71	73	1	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); [BUGGY] [BUGGY] txt = txt.replaceAll("^enough", "enou2f");// 2.0 only  txt = txt.replaceAll("^trough", "trou2f"); // 2.0 only - note the spec says ^enough here again, c+p error I assume    txt = txt.replaceAll("^gn", "2n"); txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	71	73	1	add	
17	[BUG] [BUGGY] txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only [BUGGY] txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume  txt = txt.replaceAll("^gn", "2n"); [BUGGY] txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	72	73	1	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("[^a-z]", "");  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only [BUGGY] [BUGGY] txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume  txt = txt.replaceAll("^gn", "2n"); txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	72	73	1	add	
19	[BUG] [BUGGY] txt = txt.replaceAll("^gn", "2n"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume [BUGGY] txt = txt.replaceAll("^gn", "2n"); [BUGGY]   txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	73	73	1	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("e$", ""); // 2.0 only  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume [BUGGY] [BUGGY] txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	73	73	1	add	
21	[BUG] [BUGGY] txt = txt.replaceAll("^mb", "m2"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  [BUGGY] txt = txt.replaceAll("^mb", "m2"); [BUGGY]   txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	76	76	1	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("^cough", "cou2f"); txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  [BUGGY] [BUGGY] txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	76	76	1	add	
23	[BUG] [BUGGY] txt = txt.replaceAll("cq", "2q"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  [BUGGY] txt = txt.replaceAll("cq", "2q"); [BUGGY] txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	79	79	1	replace	
24	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^rough", "rou2f"); txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  [BUGGY] [BUGGY] txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	79	79	1	add	
25	[BUG] [BUGGY] txt = txt.replaceAll("ci", "si"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); [BUGGY] txt = txt.replaceAll("ci", "si"); [BUGGY] txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	80	80	1	replace	
26	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^tough", "tou2f"); txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); [BUGGY] [BUGGY] txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	80	80	1	add	
27	[BUG] [BUGGY] txt = txt.replaceAll("ce", "se"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); [BUGGY] txt = txt.replaceAll("ce", "se"); [BUGGY] txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	81	81	1	replace	
28	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^enough", "enou2f");// 2.0 only txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); [BUGGY] [BUGGY] txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	81	81	1	add	
29	[BUG] [BUGGY] txt = txt.replaceAll("cy", "sy"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); [BUGGY] txt = txt.replaceAll("cy", "sy"); [BUGGY] txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	82	82	1	replace	
30	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^trough", "trou2f");// 2.0 only - note the spec says ^enough here again, c+p error I assume txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); [BUGGY] [BUGGY] txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	82	82	1	add	
31	[BUG] [BUGGY] txt = txt.replaceAll("tch", "2ch"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); [BUGGY] txt = txt.replaceAll("tch", "2ch"); [BUGGY] txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	83	83	1	replace	
32	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^gn", "2n");  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); [BUGGY] [BUGGY] txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	83	83	1	add	
33	[BUG] [BUGGY] txt = txt.replaceAll("c", "k"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); [BUGGY] txt = txt.replaceAll("c", "k"); [BUGGY] txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	84	84	1	replace	
34	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); [BUGGY] [BUGGY] txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	84	84	1	add	
35	[BUG] [BUGGY] txt = txt.replaceAll("q", "k"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); [BUGGY] txt = txt.replaceAll("q", "k"); [BUGGY] txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	85	85	1	replace	
36	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); [BUGGY] [BUGGY] txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	85	85	1	add	
37	[BUG] [BUGGY] txt = txt.replaceAll("x", "k"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); [BUGGY] txt = txt.replaceAll("x", "k"); [BUGGY] txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	86	86	1	replace	
38	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^mb", "m2");  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); [BUGGY] [BUGGY] txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	86	86	1	add	
39	[BUG] [BUGGY] txt = txt.replaceAll("v", "f"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); [BUGGY] txt = txt.replaceAll("v", "f"); [BUGGY] txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	87	87	1	replace	
40	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); [BUGGY] [BUGGY] txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	87	87	1	add	
41	[BUG] [BUGGY] txt = txt.replaceAll("dg", "2g"); [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); [BUGGY] txt = txt.replaceAll("dg", "2g"); [BUGGY] txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	88	88	1	replace	
42	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); [BUGGY] [BUGGY] txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	88	88	1	add	
43	[BUG] [BUGGY] txt = txt.replaceAll("tio", "sio"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); [BUGGY] txt = txt.replaceAll("tio", "sio"); [BUGGY] txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	89	89	1	replace	
44	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("cq", "2q"); txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); [BUGGY] [BUGGY] txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	89	89	1	add	
45	[BUG] [BUGGY] txt = txt.replaceAll("tia", "sia"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); [BUGGY] txt = txt.replaceAll("tia", "sia"); [BUGGY] txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	90	90	1	replace	
46	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("ci", "si"); txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); [BUGGY] [BUGGY] txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	90	90	1	add	
47	[BUG] [BUGGY] txt = txt.replaceAll("d", "t"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); [BUGGY] txt = txt.replaceAll("d", "t"); [BUGGY] txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	91	91	1	replace	
48	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("ce", "se"); txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); [BUGGY] [BUGGY] txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	91	91	1	add	
49	[BUG] [BUGGY] txt = txt.replaceAll("ph", "fh"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); [BUGGY] txt = txt.replaceAll("ph", "fh"); [BUGGY] txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	92	92	1	replace	
50	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("cy", "sy"); txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); [BUGGY] [BUGGY] txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	92	92	1	add	
51	[BUG] [BUGGY] txt = txt.replaceAll("b", "p"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); [BUGGY] txt = txt.replaceAll("b", "p"); [BUGGY] txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	93	93	1	replace	
52	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("tch", "2ch"); txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); [BUGGY] [BUGGY] txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	93	93	1	add	
53	[BUG] [BUGGY] txt = txt.replaceAll("sh", "s2"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); [BUGGY] txt = txt.replaceAll("sh", "s2"); [BUGGY] txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	94	94	1	replace	
54	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("c", "k"); txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); [BUGGY] [BUGGY] txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	94	94	1	add	
55	[BUG] [BUGGY] txt = txt.replaceAll("z", "s"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); [BUGGY] txt = txt.replaceAll("z", "s"); [BUGGY] txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	95	95	1	replace	
56	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("q", "k"); txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); [BUGGY] [BUGGY] txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	95	95	1	add	
57	[BUG] [BUGGY] txt = txt.replaceAll("^[aeiou]", "A"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); [BUGGY] txt = txt.replaceAll("^[aeiou]", "A"); [BUGGY] txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	96	96	1	replace	
58	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("x", "k"); txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); [BUGGY] [BUGGY] txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	96	96	1	add	
59	[BUG] [BUGGY] txt = txt.replaceAll("[aeiou]", "3"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); [BUGGY] txt = txt.replaceAll("[aeiou]", "3"); [BUGGY] txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	97	97	1	replace	
60	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("v", "f"); txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); [BUGGY] [BUGGY] txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	97	97	1	add	
61	[BUG] [BUGGY] txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); [BUGGY] txt = txt.replaceAll("j", "y");// 2.0 only  txt = txt.replaceAll("^y3", "Y3");  // 2.0 only    txt = txt.replaceAll("^y", "A");    // 2.0 only [BUGGY] txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	98	100	1	replace	
62	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("dg", "2g"); txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); [BUGGY] [BUGGY] txt = txt.replaceAll("j", "y");// 2.0 only  txt = txt.replaceAll("^y3", "Y3");  // 2.0 only    txt = txt.replaceAll("^y", "A");    // 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	98	100	1	add	
63	[BUG] [BUGGY] txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3"); // 2.0 only [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only [BUGGY] txt = txt.replaceAll("^y3", "Y3"); // 2.0 only  txt = txt.replaceAll("^y", "A");  // 2.0 only    txt = txt.replaceAll("y", "3");    // 2.0 only [BUGGY] txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	99	101	1	replace	
64	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("tio", "sio"); txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only [BUGGY] [BUGGY] txt = txt.replaceAll("^y3", "Y3"); // 2.0 only  txt = txt.replaceAll("^y", "A");  // 2.0 only    txt = txt.replaceAll("y", "3");    // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	99	101	1	add	
65	[BUG] [BUGGY] txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3"); // 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only [BUGGY] txt = txt.replaceAll("^y", "A"); // 2.0 only  txt = txt.replaceAll("y", "3");  // 2.0 only    txt = txt.replaceAll("3gh3", "3kh3"); [BUGGY] txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	100	102	1	replace	
66	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("tia", "sia"); txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only [BUGGY] [BUGGY] txt = txt.replaceAll("^y", "A"); // 2.0 only  txt = txt.replaceAll("y", "3");  // 2.0 only    txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	100	102	1	add	
67	[BUG] [BUGGY] txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only [BUGGY] txt = txt.replaceAll("y", "3");// 2.0 only  txt = txt.replaceAll("3gh3", "3kh3"); [BUGGY] txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	101	102	1	replace	
68	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("d", "t"); txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only [BUGGY] [BUGGY] txt = txt.replaceAll("y", "3");// 2.0 only  txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	101	102	1	add	
69	[BUG] [BUGGY] txt = txt.replaceAll("3gh3", "3kh3"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only [BUGGY] txt = txt.replaceAll("3gh3", "3kh3"); [BUGGY] txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	102	102	1	replace	
70	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("ph", "fh"); txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only [BUGGY] [BUGGY] txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	102	102	1	add	
71	[BUG] [BUGGY] txt = txt.replaceAll("gh", "22"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); [BUGGY] txt = txt.replaceAll("gh", "22"); [BUGGY] txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	103	103	1	replace	
72	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("b", "p"); txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); [BUGGY] [BUGGY] txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	103	103	1	add	
73	[BUG] [BUGGY] txt = txt.replaceAll("g", "k"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); [BUGGY] txt = txt.replaceAll("g", "k"); [BUGGY] txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	104	104	1	replace	
74	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("sh", "s2"); txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); [BUGGY] [BUGGY] txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	104	104	1	add	
75	[BUG] [BUGGY] txt = txt.replaceAll("s+", "S"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); [BUGGY] txt = txt.replaceAll("s+", "S"); [BUGGY] txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	105	105	1	replace	
76	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("z", "s"); txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); [BUGGY] [BUGGY] txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	105	105	1	add	
77	[BUG] [BUGGY] txt = txt.replaceAll("t+", "T"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); [BUGGY] txt = txt.replaceAll("t+", "T"); [BUGGY] txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	106	106	1	replace	
78	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^[aeiou]", "A"); txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); [BUGGY] [BUGGY] txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	106	106	1	add	
79	[BUG] [BUGGY] txt = txt.replaceAll("p+", "P"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); [BUGGY] txt = txt.replaceAll("p+", "P"); [BUGGY] txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	107	107	1	replace	
80	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("[aeiou]", "3"); txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); [BUGGY] [BUGGY] txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	107	107	1	add	
81	[BUG] [BUGGY] txt = txt.replaceAll("k+", "K"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); [BUGGY] txt = txt.replaceAll("k+", "K"); [BUGGY] txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	108	108	1	replace	
82	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("j", "y");// 2.0 only txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); [BUGGY] [BUGGY] txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	108	108	1	add	
83	[BUG] [BUGGY] txt = txt.replaceAll("f+", "F"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); [BUGGY] txt = txt.replaceAll("f+", "F"); [BUGGY] txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	109	109	1	replace	
84	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^y3", "Y3"); // 2.0 only txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); [BUGGY] [BUGGY] txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	109	109	1	add	
85	[BUG] [BUGGY] txt = txt.replaceAll("m+", "M"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); [BUGGY] txt = txt.replaceAll("m+", "M"); [BUGGY] txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	110	110	1	replace	
86	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("^y", "A"); // 2.0 only txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); [BUGGY] [BUGGY] txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	110	110	1	add	
87	[BUG] [BUGGY] txt = txt.replaceAll("n+", "N"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); [BUGGY] txt = txt.replaceAll("n+", "N"); [BUGGY] txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	111	111	1	replace	
88	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("y", "3");// 2.0 only txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); [BUGGY] [BUGGY] txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	111	111	1	add	
89	[BUG] [BUGGY] txt = txt.replaceAll("w3", "W3"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); [BUGGY] txt = txt.replaceAll("w3", "W3"); [BUGGY]  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	112	112	1	replace	
90	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("3gh3", "3kh3"); txt = txt.replaceAll("gh", "22"); txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); [BUGGY] [BUGGY] txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	112	112	1	add	
91	[BUG] [BUGGY] txt = txt.replaceAll("wh3", "Wh3"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  [BUGGY] txt = txt.replaceAll("wh3", "Wh3"); [BUGGY] txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	114	114	1	replace	
92	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("g", "k"); txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  [BUGGY] [BUGGY] txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	114	114	1	add	
93	[BUG] [BUGGY] txt = txt.replaceAll("w$", "3"); // 2.0 only //txt = txt.replaceAll("why", "Why"); // 1.0 only txt = txt.replaceAll("w", "2"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); [BUGGY] txt = txt.replaceAll("w$", "3"); // 2.0 only  //txt = txt.replaceAll("why", "Why"); // 1.0 only    txt = txt.replaceAll("w", "2"); [BUGGY]  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	115	117	1	replace	
94	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("s+", "S"); txt = txt.replaceAll("t+", "T"); txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); [BUGGY] [BUGGY] txt = txt.replaceAll("w$", "3"); // 2.0 only  //txt = txt.replaceAll("why", "Why"); // 1.0 only    txt = txt.replaceAll("w", "2");  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	115	117	1	add	
95	[BUG] [BUGGY] txt = txt.replaceAll("w", "2"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  [BUGGY] txt = txt.replaceAll("w", "2"); [BUGGY] txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only  txt = txt.replaceAll("l", "2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	117	117	1	replace	
96	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("p+", "P"); txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  [BUGGY] [BUGGY] txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only  txt = txt.replaceAll("l", "2"); [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	117	117	1	add	
97	[BUG] [BUGGY] txt = txt.replaceAll("^h", "A"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); [BUGGY] txt = txt.replaceAll("^h", "A"); [BUGGY] txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only  txt = txt.replaceAll("l", "2");  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	118	118	1	replace	
98	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("k+", "K"); txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); [BUGGY] [BUGGY] txt = txt.replaceAll("^h", "A"); txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only  txt = txt.replaceAll("l", "2");  [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	118	118	1	add	
99	[BUG] [BUGGY] txt = txt.replaceAll("h", "2"); [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); [BUGGY] txt = txt.replaceAll("h", "2"); [BUGGY] txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only  txt = txt.replaceAll("l", "2");   [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	119	119	1	replace	
100	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] txt = txt.replaceAll("f+", "F"); txt = txt.replaceAll("m+", "M"); txt = txt.replaceAll("n+", "N"); txt = txt.replaceAll("w3", "W3");  txt = txt.replaceAll("wh3", "Wh3"); txt = txt.replaceAll("w$", "3"); // 2.0 only  txt = txt.replaceAll("w", "2"); txt = txt.replaceAll("^h", "A"); [BUGGY] [BUGGY] txt = txt.replaceAll("h", "2"); txt = txt.replaceAll("r3", "R3"); txt = txt.replaceAll("r$", "3"); // 2.0 only  txt = txt.replaceAll("r", "2"); txt = txt.replaceAll("l3", "L3"); txt = txt.replaceAll("l$", "3"); // 2.0 only  txt = txt.replaceAll("l", "2");   [CLASS] Caverphone [METHOD] caverphone [RETURN_TYPE] String  String txt [VARIABLES] boolean String txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	119	119	1	add	
