bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
2	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
3	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
4	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
5	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
6	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
7	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
8	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	1	add
10	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	1	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	9	add
12	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	9	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  >=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	9	add
14	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  >=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	9	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	1	add
16	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	41	1	add
17	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    If(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  ';'  expected	41	None	add
18	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >>  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >>  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  >>  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  incompatible  types	41	None	add
19	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ANGLISH);  }  [CE]  cannot  find  symbol  ANGLISH  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ANGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ANGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  ANGLISH	41	None	add
20	[BUG]  [BUGGY]  String  txt  =  txt.substring(0,  txt.length()  -  1);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  txt  =  txt.substring(0,  txt.length()  -  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  txt  =  txt.substring(0,  txt.length()  -  1);	      	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	14	None	replace
21	[BUG]  [BUGGY]  String  txt  =  txt.toLowerCase();  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  txt  =  txt.toLowerCase();  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  txt  =  txt.toLowerCase();	      	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	14	None	replace
22	[BUG]  [BUGGY]  String  txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");	      	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	14	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");	      	compilable	  [FE]  ComparisonFailure  	14	6	replace
24	[BUG]  [BUGGY]  txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.replaceAll( "[  ^  a-z]   ",   "   ");	      	compilable	  [FE]  ComparisonFailure  	14	6	replace
25	[BUG]  [BUGGY]  String  txt  =  txt.substring(0,  txt.length()  -  2);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  txt  =  txt.substring(0,  txt.length()  -  2);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  txt  =  txt.substring(0,  txt.length()  -  2);	      	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	14	None	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.substring(0,  txt.length()  -  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.substring(0,  txt.length()  -  1);	      	compilable	  [FE]  ComparisonFailure  	14	8	replace
27	[BUG]  [BUGGY]  txt  =  txt.substring(0,  txt.length()  -  1);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.substring(0,  txt.length()  -  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.substring(0,  txt.length()  -  1);	      	compilable	  [FE]  ComparisonFailure  	14	8	replace
28	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
29	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
30	[BUG]  [BUGGY]  char  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  char  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	char  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
31	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
32	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
33	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
34	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
36	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
37	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
38	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  ';'  expected	6	None	replace
39	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
40	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
43	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
45	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
47	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  >=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
49	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  >=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
50	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    If(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  ';'  expected	4	None	add
51	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  nxt  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  nxt	4	None	add
52	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >>  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  >>  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  >>  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  incompatible  types	4	None	add
53	[BUG]  [BUGGY]  [FE]  PatternSyntaxException  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  PatternSyntaxException  	32	11	replace
54	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^   ",   "   ");  [FE]  PatternSyntaxException  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  PatternSyntaxException  	32	11	replace
55	[BUG]  [BUGGY]  [FE]  PatternSyntaxException  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  PatternSyntaxException  	32	11	replace
56	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");  [FE]  PatternSyntaxException  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  PatternSyntaxException  	32	11	replace
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z] ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z] ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	6	replace
58	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z] ",   "   ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z] ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z] ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	6	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z] ",   ", ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z] ",   ", ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	9	replace
60	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z] ",   ", ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z] ",   ", ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z] ",   ", ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	9	replace
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  0-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  0-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	1	replace
62	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  0-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  0-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  0-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	1	replace
63	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  false);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  false);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  false);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean)	33	None	replace
64	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt.length());  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,int)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt.length());  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt.length());	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,int)	33	None	replace
65	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  0);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,int)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  0);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  0);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,int)	33	None	replace
66	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,String)  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,String)	33	None	replace
67	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  false);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,boolean)  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  false);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  false);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,boolean)	33	None	replace
68	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt.charAt(0));  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,char)  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt.charAt(0));  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  txt.charAt(0));	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,char)	33	None	replace
69	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(null,  java.util.Locale.ENGLISH,  true);  [CE]  no  suitable  method  found  for  toLowerCase(<null>,Locale,boolean)  [FE]                              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(null,  java.util.Locale.ENGLISH,  true);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(null,  java.util.Locale.ENGLISH,  true);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(<null>,Locale,boolean)	33	None	replace
70	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  null,  true);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,<null>,boolean)  [FE]                                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  null,  true);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  null,  true);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,<null>,boolean)	33	None	replace
71	[BUG]  [BUGGY]  txt  =  txt.toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toUpperCase(Locale.ENGLISH);	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	30	None	replace
72	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
73	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	30	None	replace
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	6	replace
75	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	6	replace
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ",   ", ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ",   ", ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	9	replace
77	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ",   ", ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ",   ", ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ",   ", ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	9	replace
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
79	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;	  	compilable	  [FE]  ComparisonFailure  	27	1	add
81	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;	  	compilable	  [FE]  ComparisonFailure  	27	1	add
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;	  	compilable	  [FE]  ComparisonFailure  	27	1	add
83	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;	  	compilable	  [FE]  ComparisonFailure  	27	1	add
84	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;	  	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	27	None	add
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;	  	compilable	  [FE]  ComparisonFailure  	27	1	add
86	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;	  	compilable	  [FE]  ComparisonFailure  	27	1	add
87	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  nxt  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH)+  1;	  	non-compiled	[CE]  cannot  find  symbol  nxt	27	None	add
88	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH)+  1;	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
89	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+1  1;  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+1  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+1  1;	  	non-compiled	[CE]  ';'  expected	27	None	add
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
91	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
93	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
95	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
97	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
98	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
99	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
100	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
101	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
102	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
103	[BUG]  [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
104	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
105	[BUG]  [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
106	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  	12	None	replace
107	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
108	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  	12	None	replace
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	1	add
110	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	1	add
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	1	add
112	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	1	add
113	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  >=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  >=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  >=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	7	None	add
114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	1	add
115	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	1	add
116	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  >>  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  >>  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  >>  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	7	None	add
117	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    If(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  ';'  expected	7	None	add
118	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  nxt  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  nxt	7	None	add
119	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
120	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
121	[BUG]  [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
122	[BUG]  [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
123	[BUG]  [BUGGY]  if(txt!=  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
124	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
125	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
126	[BUG]  [BUGGY]  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
128	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
129	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	42	None	replace
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	9	replace
131	[BUG]  [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	9	replace
132	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	9	replace
133	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	9	replace
134	[BUG]  [BUGGY]  if(txt!=  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
135	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	17	None	replace
136	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	17	None	replace
137	[BUG]  [BUGGY]  nxt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  nxt  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  nxt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	nxt  =  txt.toLowerCase(Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  nxt	17	None	replace
138	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
139	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	8	1	replace
141	[BUG]  [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	8	1	replace
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	8	6	replace
143	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	8	6	replace
144	[BUG]  [BUGGY]  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	timeout	8	1	replace
145	[BUG]  [BUGGY]  while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  timeout  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	timeout	8	1	replace
146	[BUG]  [BUGGY]  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	timeout	8	1	replace
147	[BUG]  [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  timeout  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	timeout	8	1	replace
148	[BUG]  [BUGGY]  ||  txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  ||  txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	||  txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
149	[BUG]  [BUGGY]  while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null  &&  txt.length()  >  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
150	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	18	None	replace
151	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	18	None	replace
152	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	18	None	replace
153	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	18	None	replace
154	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
155	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
156	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
158	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
159	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Lo  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Lo	  	non-compiled	[CE]  ')'  expected	38	None	add
160	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale	  	non-compiled	[CE]  ')'  expected	38	None	add
161	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	38	None	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
163	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
164	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ANGLISH);  [CE]  cannot  find  symbol  ANGLISH  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ANGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ANGLISH);	  	non-compiled	[CE]  cannot  find  symbol  ANGLISH	38	None	add
165	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Loale.ENGLISH);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Loale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Loale.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
166	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Location.ENGLISH);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Location.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Location.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
167	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
168	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  nxt  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol  nxt	38	None	add
169	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
170	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
171	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Lo  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Lo	  	non-compiled	[CE]  ')'  expected	16	None	add
172	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
173	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
174	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale	  	non-compiled	[CE]  ')'  expected	16	None	add
175	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	16	None	add
176	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  nxt  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol  nxt	16	None	add
177	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.L  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.L  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.L	  	non-compiled	[CE]  ')'  expected	16	None	add
178	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
180	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
181	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  ')'  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.	  	non-compiled	[CE]  ')'  expected	16	None	add
182	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
183	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
185	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
186	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
187	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
188	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  If(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    If(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
189	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  >=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  >=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  >=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	9	None	add
190	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  nxt  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  nxt	9	None	add
191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
192	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
193	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  {  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  {  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
194	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  {  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  {  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  {  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
195	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ".[  {  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ".[  {  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
196	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ".[  {  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ".[  {  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ".[  {  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
197	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ".,   "   ");  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ".,   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z] ".,   "   ");	  	non-compiled	[CE]  <identifier>  expected	34	None	add
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z], ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z], ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
199	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z], ",   "   ");  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  {  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z], ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z], ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	34	1	add
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
201	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  2;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  4;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  4;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
203	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  4;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  4;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  4;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
204	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  3;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  3;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
205	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  3;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  3;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  3;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
206	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)/  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)/  1;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	28	None	replace
207	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	9	replace
208	[BUG]  [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toUpperCase(java.util.Locale.ENGLISH)+  1;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	9	replace
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  5;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  5;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
210	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  5;  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  5;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  5;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
211	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  Locale  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH)+  1;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	non-compiled	[CE]  cannot  find  symbol  Locale	28	None	replace
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.US)+  1;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
213	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US)+  1;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.US)+  1;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
214	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
215	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
216	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
217	[BUG]  [BUGGY]  &&(txt  ==  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt  ==  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt  ==  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
218	[BUG]  [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
219	[BUG]  [BUGGY]  &&(txt  ==  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt  ==  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt  ==  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
220	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	24	None	replace
221	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	24	None	replace
222	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	24	None	replace
223	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]                              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	24	None	replace
224	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	24	None	replace
225	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	24	None	replace
226	[BUG]  [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	24	None	replace
227	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
228	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
229	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
230	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
231	[BUG]  [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
232	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
233	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
234	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
235	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.casverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.casverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.casverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
236	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caterphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caterphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caterphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
237	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.coverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.coverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.coverphone  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
238	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
239	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  //  2.0  only  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  //  2.0  only  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  //  2.0  only  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
240	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  char  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  char  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    char  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
241	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(locale.ENGLISH);  }  [CE]  cannot  find  symbol  locale  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  locale	29	None	replace
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   ", ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   ", ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	9	replace
243	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   ", ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   ", ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   ", ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	9	replace
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	6	replace
245	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	6	replace
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  0-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  0-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	1	replace
247	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  0-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  0-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  0-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	1	replace
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	6	replace
249	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	6	replace
250	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  true);  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  true);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
251	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.US);  [CE]  cannot  find  symbol  Locale  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.US);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
252	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  null);  [CE]  cannot  find  symbol  Locale  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  null);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  null);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
253	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  false);  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  false);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  false);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
254	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  1);  [CE]  cannot  find  symbol  Locale  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  1);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
255	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  4);  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  4);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  4);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
256	[BUG]  [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  	11	None	replace
257	[BUG]  [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
258	[BUG]  [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerC  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerC  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerC	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
259	[BUG]  [BUGGY]  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  cough  =  txt.toLowerCase(Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	37	None	replace
260	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	37	None	replace
261	[BUG]  [BUGGY]  boolean  cough  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  boolean  cough  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	boolean  cough  =  txt.toLowerCase(Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	37	None	replace
262	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	37	None	replace
263	[BUG]  [BUGGY]  char  cough  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  char  cough  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	char  cough  =  txt.toLowerCase(Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	37	None	replace
264	[BUG]  [BUGGY]  if(txt!=  null)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  cough  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	37	None	replace
265	[BUG]  [BUGGY]  char  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  char  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	char  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  incompatible  types	37	None	replace
266	[BUG]  [BUGGY]      String  txt  =  txt.substring(0,  txt.length());  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  txt  =  txt.substring(0,  txt.length());  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String  txt  =  txt.substring(0,  txt.length());	  	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	13	None	add
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
268	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toUpperCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toUpperCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
270	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toUpperCase(java.util.Locale.US);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toUpperCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toUpperCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
271	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  String  txt  =  txt.toLowerCase(java.util.Locale.US);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  String  txt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    String  txt  =  txt.toLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	2	None	add
272	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  nxt.toLowerCase(java.util.Locale.US);  [CE]  cannot  find  symbol  nxt  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  nxt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  nxt.toLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  cannot  find  symbol  nxt	2	None	add
273	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.S);  [CE]  cannot  find  symbol  S  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.S);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.S);	  	non-compiled	[CE]  cannot  find  symbol  S	2	None	add
274	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.ToLowerCase(java.util.Locale.US);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.ToLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.ToLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
275	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  cfg.toLowerCase(java.util.Locale.US);  [CE]  cannot  find  symbol  cfg  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  cfg.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  cfg.toLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  cannot  find  symbol  cfg	2	None	add
276	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
277	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
278	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
279	[BUG]  [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
280	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
281	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
282	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
283	[BUG]  [BUGGY]  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
284	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	9	replace
285	[BUG]  [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	9	replace
286	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Boolean.TRUE);  }  [CE]  no  suitable  method  found  for  toLowerCase(Boolean)  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Boolean.TRUE);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Boolean.TRUE);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Boolean)	5	None	replace
287	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
288	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
289	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
290	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
291	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
292	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
293	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  Locale  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH)+  1;	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
294	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.US);  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.US);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.US);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
295	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  cannot  find  symbol  Locale	3	None	replace
296	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  cannot  find  symbol  Locale	3	None	replace
297	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  cannot  find  symbol  Locale	3	None	replace
298	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  	3	None	replace
299	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  [CE]  cannot  find  symbol  Locale  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  cannot  find  symbol  Locale	3	None	replace
300	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
301	[BUG]  [BUGGY]  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
302	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
303	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
304	[BUG]  [BUGGY]  char  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  char  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	char  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
305	[BUG]  [BUGGY]  char  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  char  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	char  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
306	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
307	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
309	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
310	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
311	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
312	[BUG]  [BUGGY]  [FE]  PatternSyntaxException  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");	  	compilable	  [FE]  PatternSyntaxException  	31	11	add
313	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");  [FE]  PatternSyntaxException  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }   ",   "   ");	  	compilable	  [FE]  PatternSyntaxException  	31	11	add
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
315	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >=  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
317	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
318	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	11	None	replace
319	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	11	None	replace
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US).toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US).toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
321	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US).toLowerCase(java.util.Locale.US);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US).toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US).toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
322	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  String  txt  =  txt.toLowerCase(java.util.Locale.US);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  String  txt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);  String  txt  =  txt.toLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	2	None	add
323	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  this.caverphone  =  txt.toLowerCase(java.util.Locale.US);  [CE]  cannot  find  symbol  caverphone  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  this.caverphone  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);  this.caverphone  =  txt.toLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  cannot  find  symbol  caverphone	2	None	add
324	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt  =  txt.toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
325	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt  =  txt.toLowerCase(java.util.Locale.US);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt  =  txt.toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt.toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
327	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt.toLowerCase(java.util.Locale.US);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    txt  =  txt.toLowerCase(java.util.Locale.US);  //  2.0  only  txt.toLowerCase(java.util.Locale.US);	  	compilable	  [FE]  ComparisonFailure  	2	1	add
328	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.cache  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.cache  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.cache  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
329	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  char[]  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  char[]  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    char[]  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
330	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  char[]  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  char[]  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    char[]  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
331	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  a-z  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  a-z  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  a-z  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  ';'  expected	36	None	add
332	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
333	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  ^  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  [Delete]  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	25	1	add
334	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase();  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        String  cough  =  txt.toLowerCase();	  	compilable	  [FE]  ComparisonFailure  	13	1	add
335	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase();  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String  cough  =  txt.toLowerCase();	  	compilable	  [FE]  ComparisonFailure  	13	1	add
336	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.substring(0,  txt.length()  -  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        String  cough  =  txt.substring(0,  txt.length()  -  1);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
337	[BUG]  [BUGGY]      String  cough  =  txt.substring(0,  txt.length()  -  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.substring(0,  txt.length()  -  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String  cough  =  txt.substring(0,  txt.length()  -  1);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
338	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase();  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase();  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase();  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
339	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
340	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
341	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  Locale  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
342	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  mv.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  mv  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  mv.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  mv.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  mv	4	None	add
343	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
344	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
345	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH  +  1);  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH  +  1);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
346	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  null);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,<null>)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  null);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  null);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,<null>)	33	None	replace
347	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  null);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,<null>)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  null);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  null);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,<null>)	33	None	replace
348	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  1.0);  [CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,double)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  1.0);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true,  1.0);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,boolean,double)	33	None	replace
349	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	39	9	replace
350	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	39	9	replace
351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	39	9	replace
352	[BUG]  [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	39	9	replace
353	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.replaceAll  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.replaceAll  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.replaceAll	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  ';'  expected	39	None	replace
354	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
355	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	38	1	add
356	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH	  	non-compiled	[CE]  ')'  expected	38	None	add
357	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH;  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH;  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH;	  	non-compiled	[CE]  ')'  expected	38	None	add
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	1	replace
359	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	32	1	replace
360	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
361	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
362	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  6;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  6;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
363	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  6;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  6;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  6;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
364	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  10;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  10;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
365	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  10;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  10;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  10;	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    	compilable	  [FE]  ComparisonFailure  	28	1	replace
366	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
367	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  nxt  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;	  	non-compiled	[CE]  cannot  find  symbol  nxt	27	None	add
368	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  Txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  Txt  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  Txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH)+    1;    Txt  =  txt.toLowerCase(java.util.Locale.ENGLISH)+  1;	  	non-compiled	[CE]  cannot  find  symbol  Txt	27	None	add
369	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(L  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(L  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(L	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
370	[BUG]  [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
371	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.replaceAll( "[  >>  a-z]   ",   "   ");	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	compilable	  [FE]  ComparisonFailure  	6	6	replace
372	[BUG]  [BUGGY]  txt  =  txt.replaceAll( "[  >>  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.replaceAll( "[  >>  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.replaceAll( "[  >>  a-z]   ",   "   ");	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	compilable	  [FE]  ComparisonFailure  	6	6	replace
373	[BUG]  [BUGGY]  &&  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
374	[BUG]  [BUGGY]  &&  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
375	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
376	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
377	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
378	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US_ASCII);  [CE]  cannot  find  symbol  US_ASCII  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US_ASCII);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.US_ASCII);	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  cannot  find  symbol  US_ASCII	3	None	replace
379	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.getDefault());  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.getDefault());	  txt    =    txt.toLowerCase(java.util.Locale.US);    	compilable	  [FE]  ComparisonFailure  	3	2	replace
380	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.getDefault());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.getDefault());  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.getDefault());	  txt    =    txt.toLowerCase(java.util.Locale.US);    	compilable	  [FE]  ComparisonFailure  	3	2	replace
381	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	String  cough  =  txt.toLowerCase(java.util.Locale.US);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
382	[BUG]  [BUGGY]  String  cough  =  txt.toLowerCase(java.util.Locale.US);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  cough  =  txt.toLowerCase(java.util.Locale.US);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
383	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
384	[BUG]  [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
385	[BUG]  [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toL  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toL  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toL	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
386	[BUG]  [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
387	[BUG]  [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLo  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLo  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&(txt!=  null  ||  txt.length()  ==  0))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLo	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
388	[BUG]  [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Lo	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
389	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
390	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	42	None	replace
391	[BUG]  [BUGGY]  if(txt  ==  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	42	None	replace
392	[BUG]  [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	42	None	replace
393	[BUG]  [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
394	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	8	9	replace
395	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	8	9	replace
396	[BUG]  [BUGGY]  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
397	[BUG]  [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
398	[BUG]  [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
399	[BUG]  [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
400	[BUG]  [BUGGY]  txt  =  txt.toLowerCa  >>  ';'  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCa  >>  ';'  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCa  >>  ';'	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
401	[BUG]  [BUGGY]  txt  =  txt.toLowerCaWhile(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCaWhile(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCaWhile(java.util.Locale.ENGLISH);	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
402	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
403	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
404	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
405	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt  ==  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt  ==  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt  ==  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
406	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt!=  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt!=  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  if(txt!=  null)  {  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
407	[BUG]  [BUGGY]  boolean  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  boolean  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	boolean  txt  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
408	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  tx	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
409	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	20	None	replace
410	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	20	None	replace
411	[BUG]  [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  &&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	&&  txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
412	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
413	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
414	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	6	replace
415	[BUG]  [BUGGY]  if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	6	replace
416	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	6	replace
417	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	6	replace
418	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	30	None	replace
419	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(locale.ENGLISH);  }  [CE]  cannot  find  symbol  locale  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  locale	30	None	replace
420	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(new  Locale(Locale.ENGLISH));  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(new  Locale(Locale.ENGLISH));  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(new  Locale(Locale.ENGLISH));  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
421	[BUG]  [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	while(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	30	None	replace
422	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
423	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
424	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
425	[BUG]  [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
426	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  java.util.Locale.ENGLISH.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  java.util.Locale.ENGLISH.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  java.util.Locale.ENGLISH.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	9	add
428	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	7	9	add
429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	1	replace
430	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	1	replace
431	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	1	replace
432	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ^  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    ^    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	26	1	replace
433	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
434	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
435	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  t  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  t  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  t	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
436	[BUG]  [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
437	[BUG]  [BUGGY]  boolean  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  boolean  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	boolean  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
438	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  nxt  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  nxt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  nxt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  nxt	41	None	add
439	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  ==  0)  {  return  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  ==  0)  {  return  txt.ToLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
440	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	12	None	replace
441	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.US);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	12	None	replace
442	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  java.util.Locale.ENGLISH.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  java.util.Locale.ENGLISH.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  java.util.Locale.ENGLISH.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
443	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
444	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
445	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  System.arraycopy(txt,  0,  txt,  0,  txt.length());  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  System.arraycopy(txt,  0,  txt,  0,  txt.length());  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
446	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  System.arraycopy(txt,  0,  txt,  0,  txt.length());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  System.arraycopy(txt,  0,  txt,  0,  txt.length());  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  System.arraycopy(txt,  0,  txt,  0,  txt.length());  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
447	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo	  	non-compiled	[CE]  ')'  expected	9	None	add
448	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	29	None	replace
449	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
450	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	compilable	  [FE]  ComparisonFailure  	16	1	add
451	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH	  	non-compiled	[CE]  ')'  expected	16	None	add
452	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ANGLISH);  [CE]  cannot  find  symbol  ANGLISH  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ANGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ANGLISH);	  	non-compiled	[CE]  cannot  find  symbol  ANGLISH	16	None	add
453	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	10	None	replace
454	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(null);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toLowerCase(null);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  NullPointerException  	10	11	replace
455	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(null);  }  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(null);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(null);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  NullPointerException  	10	11	replace
456	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
457	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  {  a-z]   ",   "   ");  }	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
458	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
459	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  ==  a-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
460	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  }  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  }  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
461	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  }  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  }  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( ",[  }  a-z]   ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
462	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z], ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z], ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
463	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z], ",   "   ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[  }  a-z]   ",     "   ");  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z], ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    }    a-z]   ",       "   ");    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  }  a-z], ",   "   ");	  	compilable	  [FE]  ComparisonFailure  	31	1	add
464	[BUG]  [BUGGY]  if(txt.endsWith( ".java "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.endsWith( ".java "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.endsWith( ".java "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
465	[BUG]  [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	39	None	replace
466	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  {  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  {  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  {  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  ')'  expected	4	None	add
467	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(Txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Txt  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(Txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(Txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  Txt	4	None	add
468	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  	43	None	replace
469	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCa	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  ';'  expected	43	None	replace
470	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  	43	None	replace
471	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  	43	None	replace
472	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCa    	non-compiled	[CE]  	43	None	replace
473	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
474	[BUG]  [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
475	[BUG]  [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	19	None	replace
476	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
477	[BUG]  [BUGGY]  if(txt.length()  <  =  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  <  =  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  <  =  0)  {  return  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
478	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	40	None	replace
479	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase();  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase();	      	compilable	  [FE]  ComparisonFailure  	14	2	replace
480	[BUG]  [BUGGY]  txt  =  txt.toLowerCase();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase();  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase();	      	compilable	  [FE]  ComparisonFailure  	14	2	replace
481	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.substring(0,  txt.length()  -  2);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.substring(0,  txt.length()  -  2);	      	compilable	  [FE]  ComparisonFailure  	14	11	replace
482	[BUG]  [BUGGY]  txt  =  txt.substring(0,  txt.length()  -  2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.substring(0,  txt.length()  -  2);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.substring(0,  txt.length()  -  2);	      	compilable	  [FE]  ComparisonFailure  	14	11	replace
483	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt!=  null)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt!=  null)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
484	[BUG]  [BUGGY]  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  nxt  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  nxt	20	None	replace
485	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true),  txt);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true),  txt);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  true),  txt);	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  ';'  expected	33	None	replace
486	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "false ");  [CE]  no  suitable  method  found  for  toLowerCase(Locale,String)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "false ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "false ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,String)	33	None	replace
487	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "true ");  [CE]  no  suitable  method  found  for  toLowerCase(Locale,String)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "true ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "true ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,String)	33	None	replace
488	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "null ");  [CE]  no  suitable  method  found  for  toLowerCase(Locale,String)  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "null ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,   "null ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH,    true);    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,String)	33	None	replace
489	[BUG]  [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  {  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      if(txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt.length()  {  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt.length()  {  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  ')'  expected	41	None	add
490	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.cv  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.cv  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.cv  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
491	[BUG]  [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.uuid  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  cough  is  already  defined  in  method  caverphone(String)  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.uuid  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.uuid  =  txt.toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  variable  cough  is  already  defined  in  method  caverphone(String)	36	None	add
492	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  nxt  =  txt.toLowerCase(java.util.Locale.US);  [CE]  cannot  find  symbol  nxt  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.US);  nxt  =  txt.toLowerCase(java.util.Locale.US);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt    =    txt.toLowerCase(java.util.Locale.US);    nxt  =  txt.toLowerCase(java.util.Locale.US);	  	non-compiled	[CE]  cannot  find  symbol  nxt	2	None	add
493	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.L  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.L  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.L	  	non-compiled	[CE]  ')'  expected	38	None	add
494	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  nxt  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  	non-compiled	[CE]  cannot  find  symbol  nxt	38	None	add
495	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.	  	non-compiled	[CE]  ')'  expected	38	None	add
496	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    if(txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util	  	non-compiled	[CE]  ')'  expected	38	None	add
497	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.replaceAll( "[!=  a-z]   ",   "   ");	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	11	6	replace
498	[BUG]  [BUGGY]  txt  =  txt.replaceAll( "[!=  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.replaceAll( "[!=  a-z]   ",   "   ");	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	11	6	replace
499	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	11	None	replace
500	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toUpperCase(Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Locale	11	None	replace
501	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
502	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
503	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
504	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
505	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	45	None	replace
506	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(Locale.ENGLISH);	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
507	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  0);  [CE]  cannot  find  symbol  Locale  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  0);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  0);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
508	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  2);  [CE]  cannot  find  symbol  Locale  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(Locale.ENGLISH,  2);  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(Locale.ENGLISH,  2);	  txt    =    txt.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	1	None	replace
509	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  txt.length());  }  [CE]  no  suitable  method  found  for  toLowerCase(Locale,int)  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  txt.length());  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH,  txt.length());  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(Locale,int)	8	None	replace
510	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
511	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[!=  a-z]   ",   "   ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	1	replace
512	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   "? ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   "? ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	9	replace
513	[BUG]  [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   "? ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   "? ");  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll( "[  >>  a-z] ",   "? ");	  txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).replaceAll(   "[    {    a-z]   ",       "   ");    	compilable	  [FE]  ComparisonFailure  	35	9	replace
514	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	15	None	replace
515	[BUG]  [BUGGY]  boolean  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  boolean  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	boolean  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	15	None	replace
516	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	15	None	replace
517	[BUG]  [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()!=  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	15	None	replace
518	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.Lo	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	15	None	replace
519	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
520	[BUG]  [BUGGY]  if(txt.length()  ==  1)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                  ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  1)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  1)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  return  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    return    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	21	None	replace
521	[BUG]  [BUGGY]  boolean  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  boolean  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	boolean  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  incompatible  types	37	None	replace
522	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
523	[BUG]  [BUGGY]  String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  cough  =  txt.toUpperCase(java.util.Locale.ENGLISH);	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
524	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
525	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
526	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).trim();  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).trim();	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
527	[BUG]  [BUGGY]  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).trim();  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).trim();  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	String  cough  =  txt.toLowerCase(java.util.Locale.ENGLISH).trim();	      String    cough    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	compilable	  [FE]  ComparisonFailure  	37	6	replace
528	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	44	None	replace
529	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.	  if(txt!=    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	44	None	replace
530	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
531	[BUG]  [BUGGY]  if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  1)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  1)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
533	[BUG]  [BUGGY]  if(txt.length()  ==  1)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  1)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  1)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt  ==  null)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
535	[BUG]  [BUGGY]  if(txt  ==  null)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  return  txt.toLowerCase(java.util.Locale.ENGLISH);  }	      if(txt.length()    ==    0)    {    return    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	42	6	replace
536	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
537	[BUG]  [BUGGY]  if(txt.startsWith( "- "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Locale  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.startsWith( "- "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.startsWith( "- "))  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  this.caverphone  =  txt.toLowerCase(Locale.ENGLISH);  }	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	23	None	replace
538	[BUG]  [BUGGY]  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caverphone  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  nxt  [FE]                          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caverphone  =  nxt.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	nxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  this.caverphone  =  nxt.toLowerCase(java.util.Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    this.caverphone    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  nxt	23	None	replace
539	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	6	replace
540	[BUG]  [BUGGY]  if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0  ||  txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	5	6	replace
541	[BUG]  [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	18	None	replace
542	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
543	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	compilable	  [FE]  ComparisonFailure  	3	6	replace
544	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	compilable	  [FE]  ComparisonFailure  	3	6	replace
545	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	compilable	  [FE]  ComparisonFailure  	3	1	replace
546	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }	  txt    =    txt.toLowerCase(java.util.Locale.US);    	compilable	  [FE]  ComparisonFailure  	3	1	replace
547	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  [FE]        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  	3	None	replace
548	[BUG]  [BUGGY]  if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  [FE]          ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  1)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  	3	None	replace
549	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [CE]  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale.	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  	3	None	replace
550	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.US);  }  else  {  txt  =  txt.toLowerCase(java.util.Locale	  txt    =    txt.toLowerCase(java.util.Locale.US);    	non-compiled	[CE]  	3	None	replace
551	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
552	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    if(txt!=  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	compilable	  [FE]  ComparisonFailure  	16	1	add
553	[BUG]  [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Lo  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]      txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Lo  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	        txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.toLowerCase(java.util.Lo	  	non-compiled	[CE]  ')'  expected	16	None	add
554	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(new  Locale(Locale.ENGLISH));  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase(new  Locale(Locale.ENGLISH));  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase(new  Locale(Locale.ENGLISH));  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
555	[BUG]  [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase( "ENGLISH ");  }  [CE]  no  suitable  method  found  for  toLowerCase(String)  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt!=  null)  {  txt  =  txt.toLowerCase( "ENGLISH ");  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt!=  null)  {  txt  =  txt.toLowerCase( "ENGLISH ");  }	  if(txt!=    null)    {    txt    =    txt.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  no  suitable  method  found  for  toLowerCase(String)	29	None	replace
556	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  txt  =  txt.ToLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
557	[BUG]  [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  mxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  mxt  [FE]      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  if(txt  ==  null)  {  mxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    if(txt  ==  null)  {  mxt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }	  	non-compiled	[CE]  cannot  find  symbol  mxt	9	None	add
558	[BUG]  [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  >  0)  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
559	[BUG]  [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                      ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.equals( " "))  {  String  txt  =  txt.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
560	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  variable  txt  is  already  defined  in  method  caverphone(String)  [FE]                        ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  String  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  }	      String    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  variable  txt  is  already  defined  in  method  caverphone(String)	22	None	replace
561	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	add	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	10	6	replace
562	[BUG]  [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt  ==  null  ||  txt.length()  ==  0)  {  txt  =  txt.toUpperCase(java.util.Locale.ENGLISH);  }	  if(txt    ==    null)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    	compilable	  [FE]  ComparisonFailure  	10	6	replace
563	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [CE]  [FE]              ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.L	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
564	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.  [CE]  [FE]                ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.  [BUGGY]      txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  txt  =  txt.toLowerCase(java.util.	  if(txt.length()    ==    0)    {    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    txt    =    txt.toLowerCase(java.util.Locale.    	non-compiled	[CE]  	6	None	replace
565	[BUG]  [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  String  caverphone(String  txt)  {    if(  txt  ==  null  ||  txt.length()  ==  0  )  {  return     "1111111111   ";  }      [BUGGY]  if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);  [BUGGY]    txt  =  txt.toLowerCase(java.util.Locale.ENGLISH);  txt  =  txt.replaceAll(   "[^a-z]   ",     "   ");  txt  =  txt.replaceAll(   "e$   ",     "   ");  //  2.0  only  txt  =  txt.replaceAll(   "^cough   ",     "cou2f   ");  txt  =  txt.replaceAll(   "^rough   ",     "rou2f   ");  [CLASS]  Caverphone  [METHOD]  caverphone  [RETURN_TYPE]  String  String  txt  [VARIABLES]  boolean  String  txt  	projects/Codec10/src/java/org/apache/commons/codec/language/Caverphone.java	0.30151134457776363	59	59	1	replace	if(txt.length()  ==  0)  {  txt  =  txt.toLowerCase(Locale.ENGLISH);  txt  =  txt.toLowerCase(Locale.ENGLISH);	      txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    txt    =    txt.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
