bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ')'  expected  =  getInput().toUpperCase(Locale.ENGLISH);  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getInput().toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
2	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(getInput().toUpperCase(Locale.ENGLISH));  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(getInput().toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(getInput().toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
3	[BUG]  [BUGGY]  ')'  expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
4	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(getInput().toUpperCase(Locale.ENGLISH));  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(getInput().toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(getInput().toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
5	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(getInput().toUpperCase(java.util.Locale.ENGLISH));  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(getInput().toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(getInput().toUpperCase(java.util.Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
6	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  getInput().toUpperCase(Locale.ENGLISH));  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  getInput().toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this,  getInput().toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
7	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(getInput().toUpperCase(java.util.Locale.ENGLISH));  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(getInput().toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(getInput().toUpperCase(java.util.Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
8	[BUG]  [BUGGY]  ')'  expected  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getInput().toLowerCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
9	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  getInput().toUpperCase(java.util.Locale.ENGLISH));  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  getInput().toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this,  getInput().toUpperCase(java.util.Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
10	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
11	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
12	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
13	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
14	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
15	[BUG]  [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
16	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
17	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
18	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
19	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
20	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
21	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
22	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
23	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
24	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
25	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	24	None	replace
26	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
27	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
28	[BUG]  [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NONE;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NONE;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  DoubleMetaphoneResult.NONE;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
29	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
30	[BUG]  [BUGGY]  if(input!=  null)return  DoubleMetaphoneResult.NONE;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  DoubleMetaphoneResult.NONE;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  DoubleMetaphoneResult.NONE;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
31	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
32	[BUG]  [BUGGY]  if(input  ==  null)return  Null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  Null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  Null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
33	[BUG]  [BUGGY]  if(null!=  input)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)return  null;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
34	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
35	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
36	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
37	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
38	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
39	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  Double  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  Double  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  Double	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
40	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
41	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
42	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  new  DoubleMetaphoneResult();  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
43	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
44	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
45	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Lo  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Lo  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Lo	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
46	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
47	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
48	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
50	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
51	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  result;  }  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
52	[BUG]  [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
53	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  if(input  ==  null)  {  if(!cleanInput)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  if(!cleanInput)  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  if(!cleanInput)  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
56	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  if(!cleanInput)  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
57	[BUG]  [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  if(input  ==  null)  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
58	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input!=  null)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  if(input!=  null)  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  if(input!=  null)  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
59	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  if(input  ==  null)  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
60	[BUG]  [BUGGY]  ')'  expected  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
61	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult();	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
62	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "));  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
63	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toLowerCase  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toLowerCase  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toLowerCase	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
64	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "),  Integer.parseIn  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "),  Integer.parseIn  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "),  Integer.parseIn	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
65	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "),  Integer.parseInt  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "),  Integer.parseInt  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS "),  Integer.parseInt	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
66	[BUG]  [BUGGY]  ')'  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
67	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toString());  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toString());  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toString());	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
68	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toLowerCase());  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toLowerCase());  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").toLowerCase());	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
69	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	8	None	replace
70	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
78	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
79	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
81	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
82	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
83	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
84	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	46	None	replace
85	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(input.length()  -  1)!=  ')')  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(input.length()  -  1)!=  ')')  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(input.length()  -  1)!=  ')')  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
86	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(input.length()  -  1)!=  '/'))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(input.length()  -  1)!=  '/'))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(input.length()  -  1)!=  '/'))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
87	[BUG]  [BUGGY]  ||(input!=  null  &&  input.equals( " ")))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.equals( " ")))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.equals( " ")))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
88	[BUG]  [BUGGY]  ||(input!=  null  &&  input.equals( "null ")))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.equals( "null ")))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.equals( "null ")))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
89	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input.charAt(input.length()  -  1)!=  '/'))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input.charAt(input.length()  -  1)!=  '/'))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||(input.charAt(input.length()  -  1)!=  '/'))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
90	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input.charAt(input.length()  -  1)!=  ')')  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input.charAt(input.length()  -  1)!=  ')')  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||(input.charAt(input.length()  -  1)!=  ')')  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
91	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	46	None	replace
92	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(0)!=  '-'))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(0)!=  '-'))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||(input  ==  null  &&  input.charAt(0)!=  '-'))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
93	[BUG]  [BUGGY]  ')'  expected  =  DoubleMetaphoneResult.None.class;  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  DoubleMetaphoneResult.None.class;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  DoubleMetaphoneResult.None.class;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
94	[BUG]  [BUGGY]  ')'  expected;  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
95	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.class);  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.class);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.class);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
96	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult.None.class;  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult.None.class;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult.None.class;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
97	[BUG]  [BUGGY]  ')'  expected  =  true;  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  true;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  true;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
98	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Locale.getDefault());  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Locale.getDefault());  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Locale.getDefault());	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
99	[BUG]  [BUGGY]  ')'  expected  =  super.cleanInput(input);  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  super.cleanInput(input);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  super.cleanInput(input);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
100	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  minLength  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
101	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  minLength  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
102	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
103	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  minLength  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
104	[BUG]  [BUGGY]  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  minLength  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.toUpperCase(Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
105	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  new  String(input.toUpperCase(Locale.ENGLISH));  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  minLength  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  new  String(input.toUpperCase(Locale.ENGLISH));  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  new  String(input.toUpperCase(Locale.ENGLISH));  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
106	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
107	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toLowerCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  minLength  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toLowerCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toLowerCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
108	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  minLength  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  minLength	31	None	replace
109	[BUG]  [BUGGY]  ')'  expected  =  DoubleMetaphoneResult.NONE;  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  DoubleMetaphoneResult.NONE;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  DoubleMetaphoneResult.NONE;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
110	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
111	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt(input)));  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt(input)));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt(input)));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
112	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "- ")));  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "- ")));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "- ")));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
113	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "None ")));  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "None ")));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "None ")));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
114	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
115	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "double ")));  [CE]  not  a  statement  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "double ")));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "double ")));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
116	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(java.util.Locale.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  minLength  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(java.util.Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(java.util.Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	22	None	replace
117	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  minLength  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	22	None	replace
118	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  minLength  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	22	None	replace
119	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(locale.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  minLength  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	22	None	replace
120	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(BooleanMetaphone.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  minLength  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(BooleanMetaphone.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(BooleanMetaphone.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	22	None	replace
121	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(locale.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  minLength  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	22	None	replace
122	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  minLength  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  minLength	42	None	replace
123	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  minLength  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  minLength	42	None	replace
124	[BUG]  [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NULL;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  minLength  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NULL;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  DoubleMetaphoneResult.NULL;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  minLength	42	None	replace
125	[BUG]  [BUGGY]  if(input  ==  null)return  Null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  minLength  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  Null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  Null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  minLength	42	None	replace
126	[BUG]  [BUGGY]  ((  java.util.Locale)input).toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  minLength  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)input).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)input).toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
127	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  minLength  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
128	[BUG]  [BUGGY]  ((  java.util.Locale)null).put(input,  new  DoubleMetaphoneResult());  [CE]  cannot  find  symbol  minLength  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)null).put(input,  new  DoubleMetaphoneResult());  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)null).put(input,  new  DoubleMetaphoneResult());	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
129	[BUG]  [BUGGY]  ((  java.util.Locale)input).doubleValue();  [CE]  cannot  find  symbol  minLength  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)input).doubleValue();  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)input).doubleValue();	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
130	[BUG]  [BUGGY]  ((  java.util.Locale)null).put(input,  result);  [CE]  cannot  find  symbol  minLength  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)null).put(input,  result);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)null).put(input,  result);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
131	[BUG]  [BUGGY]  ((  java.util.Locale)input).toUpperCase(java.util.Locale.ENGLISH,  input);  [CE]  cannot  find  symbol  minLength  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)input).toUpperCase(java.util.Locale.ENGLISH,  input);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)input).toUpperCase(java.util.Locale.ENGLISH,  input);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
132	[BUG]  [BUGGY]  ((  java.util.Locale)null).put(input,  null);  [CE]  cannot  find  symbol  minLength  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)null).put(input,  null);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)null).put(input,  null);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
133	[BUG]  [BUGGY]  ((  java.util.Locale)input).toUpperCase(java.util.Locale.US);  [CE]  cannot  find  symbol  minLength  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ((  java.util.Locale)input).toUpperCase(java.util.Locale.US);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	((  java.util.Locale)input).toUpperCase(java.util.Locale.US);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	43	None	replace
134	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	10	None	replace
135	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  minLength  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  minLength	10	None	replace
136	[BUG]  [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
137	[BUG]  [BUGGY]  if(getInput()  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(getInput()  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(getInput()  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
138	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
139	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
140	[BUG]  [BUGGY]  return(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  Feature  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  return(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
141	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
142	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
143	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
144	[BUG]  [BUGGY]  if(null!=  input)return  null;  if(input  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  Feature  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)return  null;  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)return  null;  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
145	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
146	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Lo  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Lo  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Lo	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
147	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
148	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
149	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
150	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
151	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
152	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Feature  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
153	[BUG]  [BUGGY]  char  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  Feature  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  char  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
154	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Feature  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
155	[BUG]  [BUGGY]  String  input  =  super.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  Feature  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  super.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  super.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
156	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  null);  [CE]  cannot  find  symbol  Feature  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  null);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  null);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
157	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Feature  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
158	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH,  null);  [CE]  cannot  find  symbol  Feature  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH,  null);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH,  null);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
159	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH,  true);  [CE]  cannot  find  symbol  Feature  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH,  true);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH,  true);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	3	None	replace
160	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Feature  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
161	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Feature  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
162	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Feature  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
163	[BUG]  [BUGGY]  char  input  =  getInput().toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Feature  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  char  input  =  getInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =  getInput().toUpperCase(Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
164	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  null);  [CE]  cannot  find  symbol  Feature  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  null);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH,  null);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
165	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  1);  [CE]  cannot  find  symbol  Feature  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  1);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH,  1);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
166	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  2);  [CE]  cannot  find  symbol  Feature  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  2);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH,  2);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
167	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  4);  [CE]  cannot  find  symbol  Feature  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  4);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH,  4);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
168	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  return  result;  [CE]  cannot  find  symbol  Feature  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  return  result;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  return  result;	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	21	None	replace
169	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
170	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  [CE]  cannot  find  symbol  Feature  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	21	None	replace
171	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
172	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)));  return  result;  [CE]  cannot  find  symbol  Feature  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)));  return  result;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)));  return  result;	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	21	None	replace
173	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  return  result;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
174	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
175	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)).return  result;  [CE]  <identifier>  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)).return  result;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)).return  result;	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
176	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  input;  }  [CE]  cannot  find  symbol  Feature  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input  ==  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input  ==  null)  {  return  input;  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
177	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  input;  }  [CE]  cannot  find  symbol  Feature  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input  ==  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input  ==  null)  {  return  input;  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
178	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  input;  }  [CE]  cannot  find  symbol  Feature  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  input;  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
179	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input!=  null)  {  return  this;  }  [CE]  cannot  find  symbol  Feature  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input!=  null)  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input!=  null)  {  return  this;  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
180	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
181	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
182	[BUG]  [BUGGY]  if(expected  ==  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
184	[BUG]  [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
185	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
186	[BUG]  [BUGGY]  if(expected!=  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
187	[BUG]  [BUGGY]  if(expected!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
188	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
189	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this.cleanInput);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this.cleanInput);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this.cleanInput);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
190	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult().doubleValue();  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult().doubleValue();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult().doubleValue();	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
191	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this);  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
192	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
193	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
194	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  expected  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  expected  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  expected	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
195	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
196	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  }  ')'  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  }  ')'  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  }  ')'	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
197	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  expected);  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  expected);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  expected);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
198	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')'	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
199	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
200	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
201	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
202	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
203	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
204	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
205	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  this;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
206	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  this;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
207	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
208	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
209	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  	14	None	replace
210	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  	14	None	replace
211	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  	14	None	replace
212	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  	14	None	replace
213	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  	14	None	replace
214	[BUG]  [BUGGY]  String  input  =(String)this.input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.input.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
215	[BUG]  [BUGGY]  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)input.toUpperCase(Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
216	[BUG]  [BUGGY]  char  input  =(char)input.toUpperCase(Locale.ENGLISH);  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  char  input  =(char)input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =(char)input.toUpperCase(Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
217	[BUG]  [BUGGY]  String  input  =(String)this.input.toUpperCase(Locale.ENGLISH);  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.input.toUpperCase(Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
218	[BUG]  [BUGGY]  char  input  =(char)input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  char  input  =(char)input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =(char)input.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
219	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
220	[BUG]  [BUGGY]  String  input  =(String)input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)input.toLowerCase(java.util.Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	28	None	replace
221	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
222	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
223	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
224	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
225	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
226	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
227	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
228	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                      NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
229	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
230	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
231	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
232	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
233	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
234	[BUG]  [BUGGY]  cleanInput  =  getInput().toUpperCase(Locale.ENGLISH);  [CE]  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  cleanInput  =  getInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	cleanInput  =  getInput().toUpperCase(Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
235	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
236	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  [FE]                                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
237	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	9	None	replace
238	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	44	None	replace
239	[BUG]  [BUGGY]  if(null!=  input)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	44	None	replace
240	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	44	None	replace
241	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
242	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
243	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
244	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
245	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
246	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
247	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
248	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  	7	None	replace
249	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
250	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
251	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
252	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
253	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
254	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
255	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
256	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  [CE]  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  	16	None	replace
257	[BUG]  [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =(char)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	1	None	replace
258	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  null);  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  null);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  null);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
259	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
260	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
261	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  1);  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  1);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  1);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
262	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  2);  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  2);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  2);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
263	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  0);  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  0);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  0);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
264	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  true);  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  true);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  true);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	1	None	replace
265	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input  >=  null)  {  return  input;  }  [CE]  cannot  find  symbol  doubleMetaphoneLen  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input  >=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input  >=  null)  {  return  input;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  doubleMetaphoneLen	45	None	replace
266	[BUG]  [BUGGY]  ')'  expected  =  getInput().toLowerCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getInput().toLowerCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getInput().toLowerCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	33	None	replace
267	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
268	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
269	[BUG]  [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
270	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
271	[BUG]  [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
272	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
273	[BUG]  [BUGGY]  final  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
274	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
275	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input;  }  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  	4	None	replace
276	[BUG]  [BUGGY]  ')'  expected  =  getEmptyMetaphone().toUpperCase(java.util.Locale.ENGLISH);  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getEmptyMetaphone().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getEmptyMetaphone().toUpperCase(java.util.Locale.ENGLISH);	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  	30	None	replace
277	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
278	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
279	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
280	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
281	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
282	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
283	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
284	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	18	None	replace
285	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
286	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
287	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
288	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
289	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
290	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
291	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone();  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone();	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
292	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH)+ ", "  +  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH)+ ", "  +  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH)+ ", "  +  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	20	None	replace
293	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	20	None	replace
294	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  cleanInput  =  input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	20	None	replace
295	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").doubleValue());  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").doubleValue());  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "yyyy-MM-dd'T'HH:mm:ss.SSS ").doubleValue());	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	36	None	replace
296	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
297	[BUG]  [BUGGY]  return(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
298	[BUG]  [BUGGY]  return(input!=  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  return(input!=  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input!=  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
299	[BUG]  [BUGGY]  return(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  return(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
300	[BUG]  [BUGGY]  return(input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return(input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH));	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
301	[BUG]  [BUGGY]  return(input!=  null)? "null "  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  return(input!=  null)? "null "  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input!=  null)? "null "  :  input.toUpperCase(java.util.Locale.ENGLISH);	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
302	[BUG]  [BUGGY]  return(input!=  null)?  null  :  input.toUpperCase();  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  return(input!=  null)?  null  :  input.toUpperCase();  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input!=  null)?  null  :  input.toUpperCase();	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
303	[BUG]  [BUGGY]  return(input  ==  null)?  null  :  input.toUpperCase();  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  return(input  ==  null)?  null  :  input.toUpperCase();  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input  ==  null)?  null  :  input.toUpperCase();	  return    this;    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	11	None	replace
304	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	40	None	replace
305	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	40	None	replace
306	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()!=  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()!=  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()!=  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	40	None	replace
307	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  >=  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  >=  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  >=  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	40	None	replace
308	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	40	None	replace
309	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  NumberMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  NumberMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  NumberMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  ES_EP_EB_EL_EY_IB_IL_IN_IE_ER	40	None	replace
310	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  in.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  in.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  in.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	40	None	replace
311	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	40	None	replace
312	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  1)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  ')'  expected  [FE]                                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  1)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  1)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  ')'  expected	40	None	replace
313	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  mutableFor(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	mutableFor(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
314	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  mutableFor(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	mutableFor(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
315	[BUG]  [BUGGY]  mutableTo(input)  {  return  null;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  mutableTo(input)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	mutableTo(input)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
316	[BUG]  [BUGGY]  if(input!=  null)  {  return  this;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  this;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
317	[BUG]  [BUGGY]  mutableMap.put(input,  new  DoubleMetaphoneResult());  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  mutableMap.put(input,  new  DoubleMetaphoneResult());  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	mutableMap.put(input,  new  DoubleMetaphoneResult());	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
318	[BUG]  [BUGGY]  mutableMap.put(input,  null);  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  mutableMap.put(input,  null);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	mutableMap.put(input,  null);	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
319	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
320	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
321	[BUG]  [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
322	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
323	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
324	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
325	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
326	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
327	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(locale.ENGLISH)  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
328	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
329	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
330	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
331	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
332	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
333	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
334	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
335	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
336	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;	43	None	replace
337	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
338	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
339	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(java.util.Lo  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(java.util.Lo  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(java.util.Lo	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
340	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(java.util.Local  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(java.util.Local  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result.toUpperCase(java.util.Locale.ENGLISH);  System.arraycopy(input,  0,  result,  0,  input.toUpperCase(java.util.Local	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
341	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	48	None	replace
342	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	48	None	replace
343	[BUG]  [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null  ==  input)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	48	None	replace
344	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(getInput().toLowerCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(getInput().toLowerCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(getInput().toLowerCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	29	None	replace
345	[BUG]  [BUGGY]  ')'  expected  =  getInput().toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult();  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getInput().toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getInput().toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult();	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	33	None	replace
346	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
347	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
348	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
349	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
350	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH)  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH)  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH)	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
351	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "u000 "  +  Integer.parseInt( "u000 ")));  [CE]  not  a  statement  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "u000 "  +  Integer.parseInt( "u000 ")));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.parseInt( "u000 "  +  Integer.parseInt( "u000 ")));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
352	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.class,  Integer.parseInt(Integer.class),  Integer.parseInt(Integer.class));  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.class,  Integer.parseInt(Integer.class),  Integer.parseInt(Integer.class));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.class,  Integer.parseInt(Integer.class),  Integer.parseInt(Integer.class));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
353	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.class,  Integer.toString(Integer.class),  Integer.toString(Integer.class));  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.class,  Integer.toString(Integer.class),  Integer.toString(Integer.class));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.class,  Integer.toString(Integer.class),  Integer.toString(Integer.class));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
354	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.class),  Integer.parseInt(Integer.class));  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.class),  Integer.parseInt(Integer.class));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.parseInt(Integer.class),  Integer.parseInt(Integer.class));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
355	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	22	None	replace
356	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	22	None	replace
357	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  doubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  doubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  doubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	22	None	replace
358	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	28	None	replace
359	[BUG]  [BUGGY]  ')'  input  =(String)input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ')'  input  =(String)input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  input  =(String)input.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	28	None	replace
360	[BUG]  [BUGGY]  ')'  input  =(String)input.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  input  =(String)input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  input  =(String)input.toUpperCase(Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	28	None	replace
361	[BUG]  [BUGGY]  result.toUpperCase(Integer.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(Integer.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(Integer.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
362	[BUG]  [BUGGY]  result.toUpperCase(Integer.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(Integer.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(Integer.valueOf(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
363	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput.toUpperCase(Locale.ENGLISH),  cleanInput.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput.toUpperCase(Locale.ENGLISH),  cleanInput.toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput.toUpperCase(Locale.ENGLISH),  cleanInput.toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
364	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput.toLowerCase(Locale.ENGLISH),  cleanInput.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput.toLowerCase(Locale.ENGLISH),  cleanInput.toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(this,  cleanInput.toLowerCase(Locale.ENGLISH),  cleanInput.toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
365	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
366	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH).toUpperCase(  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH).toUpperCase(  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH).toUpperCase(	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
367	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  input;  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  input;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	45	None	replace
368	[BUG]  [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  input;  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null  ==  input)return  null;  if(input!=  null)  {  return  input;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	45	None	replace
369	[BUG]  [BUGGY]  if(null  ==  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(null  ==  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null  ==  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	4	None	replace
370	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	4	None	replace
371	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	4	None	replace
372	[BUG]  [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
373	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
374	[BUG]  [BUGGY]  if(startingInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(startingInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(startingInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
375	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
376	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
377	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
378	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
379	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
380	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
381	[BUG]  [BUGGY]  if(null!=  input)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	31	None	replace
382	[BUG]  [BUGGY]  ')'  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  not  a  statement	31	None	replace
383	[BUG]  [BUGGY]  if(null!=  input.toUpperCase(Locale.ENGLISH))  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input.toUpperCase(Locale.ENGLISH))  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input.toUpperCase(Locale.ENGLISH))  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	31	None	replace
384	[BUG]  [BUGGY]  return(this.input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return(this.input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(this.input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  return    this;    	non-compiled	[CE]  method  toString  in  class  Object  cannot  be  applied  to  given  types;	11	None	replace
385	[BUG]  [BUGGY]  return(input  ==  null)? "null "  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_COLLECTION  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  return(input  ==  null)? "null "  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return(input  ==  null)? "null "  :  input.toUpperCase(java.util.Locale.ENGLISH);	  return    this;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COLLECTION	11	None	replace
386	[BUG]  [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
387	[BUG]  [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
388	[BUG]  [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
389	[BUG]  [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  return  getInput().toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input  ==  null)  {  return  getInput().toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input  ==  null)  {  return  getInput().toUpperCase(Locale.ENGLISH);  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
390	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
391	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
392	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
393	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
394	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
395	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
396	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result  [CE]  ';'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
397	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result  [CE]  ';'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
398	[BUG]  [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  DEFAULT_COLLECTION  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(getInput()!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COLLECTION	2	None	replace
399	[BUG]  [BUGGY]  Object  input  =  getInput().toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_COLLECTION  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  input  =  getInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	Object  input  =  getInput().toUpperCase(Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COLLECTION	2	None	replace
400	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH  + "n ");  [CE]  cannot  find  symbol  DEFAULT_COLLECTION  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH  + "n ");  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH  + "n ");	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COLLECTION	2	None	replace
401	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  DEFAULT_COLLECTION  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COLLECTION	2	None	replace
402	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString(  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString(  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString(	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	36	None	replace
403	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	36	None	replace
404	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Locale.UTF8));  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Locale.UTF8));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Locale.UTF8));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	36	None	replace
405	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
406	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
407	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
408	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
409	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
410	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
411	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
412	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toLowerCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
413	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Integer.toString(Locale.  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Integer.toString(Locale.  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Integer.toString(Locale.	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	34	None	replace
414	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Integer.toString(Locale.UTF8));  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Integer.toString(Locale.UTF8));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Integer.toString(Locale.UTF8));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	34	None	replace
415	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Locale.ENGLISH));  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toString(Locale.ENGLISH),  Integer.toString(Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	34	None	replace
416	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Locale.UTF8));  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Locale.UTF8));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Locale.UTF8));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	34	None	replace
417	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  ')'  expected	1	None	replace
418	[BUG]  [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;	1	None	replace
419	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;	1	None	replace
420	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;	7	None	replace
421	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;	7	None	replace
422	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  constructor  DoubleMetaphone  in  class  DoubleMetaphone  cannot  be  applied  to  given  types;	7	None	replace
423	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
424	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString(  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString(  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString(	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
425	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
426	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphone(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphone(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphone(Integer.toHexString(Locale.ENGLISH),  Integer.toHexString(Integer.toHexString	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
427	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
428	[BUG]  [BUGGY]  if(null!=  input)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
429	[BUG]  [BUGGY]  if(return  null)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(return  null)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(return  null)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
430	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
431	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  	19	None	replace
432	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  	3	None	replace
433	[BUG]  [BUGGY]  char  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  options  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  char  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  options	3	None	replace
434	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  options  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  options	3	None	replace
435	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [CE]  cannot  find  symbol  options  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  options	3	None	replace
436	[BUG]  [BUGGY]  String  input  =  super.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  options  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  super.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  super.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  options	3	None	replace
437	[BUG]  [BUGGY]  if(input  ==  null)return  new  DoubleMetaphoneResult();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  options  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  new  DoubleMetaphoneResult();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  new  DoubleMetaphoneResult();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  options	42	None	replace
438	[BUG]  [BUGGY]  if(input  ==  null)turn  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)turn  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)turn  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	42	None	replace
439	[BUG]  [BUGGY]  if(null!=  input)return  null;  if(input!=  null)  {  return  input;  }  [CE]  cannot  find  symbol  options  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)return  null;  if(input!=  null)  {  return  input;  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  options	49	None	replace
440	[BUG]  [BUGGY]  if(StringUtils.isEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(StringUtils.isEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(StringUtils.isEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
441	[BUG]  [BUGGY]  if(StringUtils.isNotEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(StringUtils.isNotEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(StringUtils.isNotEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
442	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
443	[BUG]  [BUGGY]  if(StringUtil.isEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(StringUtil.isEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(StringUtil.isEmpty(input))  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
444	[BUG]  [BUGGY]  ')'  expected  =  getNumberInput().toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getNumberInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getNumberInput().toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  not  a  statement	32	None	replace
445	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
446	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
447	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
448	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
449	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
450	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
451	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
452	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  ')'  expected	21	None	replace
453	[BUG]  [BUGGY]  if(null!=  input)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
454	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
455	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
456	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
457	[BUG]  [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	9	None	replace
458	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	9	None	replace
459	[BUG]  [BUGGY]  final  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	9	None	replace
460	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCa  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCa  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCa	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
461	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCas  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCas  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCas	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
462	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
463	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
464	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpper  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpper  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpper	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
465	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(L  >>  ')'  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(L  >>  ')'  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(L  >>  ')'	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
466	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperC  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperC  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperC	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
467	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(L  >>  '  [CE]  ')'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(L  >>  '  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result.toUpperCase(String.valueOf(input.toUpperCase(Locale.ENGLISH));  result.toUpperCase(L  >>  '	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
468	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  Double	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
469	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
470	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphone  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphone  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphone	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
471	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
472	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
473	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
474	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
475	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
476	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
477	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
478	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
479	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
480	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
481	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
482	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
483	[BUG]  [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput.isEmpty())  {  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
484	[BUG]  [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
485	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
486	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
487	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
488	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
489	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
490	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
491	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
492	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
493	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
494	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  reference  maxCodeLen  before  supertype  constructor  has  been  called  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  reference  maxCodeLen  before  supertype  constructor  has  been  called	44	None	replace
495	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
496	[BUG]  [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(expected!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
497	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
498	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
499	[BUG]  [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NONE;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  Feature  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NONE;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  DoubleMetaphoneResult.NONE;  if(input  ==  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
500	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  Feature  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
501	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  Feature  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
502	[BUG]  [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  Feature  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null  ==  input)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
503	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
504	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [CE]  unclosed  string  literal  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
505	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  [CE]  unclosed  string  literal  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
506	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  unclosed  string  literal  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
507	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMetaphoneResult()	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
508	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  Double  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  Double  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  Double	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
509	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
510	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMeta  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMeta  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  new  DoubleMeta	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  ')'  expected	16	None	replace
511	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	24	None	replace
512	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphone  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphone  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphone  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
513	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(Input  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(Input  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(Input  input  :  input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toLowerCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
514	[BUG]  [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NONE;  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.NONE;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  DoubleMetaphoneResult.NONE;	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	47	None	replace
515	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  DoubleMetaphoneResult.NONE)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  DoubleMetaphoneResult.NONE)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)return  null;  if(input!=  DoubleMetaphoneResult.NONE)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	47	None	replace
516	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(input!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	47	None	replace
517	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.NONE;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	47	None	replace
518	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
519	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
520	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!cleanInput)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
521	[BUG]  [BUGGY]  if(this.cleanInput!=  false)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  false)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  false)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
522	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
523	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
524	[BUG]  [BUGGY]  '(')return  new  DoubleMetaphone();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  '(')return  new  DoubleMetaphone();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')return  new  DoubleMetaphone();	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
525	[BUG]  [BUGGY]  '(')expected  =  true;  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  '(')expected  =  true;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')expected  =  true;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
526	[BUG]  [BUGGY]  ')'  expected  =  super.cleanInput();  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  super.cleanInput();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  super.cleanInput();	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphone();    }    	non-compiled	[CE]  not  a  statement	37	None	replace
527	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
528	[BUG]  [BUGGY]  ')'  expected  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  input.toUpperCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
529	[BUG]  [BUGGY]  ')'  expected  =  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  input.toLowerCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
530	[BUG]  [BUGGY]  ')'  expected  =  input.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  input.toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
531	[BUG]  [BUGGY]  '(')return  new  DoubleMetaphoneResult();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  '(')return  new  DoubleMetaphoneResult();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')return  new  DoubleMetaphoneResult();	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	34	None	replace
532	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  }  [CE]  cannot  find  symbol  DEFAULT_VERSION  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VERSION	20	None	replace
533	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)/  2.0  +  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)/  2.0  +  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH)/  2.0  +  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
534	[BUG]  [BUGGY]  &&  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  &&  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	&&  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
535	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)/  2.0  +  input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)/  2.0  +  input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)/  2.0  +  input.toUpperCase(	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
536	[BUG]  [BUGGY]  ')'  expected  =  super.cleanInput(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  super.cleanInput(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  super.cleanInput(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	33	None	replace
537	[BUG]  [BUGGY]  ')'  expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult();  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult();  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult();	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	33	None	replace
538	[BUG]  [BUGGY]  if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	42	None	replace
539	[BUG]  [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.UNKNOWN;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  DoubleMetaphoneResult.UNKNOWN;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  DoubleMetaphoneResult.UNKNOWN;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	42	None	replace
540	[BUG]  [BUGGY]  '(')return  DoubleMetaphoneResult.NONE;  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  '(')return  DoubleMetaphoneResult.NONE;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')return  DoubleMetaphoneResult.NONE;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  not  a  statement	39	None	replace
541	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
542	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
543	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
544	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
545	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
546	[BUG]  [BUGGY]  char  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  char  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	char  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	2	None	replace
547	[BUG]  [BUGGY]  Object  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	Object  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	2	None	replace
548	[BUG]  [BUGGY]  byte  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  byte  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	byte  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	2	None	replace
549	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH  + ", ");  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH  + ", ");  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH  + ", ");	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	2	None	replace
550	[BUG]  [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  this);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  input  =  getInput().toUpperCase(Locale.ENGLISH,  this);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =  getInput().toUpperCase(Locale.ENGLISH,  this);	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	2	None	replace
551	[BUG]  [BUGGY]  '(')return  DoubleMetaphoneResult.None.class;  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  '(')return  DoubleMetaphoneResult.None.class;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')return  DoubleMetaphoneResult.None.class;	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
552	[BUG]  [BUGGY]  ')'  expected  =  input.toLowerCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  input.toLowerCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
553	[BUG]  [BUGGY]  if(this.cleanInput!=  null)return  null;  if(this.cleanInput!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  Feature  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)return  null;  if(this.cleanInput!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)return  null;  if(this.cleanInput!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  Feature	44	None	replace
554	[BUG]  [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  Feature  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(null  ==  input)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null  ==  input)return  null;  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  Feature	44	None	replace
555	[BUG]  [BUGGY]  if(return  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(return  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(return  null)return  null;  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
556	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
557	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
558	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
559	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
560	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
561	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
562	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
563	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  >=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  >=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  >=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
564	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L  >>  ')'  expected  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L  >>  ')'  expected  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L  >>  ')'  expected	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
565	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L  >>  ')'  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L  >>  ')'  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L  >>  ')'	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
566	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L!=  ')'  expected  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L!=  ')'  expected  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  result.toUpperCase(java.util.L!=  ')'  expected	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    result.toUpperCase(java.util.L    	non-compiled	[CE]  ')'  expected	26	None	replace
567	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  cannot  find  symbol  Feature  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Feature	4	None	replace
568	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH,  input);  }  [CE]  cannot  find  symbol  Feature  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH,  input);  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  return  input.toUpperCase(Locale.ENGLISH,  input);  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    return    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  cannot  find  symbol  Feature	4	None	replace
569	[BUG]  [BUGGY]  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  Feature  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	43	None	replace
570	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  return  result;  }  [CE]  cannot  find  symbol  Feature  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	43	None	replace
571	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
572	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
573	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
574	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
575	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
576	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.length()  ==  0)  {  String  input  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input    ==    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
577	[BUG]  [BUGGY]  if(!(input  instanceof  String))  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  options  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(!(input  instanceof  String))  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(!(input  instanceof  String))  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	31	None	replace
578	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  options  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	31	None	replace
579	[BUG]  [BUGGY]  if(output!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  options  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(output!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(output!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	31	None	replace
580	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  new  DoubleMetaphoneResult();  }  [CE]  cannot  find  symbol  options  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  String  input  =(String)input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  new  DoubleMetaphoneResult();  }	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	31	None	replace
581	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  options  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	7	None	replace
582	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  options  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	7	None	replace
583	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  [CE]  cannot  find  symbol  options  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  options	7	None	replace
584	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
585	[BUG]  [BUGGY]  ||(input!=  null  &&  input.trim().length()  ==  0))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.trim().length()  ==  0))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.trim().length()  ==  0))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
586	[BUG]  [BUGGY]  ||(input!=  null  &&  input.equals( "- ")))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.equals( "- ")))  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.equals( "- ")))  {  return  null;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
587	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0))  {  return  new  DoubleMetaphoneResult(Integer.valueOf(input.charAt(0)));  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0))  {  return  new  DoubleMetaphoneResult(Integer.valueOf(input.charAt(0)));  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0))  {  return  new  DoubleMetaphoneResult(Integer.valueOf(input.charAt(0)));  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
588	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||  input.charAt(input.length()  -  1)!=  ')';  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||  input.charAt(input.length()  -  1)!=  ')';  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||  input.charAt(input.length()  -  1)!=  ')';	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
589	[BUG]  [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||  input.charAt(input.length()  -  1)!=  ')')  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  ||(input!=  null  &&  input.length()  >  0)||  input.charAt(input.length()  -  1)!=  ')')  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	||(input!=  null  &&  input.length()  >  0)||  input.charAt(input.length()  -  1)!=  ')')  {  return  this;  }	  if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
590	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
591	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
592	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
593	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  >=  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  >=  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  >=  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
594	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE;  }	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.NONE;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
595	[BUG]  [BUGGY]  '(')if(input  ==  null)return  null;  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  '(')if(input  ==  null)return  null;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')if(input  ==  null)return  null;	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
596	[BUG]  [BUGGY]  return  new  DoubleMetaphoneResult();  [CE]  cannot  find  symbol  options  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return  new  DoubleMetaphoneResult();  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	return  new  DoubleMetaphoneResult();	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  cannot  find  symbol  options	13	None	replace
597	[BUG]  [BUGGY]  '(')if(input!=  null)return  null;  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  '(')if(input!=  null)return  null;  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')if(input!=  null)return  null;	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
598	[BUG]  [BUGGY]  '(')expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  '(')expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')expected  =  getInput().toUpperCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  not  a  statement	32	None	replace
599	[BUG]  [BUGGY]  '(')expected  =  getInput().toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  '(')expected  =  getInput().toUpperCase(Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')expected  =  getInput().toUpperCase(Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  not  a  statement	32	None	replace
600	[BUG]  [BUGGY]  '(')expected  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  '(')expected  =  getInput().toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	'(')expected  =  getInput().toLowerCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    output;    }    	non-compiled	[CE]  not  a  statement	32	None	replace
601	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
602	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
603	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
604	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
605	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
606	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
607	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
608	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput  ==  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput  ==  null)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
609	[BUG]  [BUGGY]  if(null  ==  input)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(null  ==  input)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null  ==  input)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
610	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput!=  null)  {  if(input  ==  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
611	[BUG]  [BUGGY]  if(null!=  input)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(null!=  input)  {  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(null!=  input)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
612	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(startTime  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(startTime  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
613	[BUG]  [BUGGY]  if(startingInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(startingInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(startingInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
614	[BUG]  [BUGGY]  if(cleanInput())  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput())  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput())  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
615	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(startTime  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(startTime  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
616	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)  {  input  =  getInput().toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	      if(input!=    null)    {    String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
617	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }	      String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	3	None	replace
618	[BUG]  [BUGGY]  if(return  null)return  null;  if(input!=  null)  {  return  input;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(return  null)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(return  null)return  null;  if(input!=  null)  {  return  input;  }	  if(input!=    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
619	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
620	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
621	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input!=  null  ||  input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input!=  null  ||  input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input!=  null  ||  input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
622	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
623	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
624	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  this;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  this;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toLowerCase(Locale.ENGLISH)  ==  String.valueOf(input.toLowerCase(Locale.ENGLISH))  {  return  this;  }	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
625	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  this	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
626	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)  ==  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return	  if(input!=    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)    ==    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    this;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
627	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals( " "))  return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.equals( " "))  return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.equals( " "))  return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	48	None	replace
628	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase()!=  null)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase()!=  null)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase()!=  null)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	48	None	replace
629	[BUG]  [BUGGY]  if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  null;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  null;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	48	None	replace
630	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals( " "))  return  null;  if(input!=  null)  {  return  input;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.equals( " "))  return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.equals( " "))  return  null;  if(input!=  null)  {  return  input;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	45	None	replace
631	[BUG]  [BUGGY]  if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  input;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input!=  null)return  null;  if(input!=  null)  {  return  input;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	45	None	replace
632	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  input;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput  ==  null)return  null;  if(input!=  null)  {  return  input;  }	  if(input    ==    null)return    null;    if(input!=    null)    {    return    input;    }    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	45	None	replace
633	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
634	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
635	[BUG]  [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(result  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result  ==  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
636	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(input  ==  null)return  null;  if(input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
637	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
638	[BUG]  [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(result!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(result!=  null)return  null;  if(input.toLowerCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  result;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    result;    }    	non-compiled	[CE]  ')'  expected	17	None	replace
639	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	1	None	replace
640	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  DoubleMetaphoneResult  result  =  new  DoubleMetaphoneResult();  return  result;  }	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	1	None	replace
641	[BUG]  [BUGGY]  String  input  =(String)super.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)super.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)super.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	1	None	replace
642	[BUG]  [BUGGY]  String  input  =(String)this.rawInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  cannot  find  symbol  DEFAULT_QUOTE  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  input  =(String)this.rawInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	String  input  =(String)this.rawInput.toUpperCase(java.util.Locale.ENGLISH);	      String    input    =(String)input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_QUOTE	28	None	replace
643	[BUG]  [BUGGY]  }  else  if(input  ==  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(input  ==  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	}  else  if(input  ==  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
644	[BUG]  [BUGGY]  }  else  if(input!=  null)  {  if(!input.equals( " "))  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(input!=  null)  {  if(!input.equals( " "))  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	}  else  if(input!=  null)  {  if(!input.equals( " "))  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(java.util.Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  	23	None	replace
645	[BUG]  [BUGGY]  }  else  if(input  ==  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(input  ==  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	}  else  if(input  ==  null)  {  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  for(String  input  :  input.toUpperCase(Locale.ENGLISH);  result.addChangeListener(this);  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    for(String    input    :    input.toUpperCase(java.util.Locale.ENGLISH);    result.addChangeListener(this);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
646	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(java.util.Locale.ENGLISH);  return  result;  }  [CE]  cannot  find  symbol  Feature  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(java.util.Locale.ENGLISH);  return  result;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)  {  return  null;  }  else  {  result  =  new  DoubleMetaphoneResult();  result.toUpperCase(java.util.Locale.ENGLISH);  return  result;  }	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(java.util.Locale.ENGLISH);    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  Feature	22	None	replace
647	[BUG]  [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')');  [CE]  ')'  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')');  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')');	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
648	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')');  [CE]  ')'  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')');  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)+  ')');	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
649	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [CE]  ')'  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
650	[BUG]  [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	result.toLowerCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))	  if(input!=    null)    {    return    null;    }    else    {    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult();    result.toUpperCase(String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH)    	non-compiled	[CE]  ')'  expected	25	None	replace
651	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  Feature  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput  ==  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  Feature	9	None	replace
652	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  cannot  find  symbol  Feature  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(cleanInput!=  null)  {  String  input  =  getInput().toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	      String    input    =    getInput().toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  cannot  find  symbol  Feature	9	None	replace
653	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH));	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
654	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH);	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
655	[BUG]  [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  ')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH  [BUGGY]    return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	')'  expected  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(java.util.Locale.ENGLISH	      if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
656	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
657	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
658	[BUG]  [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
659	[BUG]  [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input  [CE]  ')'  expected  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input!=  null)return  null;  if(input.toUpperCase(java.util.Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))  {  return  input	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
660	[BUG]  [BUGGY]  if(input  ==  null)return  null;  if(input!=  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [CE]  ')'  expected  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(input  ==  null)return  null;  if(input!=  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }  [BUGGY]    }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.7071067811865475	893	893	2	replace	if(input  ==  null)return  null;  if(input!=  null  ||  input.toUpperCase(Locale.ENGLISH)!=  String.valueOf(input.toUpperCase(Locale.ENGLISH))  {  return  input;  }	  if(input    ==    null)return    null;    if(input.toUpperCase(java.util.Locale.ENGLISH)!=    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH))    {    return    input;    }    	non-compiled	[CE]  ')'  expected	19	None	replace
