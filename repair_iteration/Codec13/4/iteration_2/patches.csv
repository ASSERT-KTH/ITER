bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
2	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
3	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
4	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  null;  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
5	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  input.trim();  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
6	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
7	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	626	None	replace
8	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	626	None	replace
9	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  new  DoubleMetaphoneResult().trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  new  DoubleMetaphoneResult().trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  new  DoubleMetaphoneResult().trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	626	None	replace
10	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	626	None	replace
11	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	626	None	replace
12	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	626	None	replace
13	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
14	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
15	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
16	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
17	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
18	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
19	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
20	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput.addChangeListener(this);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	406	None	replace
21	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
22	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
25	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
26	[BUG]  [BUGGY]  String  input  =  this.input.substring(0,  this.input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.input.substring(0,  this.input.length()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.input.substring(0,  this.input.length()  -  1);	  input    =    this.input.substring(0,    this.input.length());    	non-compiled	[CE]  illegal  start  of  type	362	None	replace
27	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }	  input    =    this.input.substring(0,    this.input.length());    	non-compiled	[CE]  illegal  start  of  type	362	None	replace
28	[BUG]  [BUGGY]  input  =  this.input.substring(0,  this.input.length()  +  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.substring(0,  this.input.length()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.substring(0,  this.input.length()  +  1);	  input    =    this.input.substring(0,    this.input.length());    	non-compiled	[CE]  illegal  start  of  type	362	None	replace
29	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    this.input.substring(0,    this.input.length());    	non-compiled	[CE]  illegal  start  of  type	362	None	replace
30	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  null;  }	  input    =    this.input.substring(0,    this.input.length());    	non-compiled	[CE]  illegal  start  of  type	362	None	replace
31	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  this.input.substring(0,  this.input.length());  }	  input    =    this.input.substring(0,    this.input.length());    	non-compiled	[CE]  illegal  start  of  type	362	None	replace
32	[BUG]  [BUGGY]  return  this.input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  return  this.input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.input.toLowerCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
33	[BUG]  [BUGGY]  return  this.input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  return  this.input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.input.toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
34	[BUG]  [BUGGY]  return  this.input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  return  this.input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.input.toLowerCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
35	[BUG]  [BUGGY]  return  this.input.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  return  this.input.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.input.toUpperCase(java.util.Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(Locale.ENGLISH));	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
37	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
38	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(java.util.Locale.ENGLISH));	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
39	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(Integer.valueOf(input)));  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(Integer.valueOf(input)));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  Integer.toString(Integer.valueOf(input)));	  if(input    ==    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
40	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "[] "));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "[] "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "[] "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
41	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( ".java "));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( ".java "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( ".java "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
42	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "[_] "));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "[_] "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "[_] "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
43	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "[: "));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "[: "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "[: "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
44	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "[metaphone   "));  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "[metaphone   "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "[metaphone   "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
45	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "[n] "));  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "[n] "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "[n] "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
46	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "[n "));  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "[n "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "[n "));	  Parchet.checkState(input.startsWith(   "[   "));    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
47	[BUG]  [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
48	[BUG]  [BUGGY]  if(this.rawInput  ==  null)  {  input  =  String.valueOf(this.rawInput);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.rawInput  ==  null)  {  input  =  String.valueOf(this.rawInput);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.rawInput  ==  null)  {  input  =  String.valueOf(this.rawInput);  }	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
49	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.rawInput);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.rawInput);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(this.rawInput);  }	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
50	[BUG]  [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
51	[BUG]  [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  return  null;  }	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
52	[BUG]  [BUGGY]  String  input  =  this.rawInput.toString();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.rawInput.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.rawInput.toString();	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
53	[BUG]  [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.rawInput!=  null)  {  input  =  String.valueOf(this.rawInput);  }  else  {  throw  new  IllegalStateException( " ");  }	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
54	[BUG]  [BUGGY]  input  =  String.valueOf(this.rawInput,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(this.rawInput,  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(this.rawInput,  java.util.Locale.ENGLISH);	  input    =    String.valueOf(this.rawInput);    	non-compiled	[CE]  illegal  start  of  type	616	None	replace
55	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	573	None	replace
56	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
57	[BUG]  [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
58	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
59	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  dataInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  dataInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  dataInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
60	[BUG]  [BUGGY]  final  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  MutableString  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
61	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toUpperCase());  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toUpperCase());  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toUpperCase());  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
62	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  sourceFile.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  sourceFile.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  sourceFile.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
63	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toUpperCase(Locale.ENGLISH));  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toUpperCase(Locale.ENGLISH));  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toUpperCase(Locale.ENGLISH));  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
64	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  localInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  localInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  localInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	504	None	replace
65	[BUG]  [BUGGY]  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null    ||    input.length()    ==    0)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
66	[BUG]  [BUGGY]  Input  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null    ||    input.length()    ==    0)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
67	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null    ||    input.length()    ==    0)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
68	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null    ||    input.length()    ==    0)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
69	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null    ||    input.length()    ==    0)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
70	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	326	None	replace
71	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	326	None	replace
72	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	326	None	replace
73	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  input  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  input  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  input  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	326	None	replace
74	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	389	None	replace
75	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Boolean.TRUE).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Boolean.TRUE).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Boolean.TRUE).toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	389	None	replace
76	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.trim()),  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.trim()),  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.trim()),  java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	389	None	replace
77	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.trim()));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.trim()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.trim()));	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	389	None	replace
78	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Boolean.TRUE).toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Boolean.TRUE).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Boolean.TRUE).toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	389	None	replace
79	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	389	None	replace
80	[BUG]  [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
81	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
82	[BUG]  [BUGGY]  readInput  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  readInput  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	readInput  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
83	[BUG]  [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
84	[BUG]  [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
85	[BUG]  [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
86	[BUG]  [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
87	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingType(String.valueOf(input));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingType(String.valueOf(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingType(String.valueOf(input));	  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
88	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  null);	  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
89	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingType(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingType(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingType(Locale.ENGLISH);	  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
90	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingType(null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingType(null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingType(null);	  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
91	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  false);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  false);	  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
92	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH,  input);	  aughtExceptionHandler.handleMissingType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
93	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	599	None	replace
94	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	349	None	replace
95	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	349	None	replace
96	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	349	None	replace
97	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  return  new  DoubleMetaphoneResult(input);  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	349	None	replace
98	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
99	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
100	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
101	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
102	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
103	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
104	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
105	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
106	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
107	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
108	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '-')return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '-')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '-')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
109	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
110	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
111	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
112	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT));	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
113	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
114	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT);	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
115	[BUG]  [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
116	[BUG]  [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT));	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
117	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  null;  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  null;	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
118	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  return  null;  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  return  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  return  null;	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
119	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	428	None	replace
120	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
121	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
122	[BUG]  [BUGGY]  final  String  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
123	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
124	[BUG]  [BUGGY]  this.cleanInput  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
125	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(null,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(null,  java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(null,  java.util.Locale.ENGLISH);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    null);    	non-compiled	[CE]  illegal  start  of  type	249	None	replace
126	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(null,  Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(null,  Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(null,  Locale.ENGLISH);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    null);    	non-compiled	[CE]  illegal  start  of  type	249	None	replace
127	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input),  null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(String.valueOf(input),  null);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    null);    	non-compiled	[CE]  illegal  start  of  type	249	None	replace
128	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
129	[BUG]  [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
130	[BUG]  [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
131	[BUG]  [BUGGY]  safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
132	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
133	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME));  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME));	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
134	[BUG]  [BUGGY]  safeThan(null)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null)&&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
135	[BUG]  [BUGGY]  safeThan(null,  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	433	None	replace
136	[BUG]  [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
137	[BUG]  [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(NULL_TYPE);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(NULL_TYPE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	null  =  JsonStringEncoder.getInstance().getNativeType(NULL_TYPE);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
138	[BUG]  [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.OBJECT_TYPE);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
139	[BUG]  [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	null  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
140	[BUG]  [BUGGY]  null  =  JsonStringEncoder.getInstance().encodeAsString(input);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonStringEncoder.getInstance().encodeAsString(input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	null  =  JsonStringEncoder.getInstance().encodeAsString(input);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
141	[BUG]  [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	null  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.NO_TYPE);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
142	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
143	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
144	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
145	[BUG]  [BUGGY]  return  this.input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  return  this.input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
146	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
147	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
148	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
149	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	494	None	replace
150	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(Locale.ENGLISH);	  if(this.input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
151	[BUG]  [BUGGY]  this.input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  input.toUpperCase(Locale.ENGLISH);	  if(this.input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
152	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(this.input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(this.input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(this.input.toUpperCase(Locale.ENGLISH));  }	  if(this.input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
153	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
154	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
155	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
156	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
157	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
158	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
159	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
160	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
161	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase());  CleanInput  <?>  cleanInput  =  cleanInput.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase());    CleanInput    <?>    cleanInput    =    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	404	None	replace
162	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(java.util.Locale.ENGLISH);	  String    input    =(input    ==    null)?    null    :    input.trim().toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	583	None	replace
163	[BUG]  [BUGGY]  String  input  =(input!=  null)?  null  :  input.trim().toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input!=  null)?  null  :  input.trim().toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input!=  null)?  null  :  input.trim().toUpperCase(Locale.ENGLISH);	  String    input    =(input    ==    null)?    null    :    input.trim().toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	583	None	replace
164	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.trim().toLowerCase(Locale.ENGLISH);	  String    input    =(input    ==    null)?    null    :    input.trim().toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	583	None	replace
165	[BUG]  [BUGGY]  char  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(Locale.ENGLISH);	  String    input    =(input    ==    null)?    null    :    input.trim().toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	583	None	replace
166	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(JavaLocale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(JavaLocale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(JavaLocale.ENGLISH);	  String    input    =(input    ==    null)?    null    :    input.trim().toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	583	None	replace
167	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(Boolean.TRUE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.trim().toUpperCase(Boolean.TRUE);	  String    input    =(input    ==    null)?    null    :    input.trim().toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	583	None	replace
168	[BUG]  [BUGGY]  input  =  String.valueOf(input).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input).toUpperCase(java.util.Locale.ENGLISH);	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
169	[BUG]  [BUGGY]  input  =  String.valueOf(input).toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input).toLowerCase(java.util.Locale.ENGLISH);	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
170	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input).toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input).toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input).toLowerCase();  }	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
171	[BUG]  [BUGGY]  input  =  String.valueOf(input).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input).toLowerCase(Locale.ENGLISH);	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
172	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input).toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input).toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input).toLowerCase();  }	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
173	[BUG]  [BUGGY]  input  =  String.valueOf(this.input).toLowerCase();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(this.input).toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(this.input).toLowerCase();	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
174	[BUG]  [BUGGY]  input  =  String.valueOf(this.null).toLowerCase();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(this.null).toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(this.null).toLowerCase();	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
175	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input).toLowerCase();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input).toLowerCase();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input).toLowerCase();  }  else  {  return  null;  }	  input    =    String.valueOf(input).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	468	None	replace
176	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
177	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
178	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
179	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
180	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
181	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase(Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
182	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH));  }	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
183	[BUG]  [BUGGY]  return  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  return  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    }    	non-compiled	[CE]  illegal  start  of  type	515	None	replace
184	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(Input.toUpperCase(java.util.Locale.ENGLISH));	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
185	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toLowerCase());  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toLowerCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
186	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase()  +  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase()  +  1);	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
187	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  Locale.ENGLISH);	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
188	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  1);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  1);	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
189	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  4);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  4);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  4);	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
190	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  true);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  true);	  Input    input    =    new    DoubleMetaphoneResult(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
191	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
192	[BUG]  [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
193	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input  ==  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input  ==  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
194	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toLowerCase(Locale.ENGLISH));  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toLowerCase(Locale.ENGLISH));  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  new  MutableString(input.toLowerCase(Locale.ENGLISH));  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
195	[BUG]  [BUGGY]  final  MutableString  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  MutableString  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  MutableString  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
196	[BUG]  [BUGGY]  if(!cleanInput)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
197	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  dataInput.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  dataInput.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  dataInput.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
198	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  sourceFile.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  sourceFile.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  sourceFile.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  input  =  input.trim();  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
199	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	507	None	replace
200	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()!=  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	187	None	replace
201	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
202	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
203	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
204	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
205	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
206	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
207	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	454	None	replace
208	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
209	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
210	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
211	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
212	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
213	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
214	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
215	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  >>  illegal  start  of  type  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  >>  illegal  start  of  type  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  >>  illegal  start  of  type	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
216	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()));	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
217	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()),  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()),  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()),  java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
218	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "mismatch  for  input  ' "  +  input.toLowerCase()  + "': "  +  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "mismatch  for  input  ' "  +  input.toLowerCase()  + "': "  +  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "mismatch  for  input  ' "  +  input.toLowerCase()  + "': "  +  input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
219	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()),  null);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()),  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(String.valueOf(input.toLowerCase()),  null);	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
220	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "mismatch  for  input: "  +  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "mismatch  for  input: "  +  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "mismatch  for  input: "  +  input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
221	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
222	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "mismatch  for  input  ' "  +  input.toLowerCase()  + "' ");  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "mismatch  for  input  ' "  +  input.toLowerCase()  + "' ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "mismatch  for  input  ' "  +  input.toLowerCase()  + "' ");	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	569	None	replace
223	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(Arrays.asList(input));	  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
224	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input),  null);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(Arrays.asList(input),  null);	  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
225	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input),  false);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input),  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(Arrays.asList(input),  false);	  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
226	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input),  null);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input),  null);	  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
227	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input),  false);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input),  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input),  false);	  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
228	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input),  input);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(Arrays.asList(input),  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(Arrays.asList(input),  input);	  aughtExceptionHandler.handleMissingName(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
229	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
230	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
231	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
232	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
233	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
234	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
235	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
236	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.getClass().getName()  + "' ");  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.getClass().getName()  + "' ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.getClass().getName()  + "' ");	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
237	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	273	None	replace
238	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	273	None	replace
239	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	273	None	replace
240	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	273	None	replace
241	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	273	None	replace
242	[BUG]  [BUGGY]  input  =  String.valueOf(input.length()).toLowerCase();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.length()).toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.length()).toLowerCase();	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
243	[BUG]  [BUGGY]  input  =  String.valueOf(input.toUpperCase()).toLowerCase();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toUpperCase()).toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toUpperCase()).toLowerCase();	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
244	[BUG]  [BUGGY]  input  =  String.valueOf(input.trim()).toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.trim()).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.trim()).toLowerCase(java.util.Locale.ENGLISH);	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
245	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  input  =  String.valueOf(input.trim()).toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  input  =  String.valueOf(input.trim()).toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  input  =  String.valueOf(input.trim()).toLowerCase();  }	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
246	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.trim()).toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.trim()).toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.trim()).toLowerCase();  }	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
247	[BUG]  [BUGGY]  input  =  String.valueOf(input.substring(1)).toLowerCase();  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.substring(1)).toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.substring(1)).toLowerCase();	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
248	[BUG]  [BUGGY]  input  =  String.valueOf(input.trim()).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.trim()).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.trim()).toUpperCase(java.util.Locale.ENGLISH);	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
249	[BUG]  [BUGGY]  input  =  String.valueOf(input.toString()).toLowerCase();  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toString()).toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toString()).toLowerCase();	  input    =    String.valueOf(input.trim()).toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
250	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
251	[BUG]  [BUGGY]  aughtException.withLocale(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocale(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocale(Locale.ENGLISH);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
252	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH,  input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
253	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  null));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  null));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH,  null));	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
254	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  null);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH,  null);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
255	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  input);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
256	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  input));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH,  input));	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
257	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Failed  to  clean  input. ");  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Failed  to  clean  input. ");  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Failed  to  clean  input. ");	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
258	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
259	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
260	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
261	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
262	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
263	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
264	[BUG]  [BUGGY]  if(input.length()  ==  1)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  1)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  1)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
265	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH)  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH)  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH)	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
266	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  cleanInput.setString(input.toUpperCase(Locale.ENGLISH	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	405	None	replace
267	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	532	None	replace
268	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	532	None	replace
269	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  return  null;  }	  if(this.cleanInput!=    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	532	None	replace
270	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }	  if(this.cleanInput!=    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	532	None	replace
271	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
272	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
273	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
274	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
275	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
276	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
277	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
278	[BUG]  [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
279	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
280	[BUG]  [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
281	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
282	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
283	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
284	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
285	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  input  =  this.input.substring(0,  this.input.length());  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  input  =  this.input.substring(0,  this.input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  input  =  this.input.substring(0,  this.input.length());  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
286	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  String  input  =  this.input.substring(0,  this.input.length());  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  String  input  =  this.input.substring(0,  this.input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  String  input  =  this.input.substring(0,  this.input.length());  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
287	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  System.arraycopy(this.input,  0,  input,  0,  this.input.length());  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  System.arraycopy(this.input,  0,  input,  0,  this.input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  System.arraycopy(this.input,  0,  input,  0,  this.input.length());  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
288	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  null;  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
289	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
290	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  new  DoubleMetaphone(Integer.toString(this.input.charAt(0)));  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  new  DoubleMetaphone(Integer.toString(this.input.charAt(0)));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  return  new  DoubleMetaphone(Integer.toString(this.input.charAt(0)));  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
291	[BUG]  [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  System.arraycopy(this.input,  0,  input,  0,  this.input.length());  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  System.arraycopy(this.input,  0,  input,  0,  this.input.length());  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input.length()  ==  0)  {  input  =  this.input.substring(0,  this.input.length());  }  else  {  System.arraycopy(this.input,  0,  input,  0,  this.input.length());  return  null;  }	  input    =    this.input.substring(0,    this.input.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
292	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString(  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString(  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString(	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.getClass().getName()    +   "    with    value   "+Integer.toHexString(Integer.toHexString(Integer.toHexString    	non-compiled	[CE]  illegal  start  of  type	399	None	replace
293	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.getClass().getName()    +   "    with    value   "+Integer.toHexString(Integer.toHexString(Integer.toHexString    	non-compiled	[CE]  illegal  start  of  type	399	None	replace
294	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString(Integer.toHexStr  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString(Integer.toHexStr  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + "  with  value "+Integer.toHexString(Integer.toHexString(Integer.toHexStr	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.getClass().getName()    +   "    with    value   "+Integer.toHexString(Integer.toHexString(Integer.toHexString    	non-compiled	[CE]  illegal  start  of  type	399	None	replace
295	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + ",  with  value "+Integer.toHexString(Integer.toHexString(  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + ",  with  value "+Integer.toHexString(Integer.toHexString(  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.getClass().getName()  + ",  with  value "+Integer.toHexString(Integer.toHexString(	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.getClass().getName()    +   "    with    value   "+Integer.toHexString(Integer.toHexString(Integer.toHexString    	non-compiled	[CE]  illegal  start  of  type	399	None	replace
296	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
297	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
298	[BUG]  [BUGGY]  return  super.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  super.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  super.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
299	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
300	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  return  super.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  return  super.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  return  super.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
301	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(String.valueOf(input.toLowerCase()));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(String.valueOf(input.toLowerCase()));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(String.valueOf(input.toLowerCase()));  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
302	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(String.valueOf(input.length()  -  1));  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(String.valueOf(input.length()  -  1));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  super.toUpperCase(String.valueOf(input.length()  -  1));  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    super.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	385	None	replace
303	[BUG]  [BUGGY]  Parchet.checkState(input.trim().length()  ==  0);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.trim().length()  ==  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.trim().length()  ==  0);	  if(input    ==    null)    {    if(input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
304	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.trim());  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.trim());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.trim());	  if(input    ==    null)    {    if(input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
305	[BUG]  [BUGGY]  Parchet.checkState(input.trim().length()!=  0);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.trim().length()!=  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.trim().length()!=  0);	  if(input    ==    null)    {    if(input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
306	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input),  null);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input),  null);	  if(input    ==    null)    {    if(input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
307	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.valueOf(input)));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.valueOf(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.valueOf(input)));	  if(input!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	600	None	replace
308	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toString(Integer.valueOf(input)));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toString(Integer.valueOf(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toString(Integer.valueOf(input)));	  if(input!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	600	None	replace
309	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.toHexString(input)));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.toHexString(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.toHexString(input)));	  if(input!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	600	None	replace
310	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.class));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.class));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.class));	  if(input!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	600	None	replace
311	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.toHexString(value)));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.toHexString(value)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  Integer.toHexString(Integer.toHexString(value)));	  if(input!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	600	None	replace
312	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(String.valueOf(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(String.valueOf(input));	  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input));    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
313	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input),  null);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input),  null);	  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input));    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
314	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input),  false);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input),  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input),  false);	  aughtExceptionHandler.handleMissingValue(java.util.String.valueOf(input));    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
315	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase())?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase())?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase())?  null  :  input.trim();	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
316	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.toUpperCase();	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
317	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.toUpperCase(Locale.ENGLISH))?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.toUpperCase(Locale.ENGLISH))?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(Input.toUpperCase(Locale.ENGLISH))?  null  :  input.trim();	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
318	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.getValue();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.getValue();	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
319	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.substring(1);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.substring(1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase())?  null  :  input.substring(1);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
320	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.toString())?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.toString())?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(Input.toString())?  null  :  input.trim();	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
321	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.getValue())?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.getValue())?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.getValue())?  null  :  input.trim();	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase())?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
322	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
323	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
324	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
325	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  4);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  4);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  4);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    0);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
326	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  3);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  3);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  3);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    0);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
327	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  10);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  10);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  10);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    0);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
328	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  128);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  128);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  128);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    0);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
329	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  16);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  16);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  16);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    0);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
330	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  32);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  32);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  32);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    0);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
331	[BUG]  [BUGGY]  Input  input  =  String.valueOf(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  String.valueOf(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  String.valueOf(input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
332	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.toLowerCase()));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.toLowerCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.toLowerCase()));	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
333	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.toLowerCase()),  null);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.toLowerCase()),  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input.toLowerCase()),  null);	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
334	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(output.toLowerCase()));  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(output.toLowerCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  String.valueOf(output.toLowerCase()));	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
335	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
336	[BUG]  [BUGGY]  input  =  String.valueOf(input.toCharArray()  +  1);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toCharArray()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toCharArray()  +  1);	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
337	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toCharArray());  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toCharArray());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toCharArray());  }	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
338	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
339	[BUG]  [BUGGY]  input  =  String.valueOf(input.toCharArray(),  1);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toCharArray(),  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toCharArray(),  1);	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
340	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
341	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toCharArray());  }  else  {  return  null;  }	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
342	[BUG]  [BUGGY]  String  input  =  input.toCharArray();  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toCharArray();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toCharArray();	  input    =    String.valueOf(input.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
343	[BUG]  [BUGGY]  return  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
344	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
345	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
346	[BUG]  [BUGGY]  if(!input.isEmpty())  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!input.isEmpty())  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!input.isEmpty())  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
347	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }  else  {  return  input.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
348	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
349	[BUG]  [BUGGY]  return  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  return  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toLowerCase(java.util.Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
350	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  null;  }  else  {  return  input.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
351	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  null;  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	485	None	replace
352	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
353	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
354	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
355	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  input;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
356	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  input;  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  input;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  input;	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
357	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  input;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
358	[BUG]  [BUGGY]  if(input  >=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  >=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  >=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	465	None	replace
359	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.trim()  + "n ";  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.trim()  + "n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.trim()  + "n ";	  String    input    =(String)this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	572	None	replace
360	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase();	  String    input    =(String)this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	572	None	replace
361	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.substring(1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.substring(1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.substring(1);	  String    input    =(String)this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	572	None	replace
362	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.trim()  + ";n ";  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.trim()  + ";n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.trim()  + ";n ";	  String    input    =(String)this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	572	None	replace
363	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
364	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
365	[BUG]  [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
366	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
367	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
368	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
369	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.trim()  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.trim()  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.trim()	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
370	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  input.toUpperCase	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH,    input.toUpperCase    	non-compiled	[CE]  illegal  start  of  type	409	None	replace
371	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.getKey());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.getKey());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.getKey());	  String    input    =(this.cleanInput!=    null?    null    :    this.cleanInput.getValue());    	non-compiled	[CE]  illegal  start  of  type	421	None	replace
372	[BUG]  [BUGGY]  String  input  =(this.cleanInput!=  null?  null  :  this.cleanInput.getKey());  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput!=  null?  null  :  this.cleanInput.getKey());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput!=  null?  null  :  this.cleanInput.getKey());	  String    input    =(this.cleanInput!=    null?    null    :    this.cleanInput.getValue());    	non-compiled	[CE]  illegal  start  of  type	421	None	replace
373	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.toString());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.toString());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.toString());	  String    input    =(this.cleanInput!=    null?    null    :    this.cleanInput.getValue());    	non-compiled	[CE]  illegal  start  of  type	421	None	replace
374	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	186	None	replace
375	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
376	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
377	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
378	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
379	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
380	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
381	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
382	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }	  input    =    String.valueOf(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
383	[BUG]  [BUGGY]  input  =  String.valueOf(input.toUpperCase()  +  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toUpperCase()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toUpperCase()  +  1);	  input    =    String.valueOf(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
384	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
385	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
386	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase());  }  else  {  return  null;  }	  input    =    String.valueOf(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
387	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  input    =(input!=    null)?    null    :    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	276	None	replace
388	[BUG]  [BUGGY]  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  input    =(input!=    null)?    null    :    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	276	None	replace
389	[BUG]  [BUGGY]  this.cleanInput  =(input  ==  null)?  null  :  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =(input  ==  null)?  null  :  input.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =(input  ==  null)?  null  :  input.toUpperCase();	  input    =(input!=    null)?    null    :    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	276	None	replace
390	[BUG]  [BUGGY]  if(input!=  null)return  null;  input  =  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)return  null;  input  =  input.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)return  null;  input  =  input.toUpperCase();	  input    =(input!=    null)?    null    :    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	276	None	replace
391	[BUG]  [BUGGY]  if(input!=  null)return  null;  input  =  input.toUpperCase();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)return  null;  input  =  input.toUpperCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)return  null;  input  =  input.toUpperCase();  }	  input    =(input!=    null)?    null    :    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	276	None	replace
392	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
393	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
394	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
395	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
396	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
397	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
398	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
399	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  NULL)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  NULL)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    NULL)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	339	None	replace
400	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	424	None	replace
401	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(null);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	424	None	replace
402	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName();	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	424	None	replace
403	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingReturn(null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingReturn(null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingReturn(null);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	424	None	replace
404	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
405	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
406	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
407	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
408	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
409	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
410	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
411	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
412	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult. ");  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult. ");  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult. ");	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	337	None	replace
413	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  clean  input: "  +  input);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Unable  to  clean  input: "  +  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Unable  to  clean  input: "  +  input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	337	None	replace
414	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	594	None	replace
415	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	594	None	replace
416	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	594	None	replace
417	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	594	None	replace
418	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	594	None	replace
419	[BUG]  [BUGGY]  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	594	None	replace
420	[BUG]  [BUGGY]  Input  input  =  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  input.toLowerCase();	  if(input!=    null)    {    input    =    input.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
421	[BUG]  [BUGGY]  Input  input  =  this.input.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toLowerCase();	  if(input!=    null)    {    input    =    input.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
422	[BUG]  [BUGGY]  Input  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
423	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphone(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphone(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphone(input.toLowerCase());	  if(input!=    null)    {    input    =    input.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
424	[BUG]  [BUGGY]  nisipToLowerCase(input);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nisipToLowerCase(input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLowerCase(input);	  if(input!=    null)    {    input    =    input.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
425	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
426	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
427	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
428	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
429	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
430	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input.trim();	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
431	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME);	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
432	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
433	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME));	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
434	[BUG]  [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
435	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  return  null;  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  return  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  return  null;	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
436	[BUG]  [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME));  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME));	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
437	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
438	[BUG]  [BUGGY]  safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  null;  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_NAME))  {  input  =  null;	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
439	[BUG]  [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME);  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NAME);	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NAME))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	430	None	replace
440	[BUG]  [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
441	[BUG]  [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
442	[BUG]  [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
443	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
444	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
445	[BUG]  [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
446	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
447	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
448	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
449	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
450	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
451	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
452	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
453	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
454	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
455	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  input.toUpperCase());  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  input.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  input.toUpperCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
456	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toLowerCase(),  input.toLowerCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
457	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  output.toUpperCase());  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  output.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  output.toUpperCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
458	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  String.valueOf(input.toUpperCase()));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  String.valueOf(input.toUpperCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  String.valueOf(input.toUpperCase()));	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
459	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  input.toUpperCase()  +  1);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  input.toUpperCase()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  input.toUpperCase()  +  1);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
460	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  input.toLowerCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
461	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toString(),  input.toUpperCase());  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toString(),  input.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toString(),  input.toUpperCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
462	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  cache.toUpperCase());  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  cache.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  cache.toUpperCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(),    input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
463	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
464	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
465	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
466	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
467	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
468	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
469	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	379	None	replace
470	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
471	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
472	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
473	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
474	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
475	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
476	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
477	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(locale.ENGLISH)!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(locale.ENGLISH)!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(locale.ENGLISH)!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	587	None	replace
478	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
479	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
480	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
481	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
482	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
483	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
484	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
485	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
486	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
487	[BUG]  [BUGGY]  Input  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
488	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
489	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
490	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(input);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingClass(input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingClass(input);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
491	[BUG]  [BUGGY]  this.cleanInput  =(input  ==  null)?  null  :  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =(input  ==  null)?  null  :  input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =(input  ==  null)?  null  :  input.toLowerCase();	  input    =(input!=    null)?    null    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
492	[BUG]  [BUGGY]  input  =(input  >=  null)?  null  :  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  >=  null)?  null  :  input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  >=  null)?  null  :  input.toLowerCase();	  input    =(input!=    null)?    null    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
493	[BUG]  [BUGGY]  if(input!=  null)return  null;  input  =  input.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)return  null;  input  =  input.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)return  null;  input  =  input.toLowerCase();  }	  input    =(input!=    null)?    null    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
494	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getText();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getText();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getText();	  String    input    =(String)this.cleanInput.getKey();    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
495	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getKey()  + "n ";  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getKey()  + "n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getKey()  + "n ";	  String    input    =(String)this.cleanInput.getKey();    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
496	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.next();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.next();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.next();	  String    input    =(String)this.cleanInput.getKey();    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
497	[BUG]  [BUGGY]  if(aughtException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
498	[BUG]  [BUGGY]  if(aughtException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
499	[BUG]  [BUGGY]  if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
500	[BUG]  [BUGGY]  if(aughtException.length()  ==  0)  {  aughtException.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.length()  ==  0)  {  aughtException.printStackTrace();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.length()  ==  0)  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
501	[BUG]  [BUGGY]  if(aughtException.equals( "null "))  {  aughtException.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.equals( "null "))  {  aughtException.printStackTrace();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.equals( "null "))  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
502	[BUG]  [BUGGY]  if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
503	[BUG]  [BUGGY]  if(aughtException.equals( "null "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.equals( "null "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.equals( "null "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
504	[BUG]  [BUGGY]  if(aughtException.length()  ==  0)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.length()  ==  0)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.length()  ==  0)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
505	[BUG]  [BUGGY]  if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(aughtException.equals( " "))  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
506	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
507	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
508	[BUG]  [BUGGY]  final  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
509	[BUG]  [BUGGY]  while(cleanInput!=  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(cleanInput!=  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(cleanInput!=  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
510	[BUG]  [BUGGY]  while(cleanInput!=  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(cleanInput!=  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(cleanInput!=  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
511	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  new  String(input.trim());  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  new  String(input.trim());  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  new  String(input.trim());  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
512	[BUG]  [BUGGY]  while(cleanInput!=  null  &&  input.length()  >  0)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  while(cleanInput!=  null  &&  input.length()  >  0)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(cleanInput!=  null  &&  input.length()  >  0)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
513	[BUG]  [BUGGY]  while(cleanInput!=  null)  {  if(input  ==  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  while(cleanInput!=  null)  {  if(input  ==  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(cleanInput!=  null)  {  if(input  ==  null)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	245	None	replace
514	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	521	None	replace
515	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	521	None	replace
516	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	521	None	replace
517	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	521	None	replace
518	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	521	None	replace
519	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  output;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  output;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  output;  }	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	352	None	replace
520	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  output;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  output;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  output;  }	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	352	None	replace
521	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	352	None	replace
522	[BUG]  [BUGGY]  safeMultiply(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeMultiply(input.toLowerCase());	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	570	None	replace
523	[BUG]  [BUGGY]  safeMultiply(input.toLowerCase(),  false));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(input.toLowerCase(),  false));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeMultiply(input.toLowerCase(),  false));	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	570	None	replace
524	[BUG]  [BUGGY]  safeMultiply(input.toLowerCase()));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(input.toLowerCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeMultiply(input.toLowerCase()));	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	570	None	replace
525	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(input,  null);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(input,  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(input,  null);	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	570	None	replace
526	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingException( " ");	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	570	None	replace
527	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  null);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  null);	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	570	None	replace
528	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
529	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
530	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
531	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
532	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "+input.toLowerCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "+input.toLowerCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "+input.toLowerCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
533	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toLowerCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
534	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type: "  +  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type: "  +  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type: "  +  input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	341	None	replace
535	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingReturn( "Invalid  start  of  type: "  +  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingReturn( "Invalid  start  of  type: "  +  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingReturn( "Invalid  start  of  type: "  +  input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	341	None	replace
536	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.toLowerCase()  + "' ");  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.toLowerCase()  + "' ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.toLowerCase()  + "' ");	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	341	None	replace
537	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type: "  +  input.toUpperCase());  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type: "  +  input.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type: "  +  input.toUpperCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	341	None	replace
538	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  start  of  type  ' "  +  input.toLowerCase());	  if(input!=    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	341	None	replace
539	[BUG]  [BUGGY]  char  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	243	None	replace
540	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getKey();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getKey();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getKey();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
541	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.toString();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.toString();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.toString();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
542	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.trim();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.trim();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
543	[BUG]  [BUGGY]  String  input  =(this.cleanInput!=  null)?  null  :  this.cleanInput.getKey();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput!=  null)?  null  :  this.cleanInput.getKey();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput!=  null)?  null  :  this.cleanInput.getKey();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
544	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getText();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getText();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getText();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
545	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getName();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getName();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getName();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
546	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getSimpleName();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getSimpleName();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null)?  null  :  this.cleanInput.getSimpleName();	  String    input    =(this.cleanInput    ==    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	418	None	replace
547	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
548	[BUG]  [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
549	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
550	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
551	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  nu  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  nu  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  nu	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
552	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
553	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	363	None	replace
554	[BUG]  [BUGGY]  String  input  =(this.cleanInput!=  null)?  null  :  this.cleanInput.toString();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput!=  null)?  null  :  this.cleanInput.toString();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput!=  null)?  null  :  this.cleanInput.toString();	  String    input    =(this.cleanInput!=    null)?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	419	None	replace
555	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	518	None	replace
556	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
557	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
558	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
559	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
560	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
561	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
562	[BUG]  [BUGGY]  return  input.toLowerCase(Locale.ENGLISH)+  cleanInput.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  return  input.toLowerCase(Locale.ENGLISH)+  cleanInput.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toLowerCase(Locale.ENGLISH)+  cleanInput.toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
563	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
564	[BUG]  [BUGGY]  if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
565	[BUG]  [BUGGY]  if(input  ==  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
566	[BUG]  [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
567	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  }  else  {  return  null;  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
568	[BUG]  [BUGGY]  return  this.cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  return  this.cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.cleanInput.toLowerCase(Locale.ENGLISH)+  input.toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
569	[BUG]  [BUGGY]  return  input.toUpperCase(Locale.ENGLISH)+  cleanInput.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  return  input.toUpperCase(Locale.ENGLISH)+  cleanInput.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toUpperCase(Locale.ENGLISH)+  cleanInput.toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
570	[BUG]  [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	490	None	replace
571	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	455	None	replace
572	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	455	None	replace
573	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	455	None	replace
574	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	455	None	replace
575	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	455	None	replace
576	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	455	None	replace
577	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
578	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
579	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
580	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
581	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  locale.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  locale.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  locale.toLowerCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
582	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
583	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
584	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
585	[BUG]  [BUGGY]  String  input  =  new  String(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  new  String(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  new  String(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
586	[BUG]  [BUGGY]  final  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
587	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
588	[BUG]  [BUGGY]  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
589	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	345	None	replace
590	[BUG]  [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	530	None	replace
591	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	530	None	replace
592	[BUG]  [BUGGY]  if(input!=  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	530	None	replace
593	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	530	None	replace
594	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toLowerCase();	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
595	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
596	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
597	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
598	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
599	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
600	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
601	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
602	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	365	None	replace
603	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(2);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(2);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(2);	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
604	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  input.length()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(0,  input.length()  -  1);	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
605	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(0,  input.length());	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
606	[BUG]  [BUGGY]  input  =(input!=  null)?  null  :  input.substring(1);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =(input!=  null)?  null  :  input.substring(1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input!=  null)?  null  :  input.substring(1);	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
607	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  1);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(0,  1);	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
608	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(3);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(3);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(3);	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
609	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(4);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(4);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(4);	  input    =(input    ==    null)?    null    :    input.substring(1);    	non-compiled	[CE]  illegal  start  of  type	279	None	replace
610	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
611	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
612	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
613	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
614	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
615	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
616	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  if(input!=  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
617	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
618	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
619	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
620	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
621	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
622	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
623	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	601	None	replace
624	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	601	None	replace
625	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	601	None	replace
626	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	601	None	replace
627	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	601	None	replace
628	[BUG]  [BUGGY]  Input  input  =  this.input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toLowerCase(Locale.ENGLISH);	  if(this.input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
629	[BUG]  [BUGGY]  this.input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  input.toLowerCase(Locale.ENGLISH);	  if(this.input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
630	[BUG]  [BUGGY]  input  =  this.input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.toLowerCase(Locale.ENGLISH);	  if(this.input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
631	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.jdk.internal.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.jdk.internal.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.jdk.internal.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	388	None	replace
632	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.jdk.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.jdk.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.jdk.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	388	None	replace
633	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	388	None	replace
634	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.jdk.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.jdk.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.jdk.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	388	None	replace
635	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	388	None	replace
636	[BUG]  [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	391	None	replace
637	[BUG]  [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withMessage(DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	391	None	replace
638	[BUG]  [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH),  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH),  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH),  java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	391	None	replace
639	[BUG]  [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withMessage(DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	391	None	replace
640	[BUG]  [BUGGY]  aughtException.withLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	391	None	replace
641	[BUG]  [BUGGY]  nullPointerException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nullPointerException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nullPointerException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
642	[BUG]  [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotations.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
643	[BUG]  [BUGGY]  aughtException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
644	[BUG]  [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
645	[BUG]  [BUGGY]  annotationException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  annotationException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotationException.class.isAssignableFrom(input))  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
646	[BUG]  [BUGGY]  AnnotationException.class.getSimpleName())  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  AnnotationException.class.getSimpleName())  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	AnnotationException.class.getSimpleName())  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	238	None	replace
647	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
648	[BUG]  [BUGGY]  return  input.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  return  input.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
649	[BUG]  [BUGGY]  if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
650	[BUG]  [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
651	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
652	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
653	[BUG]  [BUGGY]  if(input.length()  ==  1)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  1)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  1)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
654	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  else  {  return  null;  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
655	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  null;  }  else  {  return  cleanInput.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	488	None	replace
656	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
657	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
658	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
659	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
660	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
661	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
662	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
663	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
664	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
665	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
666	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
667	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
668	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
669	[BUG]  [BUGGY]  nisipisEmpty(input.length())  {  input  =  String.valueOf(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty(input.length())  {  input  =  String.valueOf(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty(input.length())  {  input  =  String.valueOf(input.toLowerCase());	  if(input.length()    ==    0)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
670	[BUG]  [BUGGY]  nisipisEmpty(input.length())  {  input  =  String.valueOf(input.toLowerCase());  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty(input.length())  {  input  =  String.valueOf(input.toLowerCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty(input.length())  {  input  =  String.valueOf(input.toLowerCase());  }	  if(input.length()    ==    0)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
671	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input.toLowerCase());	  if(input.length()    ==    0)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
672	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingReturn(null,  input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingReturn(null,  input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingReturn(null,  input.toLowerCase());	  if(input.length()    ==    0)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
673	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	522	None	replace
674	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	522	None	replace
675	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	522	None	replace
676	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	522	None	replace
677	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	522	None	replace
678	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	387	None	replace
679	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	387	None	replace
680	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	387	None	replace
681	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	387	None	replace
682	[BUG]  [BUGGY]  String  input  =(input!=  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input!=  null)?  null  :  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input!=  null)?  null  :  input.trim();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
683	[BUG]  [BUGGY]  char  input  =(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input  ==  null)?  null  :  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input  ==  null)?  null  :  input.trim();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
684	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.getValue();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.getValue();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
685	[BUG]  [BUGGY]  final  String  input  =(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(input  ==  null)?  null  :  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(input  ==  null)?  null  :  input.trim();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
686	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toUpperCase();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.toUpperCase();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
687	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toString();  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toString();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.toString();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
688	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim()  + "n ";  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.trim()  + "n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.trim()  + "n ";	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
689	[BUG]  [BUGGY]  String  input  =(input  >=  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  >=  null)?  null  :  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  >=  null)?  null  :  input.trim();	  String    input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
690	[BUG]  [BUGGY]  return  super.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return  super.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  super.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    super.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	423	None	replace
691	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMalformedException( " ");	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    super.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	423	None	replace
692	[BUG]  [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotations.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	237	None	replace
693	[BUG]  [BUGGY]  nullPointerException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nullPointerException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nullPointerException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	237	None	replace
694	[BUG]  [BUGGY]  aughtException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	237	None	replace
695	[BUG]  [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ConstructorException.class.isAssignableFrom(input))  {  if(input!=  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	237	None	replace
696	[BUG]  [BUGGY]  AnnotationException.class.isAssignableFrom(input)||  input!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  AnnotationException.class.isAssignableFrom(input)||  input!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	AnnotationException.class.isAssignableFrom(input)||  input!=  null)  {  if(input  ==  null)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	237	None	replace
697	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult();	  if(input!=    null)    {    input    =    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	190	None	replace
698	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  new  DoubleMetaphoneResult();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    input    =    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	190	None	replace
699	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  new  DoubleMetaphoneResult();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    input    =    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	190	None	replace
700	[BUG]  [BUGGY]  readInput  =  new  DoubleMetaphoneResult();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  readInput  =  new  DoubleMetaphoneResult();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	readInput  =  new  DoubleMetaphoneResult();	  if(input!=    null)    {    input    =    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	190	None	replace
701	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
702	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
703	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
704	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
705	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.trim());  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.trim());  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  String.valueOf(input.trim());  }  else  {  cleanInput();  return  null;  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
706	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
707	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
708	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
709	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
710	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
711	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
712	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
713	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
714	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
715	[BUG]  [BUGGY]  input  =(input!=  null)?  null  :  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  input  =(input!=  null)?  null  :  input.substring(0,  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input!=  null)?  null  :  input.substring(0,  input.length());	  input    =(input!=    null)?    null    :    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	555	None	replace
716	[BUG]  [BUGGY]  input  =(input  >=  null)?  null  :  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  >=  null)?  null  :  input.substring(0,  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  >=  null)?  null  :  input.substring(0,  input.length());	  input    =(input!=    null)?    null    :    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	555	None	replace
717	[BUG]  [BUGGY]  input  =(input  >>  null)?  null  :  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  >>  null)?  null  :  input.substring(0,  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  >>  null)?  null  :  input.substring(0,  input.length());	  input    =(input!=    null)?    null    :    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	555	None	replace
718	[BUG]  [BUGGY]  if(input!=  null)?  null  :  input.substring(0,  input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)?  null  :  input.substring(0,  input.length()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)?  null  :  input.substring(0,  input.length()  -  1);	  input    =(input!=    null)?    null    :    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	555	None	replace
719	[BUG]  [BUGGY]  input  =(input  [BUGGY]  null)?  null  :  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  [BUGGY]  null)?  null  :  input.substring(0,  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  [BUGGY]  null)?  null  :  input.substring(0,  input.length());	  input    =(input!=    null)?    null    :    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	555	None	replace
720	[BUG]  [BUGGY]  input  =(input  [Delete]  null)?  null  :  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  [Delete]  null)?  null  :  input.substring(0,  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  [Delete]  null)?  null  :  input.substring(0,  input.length());	  input    =(input!=    null)?    null    :    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	555	None	replace
721	[BUG]  [BUGGY]  char  input  =(char)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(char)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(char)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
722	[BUG]  [BUGGY]  char  input  =  this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
723	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  0);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  0);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
724	[BUG]  [BUGGY]  char  input  =(int)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(int)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(int)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
725	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  1);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
726	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  true);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
727	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  2);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  2);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH,  2);	  String    input    =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
728	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	472	None	replace
729	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	472	None	replace
730	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	472	None	replace
731	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	472	None	replace
732	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	472	None	replace
733	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	472	None	replace
734	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH));  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH));  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase(java.util.Locale.ENGLISH));  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	499	None	replace
735	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	499	None	replace
736	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	499	None	replace
737	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	499	None	replace
738	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	499	None	replace
739	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	499	None	replace
740	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
741	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }	  input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
742	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }	  input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
743	[BUG]  [BUGGY]  if(!input.isEmpty())  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(!input.isEmpty())  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!input.isEmpty())  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
744	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
745	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  input    =    String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
746	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "null "));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "null "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "null "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
747	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "java.util.Locale.ENGLISH "));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "java.util.Locale.ENGLISH "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "java.util.Locale.ENGLISH "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
748	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "N   "));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "N   "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "N   "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
749	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "double "));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "double "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "double "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
750	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "DoubleMetaphoneResult   "));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "DoubleMetaphoneResult   "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "DoubleMetaphoneResult   "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
751	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "duplicate "));  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "duplicate "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "duplicate "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
752	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "msg.null "));  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "msg.null "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "msg.null "));	  Parchet.checkState(input.startsWith(   "n   "));    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
753	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
754	[BUG]  [BUGGY]  this.input  =  new  DoubleMetaphoneResult(this.input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  new  DoubleMetaphoneResult(this.input.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  new  DoubleMetaphoneResult(this.input.toUpperCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
755	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
756	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getProperty()  + "n ";  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getProperty()  + "n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getProperty()  + "n ";	  String    input    =(String)this.cleanInput.getProperty();    	non-compiled	[CE]  illegal  start  of  type	548	None	replace
757	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getSimpleName();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getSimpleName();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getSimpleName();	  String    input    =(String)this.cleanInput.getProperty();    	non-compiled	[CE]  illegal  start  of  type	548	None	replace
758	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getPropertyName();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getPropertyName();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getPropertyName();	  String    input    =(String)this.cleanInput.getProperty();    	non-compiled	[CE]  illegal  start  of  type	548	None	replace
759	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	271	None	replace
760	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	271	None	replace
761	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  String.valueOf(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  String.valueOf(input));	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	351	None	replace
762	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input));	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	351	None	replace
763	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	351	None	replace
764	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  input);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this.input,  input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this.input,  input);	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	351	None	replace
765	[BUG]  [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ConstructorException.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
766	[BUG]  [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotations.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
767	[BUG]  [BUGGY]  Parchet.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.class.isAssignableFrom(input))  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
768	[BUG]  [BUGGY]  AnnotationException.class.getSimpleName())  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  AnnotationException.class.getSimpleName())  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	AnnotationException.class.getSimpleName())  {  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
769	[BUG]  [BUGGY]  AnnotationException.class.isAssignableFrom(input)||  input.length()  ==  0)  {  return  null;  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  AnnotationException.class.isAssignableFrom(input)||  input.length()  ==  0)  {  return  null;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	AnnotationException.class.isAssignableFrom(input)||  input.length()  ==  0)  {  return  null;	  AnnotationException.class.isAssignableFrom(input))    {    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
770	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.EXPR_RESULT);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.EXPR_RESULT);	  if(input    ==    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
771	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  false);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  false);	  if(input    ==    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
772	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	539	None	replace
773	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	539	None	replace
774	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	539	None	replace
775	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	539	None	replace
776	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toLowerCase(locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	539	None	replace
777	[BUG]  [BUGGY]  Input  input  =  this.cleanInput!=  null?  null  :  this.cleanInput.getInput();  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput!=  null?  null  :  this.cleanInput.getInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput!=  null?  null  :  this.cleanInput.getInput();	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
778	[BUG]  [BUGGY]  Input  input  =  this.cleanInput  ==  null?  null  :  this.cleanInput.getInput();  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput  ==  null?  null  :  this.cleanInput.getInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput  ==  null?  null  :  this.cleanInput.getInput();	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
779	[BUG]  [BUGGY]  Input  input  =(input  ==  null)?  null  :  input.getInput();  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =(input  ==  null)?  null  :  input.getInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =(input  ==  null)?  null  :  input.getInput();	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
780	[BUG]  [BUGGY]  Input  input  =  super.cleanInput.getInput();  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.cleanInput.getInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.cleanInput.getInput();	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
781	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getOutput();  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getOutput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getOutput();	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
782	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toString();  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toString();	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
783	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getInput(),  null;  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getInput(),  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getInput(),  null;	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
784	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getInput()  + "n ";  [CE]  illegal  start  of  type  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getInput()  + "n ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getInput()  + "n ";	  Input    input    =    this.cleanInput.getInput();    	non-compiled	[CE]  illegal  start  of  type	216	None	replace
785	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  input  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	251	None	replace
786	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	251	None	replace
787	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input;  }	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	350	None	replace
788	[BUG]  [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
789	[BUG]  [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotations.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
790	[BUG]  [BUGGY]  nullPointerException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nullPointerException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nullPointerException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
791	[BUG]  [BUGGY]  annotationException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  annotationException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotationException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
792	[BUG]  [BUGGY]  Parchet.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
793	[BUG]  [BUGGY]  aughtException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
794	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty().length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
795	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty())  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty())  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty())  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
796	[BUG]  [BUGGY]  nisipisEmpty(input.length())  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty(input.length())  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty(input.length())  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
797	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty())  {  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty())  {  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty())  {  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
798	[BUG]  [BUGGY]  nisipisEmpty(input.length())  {  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty(input.length())  {  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty(input.length())  {  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
799	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().startsWith( "- "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().startsWith( "- "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty().startsWith( "- "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
800	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty().length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
801	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().equals( " "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().equals( " "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty().equals( " "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
802	[BUG]  [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().equals( "- "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  nisipisEmpty()  &&  nisipisEmpty().equals( "- "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipisEmpty()  &&  nisipisEmpty().equals( "- "))  {  input  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input.length()    ==    0)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	162	None	replace
803	[BUG]  [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
804	[BUG]  [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&  input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
805	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
806	[BUG]  [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
807	[BUG]  [BUGGY]  &&  this.cleanInput!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  &&  this.cleanInput!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&  this.cleanInput!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
808	[BUG]  [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&  input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
809	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
810	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.trim();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.trim();	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
811	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "  - "  +  input.toLowerCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
812	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ ": "  +  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ ": "  +  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ ": "  +  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
813	[BUG]  [BUGGY]  if(input  >=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(input  >=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  >=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	479	None	replace
814	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	479	None	replace
815	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	479	None	replace
816	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	479	None	replace
817	[BUG]  [BUGGY]  mutableTo(input)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
818	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
819	[BUG]  [BUGGY]  mutableTo(input)  {  input  =  String.valueOf(input.trim());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  input  =  String.valueOf(input.trim());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  input  =  String.valueOf(input.trim());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
820	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
821	[BUG]  [BUGGY]  mutableTo(input)  {  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input!=  null)  {  input  =  input.trim();  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
822	[BUG]  [BUGGY]  mutableTo(input)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input.length()  ==  0)  {  input  =  input.trim();  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
823	[BUG]  [BUGGY]  mutableTo(input)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
824	[BUG]  [BUGGY]  mutableTo(input)  {  if(input  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input  ==  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input  ==  null)  {  input  =  input.trim();  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
825	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	445	None	replace
826	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
827	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
828	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
829	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
830	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.NaN);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.NaN);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.NaN);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
831	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY_STRING);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY_STRING);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY_STRING);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
832	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.TYPE);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.TYPE);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.TYPE);  }	  if(input!=    null)    {    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	543	None	replace
833	[BUG]  [BUGGY]  NullPointerException.printStackTrace();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.printStackTrace();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.printStackTrace();	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	347	None	replace
834	[BUG]  [BUGGY]  aughtException.withLocale(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocale(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocale(Locale.ENGLISH));	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	347	None	replace
835	[BUG]  [BUGGY]  aughtException.withLocale(Locale.ENGLISH).throwException( " ");  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocale(Locale.ENGLISH).throwException( " ");  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocale(Locale.ENGLISH).throwException( " ");	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	347	None	replace
836	[BUG]  [BUGGY]  aughtException.withLocale(Locale.ENGLISH,  input));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocale(Locale.ENGLISH,  input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocale(Locale.ENGLISH,  input));	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	347	None	replace
837	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  String.valueOf(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  String.valueOf(java.util.Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  String.valueOf(java.util.Locale.ENGLISH));	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
838	[BUG]  [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
839	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.US);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.US);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.US);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
840	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  true);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
841	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  false);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  false);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
842	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  1);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  1);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
843	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  4);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  4);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH,  4);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
844	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH  +  1);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH  +  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH  +  1);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	460	None	replace
845	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  super.cleanInput();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  super.cleanInput();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  super.cleanInput();  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    super.cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	595	None	replace
846	[BUG]  [BUGGY]  Input  input  =  super.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    super.cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	595	None	replace
847	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  return  super.cleanInput();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  return  super.cleanInput();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  return  super.cleanInput();  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    super.cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	595	None	replace
848	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  super.cleanInput();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  super.cleanInput();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  super.cleanInput();  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    super.cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	595	None	replace
849	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
850	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
851	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
852	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
853	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Arrays.asList(input));	  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
854	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  false);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  false);	  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
855	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  null);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  null);	  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
856	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  true);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  true);	  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
857	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  input);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Arrays.asList(input),  input);	  aughtExceptionHandler.handleMissingValue(java.util.Arrays.asList(input));    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
858	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(null);	  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
859	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(null,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(null,  java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(null,  java.util.Locale.ENGLISH);	  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
860	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  null);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  null);	  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
861	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  input);	  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
862	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  false);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH,  false);	  aughtExceptionHandler.handleMissingInput(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
863	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
864	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
865	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
866	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
867	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
868	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
869	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
870	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
871	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
872	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.DEFA;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.DEFA;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.DEFA;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
873	[BUG]  [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.DEFA;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.DEFA;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(this.cleanInput!=  null)  {  return  DoubleMetaphoneResult.DEFA;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFA    	non-compiled	[CE]  illegal  start  of  type	562	None	replace
874	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput    =    cleanInput;    	non-compiled	[CE]  illegal  start  of  type	408	None	replace
875	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput    =    cleanInput;    	non-compiled	[CE]  illegal  start  of  type	408	None	replace
876	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput    =    cleanInput;    	non-compiled	[CE]  illegal  start  of  type	408	None	replace
877	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput    =    cleanInput;    	non-compiled	[CE]  illegal  start  of  type	408	None	replace
878	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput    =    cleanInput;    	non-compiled	[CE]  illegal  start  of  type	408	None	replace
879	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  cleanInput  =  cleanInput;	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    cleanInput    =    cleanInput;    	non-compiled	[CE]  illegal  start  of  type	408	None	replace
880	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
881	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
882	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
883	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
884	[BUG]  [BUGGY]  safeThan  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
885	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException)  {  input  =  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
886	[BUG]  [BUGGY]  safeThan  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
887	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException)  {  input  =  input.trim();	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
888	[BUG]  [BUGGY]  safeThan  =(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =(input  ==  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =(input  ==  null)?  null  :  input.trim();	  safeThan    <    NullPointerException)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	451	None	replace
889	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
890	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
891	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
892	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
893	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	560	None	replace
894	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	560	None	replace
895	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	560	None	replace
896	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	560	None	replace
897	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	560	None	replace
898	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	560	None	replace
899	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
900	[BUG]  [BUGGY]  safeThan  =  nullPointerException.class;  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException.class;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException.class;	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
901	[BUG]  [BUGGY]  safeThan  =  nullPointerException.class?  null  :  safeThan.trim();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException.class?  null  :  safeThan.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException.class?  null  :  safeThan.trim();	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
902	[BUG]  [BUGGY]  safeThan  =  NullPointerException.class;  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException.class;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException.class;	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
903	[BUG]  [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
904	[BUG]  [BUGGY]  safeThan(input)  {  input  =  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  {  input  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  {  input  =  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
905	[BUG]  [BUGGY]  safeThan(Input.class)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan(Input.class)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(Input.class)  {  input  =  input.trim();  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
906	[BUG]  [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  <  NullPointerException.class)  {  input  =  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
907	[BUG]  [BUGGY]  safeThan  =  nullPointerException.class  ||  safeThan  <  NullPointerException.class);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException.class  ||  safeThan  <  NullPointerException.class);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException.class  ||  safeThan  <  NullPointerException.class);	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	438	None	replace
908	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	625	None	replace
909	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	625	None	replace
910	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	625	None	replace
911	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	625	None	replace
912	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
913	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
914	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  return  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
915	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  return  input.trim();  }  else  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
916	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
917	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(input!=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
918	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
919	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
920	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
921	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
922	[BUG]  [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
923	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
924	[BUG]  [BUGGY]  if(input!=  null)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
925	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
926	[BUG]  [BUGGY]  return  input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  return  input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
927	[BUG]  [BUGGY]  return  this.cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  return  this.cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
928	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
929	[BUG]  [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	487	None	replace
930	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
931	[BUG]  [BUGGY]  return  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
932	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
933	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
934	[BUG]  [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null;  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
935	[BUG]  [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  null;  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  null;  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
936	[BUG]  [BUGGY]  return  this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  return  this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.cleanInput.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
937	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	483	None	replace
938	[BUG]  [BUGGY]  String  input  =(String)this.cleanOutput.getValue();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanOutput.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanOutput.getValue();	  char    input    =(char)this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	544	None	replace
939	[BUG]  [BUGGY]  Character  input  =(Character)this.cleanInput.getValue();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Character  input  =(Character)this.cleanInput.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Character  input  =(Character)this.cleanInput.getValue();	  char    input    =(char)this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	544	None	replace
940	[BUG]  [BUGGY]  Character  input  =(char)this.cleanInput.getValue();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Character  input  =(char)this.cleanInput.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Character  input  =(char)this.cleanInput.getValue();	  char    input    =(char)this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	544	None	replace
941	[BUG]  [BUGGY]  String  input  =(STRING)this.cleanInput.getValue();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(STRING)this.cleanInput.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(STRING)this.cleanInput.getValue();	  char    input    =(char)this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	544	None	replace
942	[BUG]  [BUGGY]  String  input  =(string)this.cleanInput.getValue();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(string)this.cleanInput.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(string)this.cleanInput.getValue();	  char    input    =(char)this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	544	None	replace
943	[BUG]  [BUGGY]  String  input  =(StrING)this.cleanInput.getValue();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(StrING)this.cleanInput.getValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(StrING)this.cleanInput.getValue();	  char    input    =(char)this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	544	None	replace
944	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(this);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(this);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(this);	  aughtExceptionHandler.handleMissingInput(input);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
945	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(this,  input);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(this,  input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(this,  input);	  aughtExceptionHandler.handleMissingInput(input);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
946	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(new  DoubleMetaphoneResult(input));  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(new  DoubleMetaphoneResult(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(new  DoubleMetaphoneResult(input));	  aughtExceptionHandler.handleMissingInput(input);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
947	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(new  InputStreamReader(input));  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(new  InputStreamReader(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(new  InputStreamReader(input));	  aughtExceptionHandler.handleMissingInput(input);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
948	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(null,  input);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(null,  input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(null,  input);	  aughtExceptionHandler.handleMissingInput(input);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
949	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingInput(input,  null);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingInput(input,  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingInput(input,  null);	  aughtExceptionHandler.handleMissingInput(input);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
950	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  /  1;  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  /  1;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  /  1;	  String    input    =(String)this.cleanInput.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
951	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getKey()  +  1;  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getKey()  +  1;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getKey()  +  1;	  String    input    =(String)this.cleanInput.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
952	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  *  1;  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  *  1;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  *  1;	  String    input    =(String)this.cleanInput.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
953	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  *  2  +  1;  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  *  2  +  1;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  *  2  +  1;	  String    input    =(String)this.cleanInput.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
954	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  +  2;  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  +  2;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  +  2;	  String    input    =(String)this.cleanInput.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
955	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  -  1;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  -  1;	  String    input    =(String)this.cleanInput.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
956	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.jdk.internal.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.jdk.internal.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.jdk.internal.Locale.ENGLISH);	  if(input!=    null)    {    input    =    new    String(input.trim());    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	608	None	replace
957	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.core.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.core.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(org.apache.commons.core.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    new    String(input.trim());    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	608	None	replace
958	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);	  if(input!=    null)    {    input    =    new    String(input.trim());    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	608	None	replace
959	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	369	None	replace
960	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	369	None	replace
961	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	369	None	replace
962	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Boolean.TRUE);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Boolean.TRUE);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(Boolean.TRUE);  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	369	None	replace
963	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(JavaLocale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(JavaLocale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(JavaLocale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	369	None	replace
964	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
965	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
966	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
967	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
968	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  1)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  1)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  1)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
969	[BUG]  [BUGGY]  aughtException.withLocale(Locale.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocale(Locale.ENGLISH,  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocale(Locale.ENGLISH,  input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	453	None	replace
970	[BUG]  [BUGGY]  aughtException.withLocale(Locale.ENGLISH,  null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocale(Locale.ENGLISH,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocale(Locale.ENGLISH,  null);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	453	None	replace
971	[BUG]  [BUGGY]  aughtException.withLocalMillis(input);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocalMillis(input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocalMillis(input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	453	None	replace
972	[BUG]  [BUGGY]  NullPointerException.println( "Unexpected  number  of  input: "  +  input);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Unexpected  number  of  input: "  +  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Unexpected  number  of  input: "  +  input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	453	None	replace
973	[BUG]  [BUGGY]  Parchet.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0);	  if(input!=    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	531	None	replace
974	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.trim().length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.trim().length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()  ==  0  ||  input.trim().length()!=  0)  {  return  null;  }	  if(input!=    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	531	None	replace
975	[BUG]  [BUGGY]  ParchetUtil.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ParchetUtil.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ParchetUtil.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0);	  if(input!=    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	531	None	replace
976	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()!=  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()!=  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()!=  0  ||  input.trim().length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	531	None	replace
977	[BUG]  [BUGGY]  ParchetUtil.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ParchetUtil.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ParchetUtil.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;	  if(input!=    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	531	None	replace
978	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.trim().length()  >=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.trim().length()  >=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input.length()  ==  0  ||  input.trim().length()  >=  0)  {  return  null;  }	  if(input!=    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	531	None	replace
979	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
980	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
981	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
982	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  ENGLISH);  cleanInput.setString(input.toUpperCase(Locale.ENGLISH),  cleanInput);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  ENGLISH);  cleanInput.setString(input.toUpperCase(Locale.ENGLISH),  cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  ENGLISH);  cleanInput.setString(input.toUpperCase(Locale.ENGLISH),  cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
983	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
984	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
985	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  ENGLISH);  cleanInput.setString(input.toUpperCase(Locale.ENGLISH),  cleanInput);  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  ENGLISH);  cleanInput.setString(input.toUpperCase(Locale.ENGLISH),  cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  ENGLISH);  cleanInput.setString(input.toUpperCase(Locale.ENGLISH),  cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH),    cleanInput);    	non-compiled	[CE]  illegal  start  of  type	463	None	replace
986	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	318	None	replace
987	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	318	None	replace
988	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	318	None	replace
989	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	318	None	replace
990	[BUG]  [BUGGY]  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
991	[BUG]  [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(input!=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
992	[BUG]  [BUGGY]  final  Object  input  =(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  Object  input  =(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  Object  input  =(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
993	[BUG]  [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
994	[BUG]  [BUGGY]  final  char  input  =(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  char  input  =(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  char  input  =(input  ==  null)?  null  :  input.toLowerCase(java.util.Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
995	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	364	None	replace
996	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  nu  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  nu  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  nu	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	364	None	replace
997	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	364	None	replace
998	[BUG]  [BUGGY]  if(input!=  null  ||  input.trim().length()  ==  0)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.trim().length()  ==  0)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.trim().length()  ==  0)  {  if(input!=  null)  {  return  null;  }	  if(input.trim().length()    ==    0)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
999	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  if(input!=  null)  {  return  null;  }	  if(input.trim().length()    ==    0)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1000	[BUG]  [BUGGY]  if(input.trim().length()!=  0)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()!=  0)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()!=  0)  {  if(input!=  null)  {  return  null;  }	  if(input.trim().length()    ==    0)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1001	[BUG]  [BUGGY]  if(input.trim().length()!=  0)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()!=  0)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()!=  0)  {  if(input  ==  null)  {  return  null;  }	  if(input.trim().length()    ==    0)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1002	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  if(input  ==  null)  {  return  null;  }	  if(input.trim().length()    ==    0)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1003	[BUG]  [BUGGY]  if(input.trim().length()  >=  0)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  >=  0)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  >=  0)  {  if(input!=  null)  {  return  null;  }	  if(input.trim().length()    ==    0)    {    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1004	[BUG]  [BUGGY]  return  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1005	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1006	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1007	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1008	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1009	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1010	[BUG]  [BUGGY]  String  input  =(String)this.cleanOutput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanOutput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanOutput.toUpperCase(Locale.ENGLISH);	  char    input    =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	441	None	replace
1011	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);	  char    input    =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	441	None	replace
1012	[BUG]  [BUGGY]  Character  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Character  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Character  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);	  char    input    =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	441	None	replace
1013	[BUG]  [BUGGY]  String  output  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  output  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  output  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);	  char    input    =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	441	None	replace
1014	[BUG]  [BUGGY]  String  input  =(StrING)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(StrING)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(StrING)this.cleanInput.toUpperCase(Locale.ENGLISH);	  char    input    =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	441	None	replace
1015	[BUG]  [BUGGY]  String  input  =(String)This.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)This.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)This.cleanInput.toUpperCase(Locale.ENGLISH);	  char    input    =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	441	None	replace
1016	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }	  if(input!=    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1017	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.class);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.class);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.class);  }	  if(input!=    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1018	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  output.trim();  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  output.trim();  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  output.trim();  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1019	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY_STRING);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY_STRING);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY_STRING);  }	  if(input!=    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1020	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  output.trim();  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  output.trim();  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  output.trim();  return  new  DoubleMetaphoneResult(input);  }	  if(input!=    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1021	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.TYPE_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.TYPE_OBJECT);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.TYPE_OBJECT);  }	  if(input!=    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1022	[BUG]  [BUGGY]  if(cleanInput)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1023	[BUG]  [BUGGY]  if(!cleanInput)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1024	[BUG]  [BUGGY]  if(!cleanInput)  {  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1025	[BUG]  [BUGGY]  if(cleanInput)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1026	[BUG]  [BUGGY]  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1027	[BUG]  [BUGGY]  if(!cleanInput)  {  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1028	[BUG]  [BUGGY]  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	568	None	replace
1029	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1030	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1031	[BUG]  [BUGGY]  String  input  =  String.valueOf(Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  String.valueOf(Integer.MIN_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  String.valueOf(Integer.MIN_VALUE);	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1032	[BUG]  [BUGGY]  int  input  =  String.valueOf(Integer.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  input  =  String.valueOf(Integer.MIN_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	int  input  =  String.valueOf(Integer.MIN_VALUE);	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1033	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1034	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  return  null;  }	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1035	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.MIN_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1036	[BUG]  [BUGGY]  input  =  String.valueOf(Integer.MIN_VALUE  +  1);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(Integer.MIN_VALUE  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(Integer.MIN_VALUE  +  1);	  input    =    String.valueOf(Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	467	None	replace
1037	[BUG]  [BUGGY]  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  cleanInput  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	cleanInput  =  input.trim();	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1038	[BUG]  [BUGGY]  CleanInput  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  CleanInput  cleanInput  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	CleanInput  cleanInput  =  input.trim();	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1039	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  cleanInput  =  input.trim();  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1040	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  cleanInput  =  input.trim();  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1041	[BUG]  [BUGGY]  CleanInput  <?>  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  CleanInput  <?>  cleanInput  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	CleanInput  <?>  cleanInput  =  input.trim();	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1042	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  input.trim();	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1043	[BUG]  [BUGGY]  CleanInput  <  String>  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  CleanInput  <  String>  cleanInput  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	CleanInput  <  String>  cleanInput  =  input.trim();	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1044	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	513	None	replace
1045	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  5);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  5);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  5);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    1);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1046	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  12);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  12);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  12);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,    1);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1047	[BUG]  [BUGGY]  Object  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Object  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Object  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1048	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1049	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1050	[BUG]  [BUGGY]  char  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1051	[BUG]  [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1052	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1053	[BUG]  [BUGGY]  final  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1054	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  Locale.toUpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toUpperCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	503	None	replace
1055	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(!input.isEmpty())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	334	None	replace
1056	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(!input.isEmpty())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	334	None	replace
1057	[BUG]  [BUGGY]  safeThan(Integer.class))  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan(Integer.class))  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(Integer.class))  {  input  =  input.trim();  }  else  if(!input.isEmpty())  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(!input.isEmpty())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	334	None	replace
1058	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  return  null;  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  return  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  return  null;	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(!input.isEmpty())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	334	None	replace
1059	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class))  {  return  null;  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class))  {  return  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class))  {  return  null;	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(!input.isEmpty())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	334	None	replace
1060	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(!input.isEmpty())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	334	None	replace
1061	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1062	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1063	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1064	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  CleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  CleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  CleanInput  =  input;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1065	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  output;  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  output;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  output;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1066	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  cleanInput  =  input;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1067	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanupInput  =  input;  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanupInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleanupInput  =  input;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1068	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleaningInput  =  input;  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleaningInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  cleaningInput  =  input;	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1069	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1070	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.input);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.input);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(this.input);  }	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1071	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.input);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.input);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(this.input);  }	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1072	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1073	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  return  null;  }	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1074	[BUG]  [BUGGY]  input  =  String.valueOf(this.input,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(this.input,  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(this.input,  java.util.Locale.ENGLISH);	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1075	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(this.input);  }  else  {  return  null;  }	  input    =    String.valueOf(this.input);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1076	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ")    +    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	464	None	replace
1077	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ")    +    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	464	None	replace
1078	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ")    +    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	464	None	replace
1079	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ")    +    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	464	None	replace
1080	[BUG]  [BUGGY]  aught(null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aught(null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aught(null)  {  throw  new  IllegalArgumentException( " ")+  input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ")    +    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	464	None	replace
1081	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ")    +    input.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	464	None	replace
1082	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
1083	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
1084	[BUG]  [BUGGY]  String  input  =  this.input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.input.toUpperCase(Locale.ENGLISH);	  input    =    this.input.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	492	None	replace
1085	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  input    =    this.input.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	492	None	replace
1086	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  String.valueOf(input);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  String.valueOf(input);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  String.valueOf(input);  }	  if(input!=    null)    {    input    =    String.valueOf(input);    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1087	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  String.valueOf(input);  }	  if(input!=    null)    {    input    =    String.valueOf(input);    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1088	[BUG]  [BUGGY]  Input  input  =  String.valueOf(input);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  String.valueOf(input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  String.valueOf(input);	  if(input!=    null)    {    input    =    String.valueOf(input);    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1089	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  String.valueOf(input));	  if(input!=    null)    {    input    =    String.valueOf(input);    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1090	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(input,  String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(input,  String.valueOf(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(input,  String.valueOf(input));	  if(input!=    null)    {    input    =    String.valueOf(input);    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1091	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.EMPTY);  }	  if(input    ==    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
1092	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.class);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.class);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  return  new  DoubleMetaphoneResult(Input.class);  }	  if(input    ==    null)    {    String    input    =    input.trim();    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
1093	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1094	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1095	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1096	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1097	[BUG]  [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1098	[BUG]  [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1099	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1100	[BUG]  [BUGGY]  if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1101	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1102	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getPropertyKey();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getPropertyKey();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getPropertyKey();	  String    input    =(String)this.cleanInput.getPropertyValue();    	non-compiled	[CE]  illegal  start  of  type	547	None	replace
1103	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getPropertyValue()  + "n ";  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getPropertyValue()  + "n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getPropertyValue()  + "n ";	  String    input    =(String)this.cleanInput.getPropertyValue();    	non-compiled	[CE]  illegal  start  of  type	547	None	replace
1104	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getSimpleValue();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getSimpleValue();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getSimpleValue();	  String    input    =(String)this.cleanInput.getPropertyValue();    	non-compiled	[CE]  illegal  start  of  type	547	None	replace
1105	[BUG]  [BUGGY]  Input  input  =  input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  input.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  input.toUpperCase();	  if(input!=    null)    {    input    =    input.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  type	613	None	replace
1106	[BUG]  [BUGGY]  Input  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  type	613	None	replace
1107	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase();	  if(input!=    null)    {    input    =    input.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  type	613	None	replace
1108	[BUG]  [BUGGY]  final  String  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
1109	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
1110	[BUG]  [BUGGY]  if(input  ==  null)  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
1111	[BUG]  [BUGGY]  this.cleanInput  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
1112	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1113	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFA	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1114	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1115	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1116	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAUL  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAUL  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAUL	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1117	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1118	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  >=  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  >=  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  >=  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1119	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
1120	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1121	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1122	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1123	[BUG]  [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(char)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1124	[BUG]  [BUGGY]  cleanInput  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  cleanInput  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	cleanInput  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1125	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  cleanInput  =  input;	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1126	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH));	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	617	None	replace
1127	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toString(),  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toString(),  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toString(),  input.toUpperCase(java.util.Locale.ENGLISH));	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	617	None	replace
1128	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH),  null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH),  null);	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	617	None	replace
1129	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.EXPR_RESULT));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.EXPR_RESULT));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.EXPR_RESULT));	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	617	None	replace
1130	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH),  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH),  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input.toUpperCase(java.util.Locale.ENGLISH),	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	617	None	replace
1131	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1132	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1133	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE.class;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.NONE.class;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1134	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  >=  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  >=  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  >=  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1135	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.None.class;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1136	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  NumberMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  NumberMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  NumberMetaphoneResult.None.class;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1137	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1138	[BUG]  [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	While(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None;  }	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	367	None	replace
1139	[BUG]  [BUGGY]  return  input.toLowerCase(Locale.ENGLISH)+  cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  return  input.toLowerCase(Locale.ENGLISH)+  cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toLowerCase(Locale.ENGLISH)+  cleanInput.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1140	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1141	[BUG]  [BUGGY]  if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1142	[BUG]  [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toLowerCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1143	[BUG]  [BUGGY]  return  this.cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  return  this.cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1144	[BUG]  [BUGGY]  if(input  ==  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1145	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toLowerCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1146	[BUG]  [BUGGY]  return  input.toUpperCase(Locale.ENGLISH)+  cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  return  input.toUpperCase(Locale.ENGLISH)+  cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input.toUpperCase(Locale.ENGLISH)+  cleanInput.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toLowerCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	489	None	replace
1147	[BUG]  [BUGGY]  Input  input  =(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =(input  ==  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =(input  ==  null)?  null  :  input.trim();	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1148	[BUG]  [BUGGY]  Input  input  =(input!=  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =(input!=  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =(input!=  null)?  null  :  input.trim();	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1149	[BUG]  [BUGGY]  readInput  =(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  readInput  =(input  ==  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	readInput  =(input  ==  null)?  null  :  input.trim();	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1150	[BUG]  [BUGGY]  feed(input!=  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  feed(input!=  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	feed(input!=  null)?  null  :  input.trim();	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1151	[BUG]  [BUGGY]  feed(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  feed(input  ==  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	feed(input  ==  null)?  null  :  input.trim();	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1152	[BUG]  [BUGGY]  Parchet.checkState(input!=  null);  input  =(input  ==  null)?  null  :  input.trim();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input!=  null);  input  =(input  ==  null)?  null  :  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input!=  null);  input  =(input  ==  null)?  null  :  input.trim();	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1153	[BUG]  [BUGGY]  Parchet.checkState(input!=  null);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input!=  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input!=  null);	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	553	None	replace
1154	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
1155	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
1156	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
1157	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
1158	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  input.length()  -  2);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.substring(0,  input.length()  -  2);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.substring(0,  input.length()  -  2);	  input    =(input    ==    null)?    null    :    input.trim();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
1159	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1160	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	356	None	replace
1161	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  output.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  output.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  output.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	356	None	replace
1162	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  NumberMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  NumberMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  NumberMetaphoneResult.None.class;  }	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	356	None	replace
1163	[BUG]  [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	ConstructorException.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1164	[BUG]  [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  annotations.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	annotations.class.isAssignableFrom(input))  {  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }	  AnnotationException.class.isAssignableFrom(input))    {    if(input    ==    null    ||    input.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1165	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	449	None	replace
1166	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	449	None	replace
1167	[BUG]  [BUGGY]  mutableTo(input)  {  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	449	None	replace
1168	[BUG]  [BUGGY]  mutableTo(input)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	449	None	replace
1169	[BUG]  [BUGGY]  mutableTo(input)  {  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	449	None	replace
1170	[BUG]  [BUGGY]  mutableTo(input)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input.length()  ==  0)  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	449	None	replace
1171	[BUG]  [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	357	None	replace
1172	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	357	None	replace
1173	[BUG]  [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	357	None	replace
1174	[BUG]  [BUGGY]  String  input  =  output.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  output.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  output.toUpperCase(java.util.Locale.ENGLISH);	  char    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	584	None	replace
1175	[BUG]  [BUGGY]  String  input  =  sourceFile.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  sourceFile.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  sourceFile.toUpperCase(java.util.Locale.ENGLISH);	  char    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	584	None	replace
1176	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(String.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(String.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(String.ENGLISH);	  char    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	584	None	replace
1177	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Boolean.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Boolean.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Boolean.ENGLISH);	  char    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	584	None	replace
1178	[BUG]  [BUGGY]  String  input  =  UpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  UpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  UpperCase(java.util.Locale.ENGLISH);	  char    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	584	None	replace
1179	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Boolean.FALSE);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Boolean.FALSE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Boolean.FALSE);	  char    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	584	None	replace
1180	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	540	None	replace
1181	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	540	None	replace
1182	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	540	None	replace
1183	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	540	None	replace
1184	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1185	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)/  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)/  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)/  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1186	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim();	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1187	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1188	[BUG]  [BUGGY]  SafeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  SafeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	SafeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1189	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim().toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim().toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim().toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1190	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)-  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)-  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)-  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1191	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim());  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.trim());	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(org.apache.commons.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	458	None	replace
1192	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Object.class);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Object.class);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Object.class);	  String    input    =(String)this.cleanInput.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
1193	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.US);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.US);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.US);	  String    input    =(String)this.cleanInput.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
1194	[BUG]  [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(char)this.cleanInput.toUpperCase();	  String    input    =(String)this.cleanInput.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
1195	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
1196	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
1197	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  input  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1198	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  String.valueOf(input.trim());  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  String.valueOf(input.trim());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  String.valueOf(input.trim());  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1199	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1200	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1201	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1202	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1203	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1204	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.length());  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.length());	  Input    input    =    new    DoubleMetaphoneResult(input.trim());    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
1205	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.valueOf(input.trim()));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(Input.valueOf(input.trim()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(Input.valueOf(input.trim()));	  Input    input    =    new    DoubleMetaphoneResult(input.trim());    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
1206	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.substring(1));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.substring(1));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.substring(1));	  Input    input    =    new    DoubleMetaphoneResult(input.trim());    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
1207	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toString());  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toString());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toString());	  Input    input    =    new    DoubleMetaphoneResult(input.trim());    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
1208	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.trim());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.trim());	  Input    input    =    new    DoubleMetaphoneResult(input.trim());    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
1209	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.trim()  +  1);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.trim()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.trim()  +  1);	  Input    input    =    new    DoubleMetaphoneResult(input.trim());    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
1210	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(String.valueOf(input.trim()));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(String.valueOf(input.trim()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(String.valueOf(input.trim()));	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	482	None	replace
1211	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(String.valueOf(input.trim()),  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(String.valueOf(input.trim()),  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(String.valueOf(input.trim()),  java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	482	None	replace
1212	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Boolean.valueOf(input.trim()));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Boolean.valueOf(input.trim()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Boolean.valueOf(input.trim()));	  if(input!=    null)    {    input    =    String.valueOf(input.trim());    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	482	None	replace
1213	[BUG]  [BUGGY]  Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1214	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1215	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1216	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  String.valueOf(input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  String.valueOf(input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  String.valueOf(input.toUpperCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1217	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1218	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toLowerCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toLowerCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toLowerCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1219	[BUG]  [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1220	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  locale.toUpperCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	508	None	replace
1221	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  nu  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  nu  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  nu	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null    	non-compiled	[CE]  illegal  start  of  type	397	None	replace
1222	[BUG]  [BUGGY]   "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]   "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	 "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null    	non-compiled	[CE]  illegal  start  of  type	397	None	replace
1223	[BUG]  [BUGGY]   "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]   "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	 "Can  not  instantiate  input  of  type "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null    	non-compiled	[CE]  illegal  start  of  type	397	None	replace
1224	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  nu  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  nu  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  nu	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null    	non-compiled	[CE]  illegal  start  of  type	397	None	replace
1225	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null    	non-compiled	[CE]  illegal  start  of  type	397	None	replace
1226	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null    	non-compiled	[CE]  illegal  start  of  type	397	None	replace
1227	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
1228	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  output.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  output.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  output.toUpperCase(java.util.Locale.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1229	[BUG]  [BUGGY]  String  input  =(input  >=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  >=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  >=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1230	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toUpperCase(String.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toUpperCase(String.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.toUpperCase(String.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1231	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toUpperCase(Boolean.TRUE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.toUpperCase(Boolean.TRUE);	  char    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1232	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1233	[BUG]  [BUGGY]  Input  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1234	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1235	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1236	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1237	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1238	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1239	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
1240	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
1241	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  output.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  output.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  output.toUpperCase(Locale.ENGLISH);  }	  if(this.input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
1242	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input.toUpperCase(Locale.ENGLISH	  if(this.input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
1243	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
1244	[BUG]  [BUGGY]  safeInput  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeInput  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeInput  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
1245	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
1246	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
1247	[BUG]  [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.toString();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(this.input  ==  null)?  null  :  this.input.toString();	  input    =(this.input    ==    null)?    null    :    this.input.trim();    	non-compiled	[CE]  illegal  start  of  type	360	None	replace
1248	[BUG]  [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.toLowerCase();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(this.input  ==  null)?  null  :  this.input.toLowerCase();	  input    =(this.input    ==    null)?    null    :    this.input.trim();    	non-compiled	[CE]  illegal  start  of  type	360	None	replace
1249	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =(this.input  ==  null)?  null  :  this.input.trim();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =(this.input  ==  null)?  null  :  this.input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =(this.input  ==  null)?  null  :  this.input.trim();  }	  input    =(this.input    ==    null)?    null    :    this.input.trim();    	non-compiled	[CE]  illegal  start  of  type	360	None	replace
1250	[BUG]  [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.toUpperCase();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(this.input  ==  null)?  null  :  this.input.toUpperCase();	  input    =(this.input    ==    null)?    null    :    this.input.trim();    	non-compiled	[CE]  illegal  start  of  type	360	None	replace
1251	[BUG]  [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.getValue();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  input  =(this.input  ==  null)?  null  :  this.input.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(this.input  ==  null)?  null  :  this.input.getValue();	  input    =(this.input    ==    null)?    null    :    this.input.trim();    	non-compiled	[CE]  illegal  start  of  type	360	None	replace
1252	[BUG]  [BUGGY]  this.input  =(this.input  ==  null)?  null  :  this.input.trim();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.input  =(this.input  ==  null)?  null  :  this.input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =(this.input  ==  null)?  null  :  this.input.trim();	  input    =(this.input    ==    null)?    null    :    this.input.trim();    	non-compiled	[CE]  illegal  start  of  type	360	None	replace
1253	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	593	None	replace
1254	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	593	None	replace
1255	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	593	None	replace
1256	[BUG]  [BUGGY]  input  =  new  String(input.toUpperCase());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  input  =  new  String(input.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  new  String(input.toUpperCase());	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1257	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1258	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  new  String(input.toLowerCase());  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  new  String(input.toLowerCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  new  String(input.toLowerCase());  }	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1259	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1260	[BUG]  [BUGGY]  input  =  new  String(Input.valueOf(input.toLowerCase()));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  new  String(Input.valueOf(input.toLowerCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  new  String(Input.valueOf(input.toLowerCase()));	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1261	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1262	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  String(input.toLowerCase());  }  else  {  return  null;  }	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1263	[BUG]  [BUGGY]  input  =  new  String(input.toLowerCase()  + "n ");  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  new  String(input.toLowerCase()  + "n ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  new  String(input.toLowerCase()  + "n ");	  input    =    new    String(input.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	386	None	replace
1264	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  if(input!=  null)  {  input  =  input.trim();  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	509	None	replace
1265	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  cleanInput  =  null;  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	509	None	replace
1266	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	393	None	replace
1267	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	393	None	replace
1268	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	393	None	replace
1269	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	393	None	replace
1270	[BUG]  [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	393	None	replace
1271	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	452	None	replace
1272	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	452	None	replace
1273	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	452	None	replace
1274	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	452	None	replace
1275	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	452	None	replace
1276	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	536	None	replace
1277	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(input!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
1278	[BUG]  [BUGGY]  this.cleanInput  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
1279	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    checkInput(cleanInput);    	non-compiled	[CE]  illegal  start  of  type	407	None	replace
1280	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    checkInput(cleanInput);    	non-compiled	[CE]  illegal  start  of  type	407	None	replace
1281	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    checkInput(cleanInput);    	non-compiled	[CE]  illegal  start  of  type	407	None	replace
1282	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    checkInput(cleanInput);    	non-compiled	[CE]  illegal  start  of  type	407	None	replace
1283	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(cleanInput);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    checkInput(cleanInput);    	non-compiled	[CE]  illegal  start  of  type	407	None	replace
1284	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(null);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH));  checkInput(null);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH));    checkInput(cleanInput);    	non-compiled	[CE]  illegal  start  of  type	407	None	replace
1285	[BUG]  [BUGGY]  String  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	373	None	replace
1286	[BUG]  [BUGGY]  final  String  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	373	None	replace
1287	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	373	None	replace
1288	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	373	None	replace
1289	[BUG]  [BUGGY]  if(input!=  null)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1290	[BUG]  [BUGGY]  if(input  ==  null)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1291	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1292	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH,  input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH,  input);	  return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1293	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1294	[BUG]  [BUGGY]  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  1)  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);  }	  return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1295	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  input.trim();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  input.trim();  }  else  {  return  null;  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
1296	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
1297	[BUG]  [BUGGY]  char  input  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.charAt(0);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.charAt(0);	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1298	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1299	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.charAt(0));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.charAt(0));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.charAt(0));  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1300	[BUG]  [BUGGY]  if(input.length()  ==  1)  {  input  =  String.valueOf(input.charAt(0));  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  1)  {  input  =  String.valueOf(input.charAt(0));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  1)  {  input  =  String.valueOf(input.charAt(0));  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1301	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.charAt(0));  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.charAt(0));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  String.valueOf(input.charAt(0));  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1302	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1303	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1304	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0));  }  else  {  return  null;  }	  input    =    String.valueOf(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	604	None	replace
1305	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	398	None	replace
1306	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	398	None	replace
1307	[BUG]  [BUGGY]  if(input  ==  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH));  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	398	None	replace
1308	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  -> "+input.toLowerCase(java.util.Lo  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  -> "+input.toLowerCase(java.util.Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  -> "+input.toLowerCase(java.util.Lo	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	398	None	replace
1309	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.ENGLISH	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	398	None	replace
1310	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	523	None	replace
1311	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	523	None	replace
1312	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	523	None	replace
1313	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	585	None	replace
1314	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	585	None	replace
1315	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	585	None	replace
1316	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	585	None	replace
1317	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)  ==  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	585	None	replace
1318	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	598	None	replace
1319	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	598	None	replace
1320	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	598	None	replace
1321	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	598	None	replace
1322	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	598	None	replace
1323	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  Locale.ENGLISH);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
1324	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase()  +  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase()  +  1);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
1325	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toUpperCase());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toUpperCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toUpperCase());	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
1326	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  true);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  true);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  true);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
1327	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  1);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
1328	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  String.class);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  String.class);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(),  String.class);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
1329	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(java.util.Locale.ENGLISH)));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(java.util.Locale.ENGLISH)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(java.util.Locale.ENGLISH)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1330	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(input)));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(input)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1331	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Locale.ENGLISH)));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Locale.ENGLISH)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Locale.ENGLISH)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1332	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(Locale.ENGLISH)));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(Locale.ENGLISH)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(Locale.ENGLISH)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1333	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "+input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "+input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "+input.toUpperCase(Locale.ENGLISH));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1334	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toString(Integer.toString(input)));  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toString(Integer.toString(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toString(Integer.toString(input)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1335	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(input)));  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(input)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1336	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(java.util.Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toHexString(Integer.toHexString(Integer.toHexString(java.util.Locale.	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1337	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1338	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1339	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1340	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1341	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1342	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1343	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.trim();  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1344	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.trim();  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
1345	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1346	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1347	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1348	[BUG]  [BUGGY]  static  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1349	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  0);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  0);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1350	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  1);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1351	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  true);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1352	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  2);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  2);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH,  2);	  final    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	571	None	replace
1353	[BUG]  [BUGGY]  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1354	[BUG]  [BUGGY]  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1355	[BUG]  [BUGGY]  safeThan  <  NullPointerException  ||  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException  ||  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException  ||  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1356	[BUG]  [BUGGY]  safeThan  >=  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  >=  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  >=  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1357	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1358	[BUG]  [BUGGY]  safeThan  ==  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  ==  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  ==  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1359	[BUG]  [BUGGY]  SafeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  SafeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	SafeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1360	[BUG]  [BUGGY]  safeInput  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  safeInput  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeInput  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_NON_NULL_NON_NULL_NON_NULL_NON_NULL_N    	non-compiled	[CE]  illegal  start  of  type	431	None	replace
1361	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.toHexString  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.toHexString  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.toHexString	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1362	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.class));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.class));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.class));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1363	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.class)  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.class)  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.class)	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1364	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1365	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(input));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(input));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1366	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.valueOf(input)));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.valueOf(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.valueOf(input)));	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1367	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.valueOf(input)  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.valueOf(input)  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  Integer.toHexString(Integer.class)+ ": "  +  Integer.toHexString(Integer.valueOf(input)	  if(null    ==    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	355	None	replace
1368	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	272	None	replace
1369	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	400	None	replace
1370	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	400	None	replace
1371	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	400	None	replace
1372	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	400	None	replace
1373	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  NullPointerException( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  throw  new  NullPointerException( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  throw  new  NullPointerException( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	400	None	replace
1374	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toLowerCase(Locale.  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toLowerCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toLowerCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	400	None	replace
1375	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.trim());  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.trim());  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.trim());  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1376	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.trim());  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.trim());  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.trim());  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1377	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.trim());  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.trim());  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.trim());  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1378	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1379	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.trim());  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.trim());  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.trim());  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1380	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1381	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.length());  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1382	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  input.trim();  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	603	None	replace
1383	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1384	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1385	[BUG]  [BUGGY]  int  input  =  String.valueOf(Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  input  =  String.valueOf(Integer.MAX_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	int  input  =  String.valueOf(Integer.MAX_VALUE);	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1386	[BUG]  [BUGGY]  String  input  =  String.valueOf(Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  String.valueOf(Integer.MAX_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  String.valueOf(Integer.MAX_VALUE);	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1387	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  return  null;  }	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1388	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1389	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.MAX_VALUE);  }  else  {  return  null;  }	  input    =    String.valueOf(Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	466	None	replace
1390	[BUG]  [BUGGY]  input  =  String.valueOf(Input.valueOf(input.trim()));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(Input.valueOf(input.trim()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(Input.valueOf(input.trim()));	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1391	[BUG]  [BUGGY]  input  =  String.valueOf(Input.trim());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(Input.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(Input.trim());	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1392	[BUG]  [BUGGY]  input  =  String.valueOf(input.trim()  /  1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.trim()  /  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.trim()  /  1);	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1393	[BUG]  [BUGGY]  input  =  String.valueOf(input.trim(),  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.trim(),  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.trim(),  1);	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1394	[BUG]  [BUGGY]  Input  input  =  String.valueOf(input.trim());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  String.valueOf(input.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  String.valueOf(input.trim());	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1395	[BUG]  [BUGGY]  input  =  String.valueOf(input.trim()  -  1);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.trim()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.trim()  -  1);	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1396	[BUG]  [BUGGY]  input  =  String.valueOf(input.trim(),  input.length());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.trim(),  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.trim(),  input.length());	  input    =    String.valueOf(input.trim()    +    1);    	non-compiled	[CE]  illegal  start  of  type	340	None	replace
1397	[BUG]  [BUGGY]  char  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  String    input    =(input!=    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	582	None	replace
1398	[BUG]  [BUGGY]  char  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  String    input    =(input!=    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	582	None	replace
1399	[BUG]  [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(input!=  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  String    input    =(input!=    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	582	None	replace
1400	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(String.valueOf(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(String.valueOf(input));	  aughtExceptionHandler.handleMissingName(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
1401	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(null);	  aughtExceptionHandler.handleMissingName(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
1402	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.Locale.ENGLISH,  null);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.Locale.ENGLISH,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(java.util.Locale.ENGLISH,  null);	  aughtExceptionHandler.handleMissingName(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
1403	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1404	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1405	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1406	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1407	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1408	[BUG]  [BUGGY]  safeThan(Integer.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(Integer.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(Integer.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1409	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input  ==  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input  ==  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input  ==  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1410	[BUG]  [BUGGY]  safeThan(Integer.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(Integer.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(Integer.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
1411	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1412	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1413	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1414	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1415	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =(input!=  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =(input!=  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =(input!=  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1416	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =(input!=  null)?  null  :  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =(input!=  null)?  null  :  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =(input!=  null)?  null  :  input.trim();  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1417	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1418	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =(input  ==  null)?  null  :  input.trim();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	554	None	replace
1419	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	475	None	replace
1420	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	475	None	replace
1421	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
1422	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
1423	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
1424	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	474	None	replace
1425	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	474	None	replace
1426	[BUG]  [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	471	None	replace
1427	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1428	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1429	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Arrays.asList(this.input));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Arrays.asList(this.input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(Arrays.asList(this.input));	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1430	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1431	[BUG]  [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(String.valueOf(input));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.toUpperCase(Locale.ENGLISH);  return  input!=  null?  null  :  input.toUpperCase(String.valueOf(input));	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1432	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  java.util.Locale.ENGLISH);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1433	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  java.util.Locale.US);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  java.util.Locale.US);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  java.util.Locale.US);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1434	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  4);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  4);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  4);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1435	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  1);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1436	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  3);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  3);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  3);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1437	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  2);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  2);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH,  2);	  String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1438	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	380	None	replace
1439	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	380	None	replace
1440	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Input  of  type "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Input  of  type "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Input  of  type "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	380	None	replace
1441	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	380	None	replace
1442	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1443	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1444	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1445	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1446	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1447	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1448	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  >=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  >=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  >=  0)  {  return  null;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	470	None	replace
1449	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	533	None	replace
1450	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	533	None	replace
1451	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    >=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1452	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  >=  null)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    >=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1453	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input).toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input).toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input).toUpperCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
1454	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input),  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input),  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(this,  String.valueOf(input),  java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
1455	[BUG]  [BUGGY]  input  =  super.toUpperCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  input  =  super.toUpperCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  super.toUpperCase();	  input    =    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	611	None	replace
1456	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  input.toUpperCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  input.toUpperCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  input.toUpperCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	611	None	replace
1457	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  input.toUpperCase();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  input.toUpperCase();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  input.toUpperCase();  }  else  {  return  null;  }	  input    =    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	611	None	replace
1458	[BUG]  [BUGGY]  input  =  super.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =  super.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  super.toUpperCase(java.util.Locale.ENGLISH);	  input    =    input.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	611	None	replace
1459	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
1460	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1461	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1462	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1463	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1464	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)!=  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1465	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(0)!=  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1466	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.length()  ==  1  ||  input.charAt(0)!=  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input.length()  ==  1  ||  input.charAt(0)!=  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input.length()  ==  1  ||  input.charAt(0)!=  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1467	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()!=  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()!=  0  ||  input.charAt(0)!=  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()!=  0  ||  input.charAt(0)!=  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	629	None	replace
1468	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	534	None	replace
1469	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	606	None	replace
1470	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	606	None	replace
1471	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(DoubleMetaphoneResult.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(DoubleMetaphoneResult.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(DoubleMetaphoneResult.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	606	None	replace
1472	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	606	None	replace
1473	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	606	None	replace
1474	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE);  }	  if(input    ==    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	606	None	replace
1475	[BUG]  [BUGGY]  final  static  DoubleMetaphone  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  static  DoubleMetaphone  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  static  DoubleMetaphone  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
1476	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "n "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "n "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "n "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput!=  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
1477	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput!=    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
1478	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(null,  null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(null,  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(null,  null);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	425	None	replace
1479	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "  +  input);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "  +  input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Invalid  local  input: "  +  input);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    output;    }    	non-compiled	[CE]  illegal  start  of  type	425	None	replace
1480	[BUG]  [BUGGY]  security(this,  input!=  null))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  security(this,  input!=  null))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	security(this,  input!=  null))  {  input  =  input.trim();  }	  security(this,    input!=    null))    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	411	None	replace
1481	[BUG]  [BUGGY]  security(this,  input!=  null))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  security(this,  input!=  null))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	security(this,  input!=  null))  {  input  =  input.trim();	  security(this,    input!=    null))    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	411	None	replace
1482	[BUG]  [BUGGY]  security(this,  input  ==  null))  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  security(this,  input  ==  null))  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	security(this,  input  ==  null))  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  security(this,    input!=    null))    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	411	None	replace
1483	[BUG]  [BUGGY]  Security(this,  input!=  null))  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Security(this,  input!=  null))  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Security(this,  input!=  null))  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  security(this,    input!=    null))    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	411	None	replace
1484	[BUG]  [BUGGY]  security(this,  input  ==  null))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  security(this,  input  ==  null))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	security(this,  input  ==  null))  {  input  =  input.trim();  }	  security(this,    input!=    null))    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	411	None	replace
1485	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1486	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1487	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1488	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1489	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Lo  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Lo	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1490	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1491	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Lo  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  cleanInput.setString(input.toUpperCase(java.util.Lo	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    cleanInput.setString(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	457	None	replace
1492	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	596	None	replace
1493	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	596	None	replace
1494	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  cleanInput();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  cleanInput();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  cleanInput();  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	596	None	replace
1495	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    cleanInput();    }    	non-compiled	[CE]  illegal  start  of  type	596	None	replace
1496	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	359	None	replace
1497	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	359	None	replace
1498	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toLowerCase(ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toLowerCase(ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toLowerCase(ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	498	None	replace
1499	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1500	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  }	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1501	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  true);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  true);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  true);	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1502	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH));	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1503	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH)+  1);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH)+  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH)+  1);	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1504	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  false);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  false);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  false);	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1505	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toLowerCase(Locale.ENGLISH));	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1506	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  0);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  0);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  0);	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1507	[BUG]  [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.length());  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  String>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.length());	  safeThan    <    String>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	439	None	replace
1508	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
1509	[BUG]  [BUGGY]  this.input  =  new  DoubleMetaphoneResult(this.input.toLowerCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  new  DoubleMetaphoneResult(this.input.toLowerCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  new  DoubleMetaphoneResult(this.input.toLowerCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
1510	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1511	[BUG]  [BUGGY]  if(input  ==  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1512	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1513	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1514	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  - "  +  input.toUpperCase(Locale.ENGLISH));  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1515	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(java.util.Lo  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(java.util.Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(java.util.Lo	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1516	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(java.util.Lo  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(java.util.Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(java.util.Lo	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    -   "    +    input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	401	None	replace
1517	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1518	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1519	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1520	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1521	[BUG]  [BUGGY]  safeThan(java.util.Locale.ENGLISH)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(java.util.Locale.ENGLISH)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(java.util.Locale.ENGLISH)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1522	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1523	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  >=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  >=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  >=  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	447	None	replace
1524	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1525	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  cleanInput  =  input;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1526	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  cleanInput  =  input.trim();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1527	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  locale.toLowerCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(input,  locale.toLowerCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(input,  locale.toLowerCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	195	None	replace
1528	[BUG]  [BUGGY]  safeIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1529	[BUG]  [BUGGY]  safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1530	[BUG]  [BUGGY]  safeIndex(input.length()  -  1)  <  =  0)  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(input.length()  -  1)  <  =  0)  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeIndex(input.length()  -  1)  <  =  0)  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1531	[BUG]  [BUGGY]  safeIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1532	[BUG]  [BUGGY]  safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1533	[BUG]  [BUGGY]  safeIndex(input.length()  -  1)  ==  0)  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(input.length()  -  1)  ==  0)  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeIndex(input.length()  -  1)  ==  0)  {  cleanInput  =  input.trim();  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1534	[BUG]  [BUGGY]  safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanupInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanupInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThanIndex(input.length()  -  1))  {  cleanInput  =  input.trim();  }  else  {  cleanupInput  =  null;  }	  if(input!=    null)    {    cleanInput    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	512	None	replace
1535	[BUG]  [BUGGY]  Parchet.checkState(input.length()  >  0);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  >  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  >  0);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1536	[BUG]  [BUGGY]  Parchet.checkState(input.length()  >=  0);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  >=  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  >=  0);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1537	[BUG]  [BUGGY]  Parchet.checkState(input.length()  ==  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  ==  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  ==  1);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1538	[BUG]  [BUGGY]  Parchet.checkState(input.length()  >>  0);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  >>  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  >>  0);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1539	[BUG]  [BUGGY]  Parchet.checkState(input.length()!=  1);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()!=  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()!=  1);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1540	[BUG]  [BUGGY]  Parchet.checkState(input.length()  [Delete]  0);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  [Delete]  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  [Delete]  0);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1541	[BUG]  [BUGGY]  Parchet.checkState(input.length()  <  0);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  <  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  <  0);	  Parchet.checkState(input.length()!=    0);    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1542	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
1543	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
1544	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
1545	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input    ==    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1546	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	346	None	replace
1547	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	346	None	replace
1548	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	514	None	replace
1549	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	514	None	replace
1550	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	514	None	replace
1551	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	514	None	replace
1552	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  }  else  {  cleanInput();  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	514	None	replace
1553	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput();  return  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	514	None	replace
1554	[BUG]  [BUGGY]  final  byte  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  byte  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  byte  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1555	[BUG]  [BUGGY]  final  Object  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  Object  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  Object  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1556	[BUG]  [BUGGY]  final  Object  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  Object  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  Object  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1557	[BUG]  [BUGGY]  final  char  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  char  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  char  input  =(input  ==  null)?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1558	[BUG]  [BUGGY]  final  char  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  char  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  char  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1559	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	628	None	replace
1560	[BUG]  [BUGGY]  Annotations.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Annotations.checkState(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.trim().length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	628	None	replace
1561	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  new  String(input.trim());  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  new  String(input.trim());  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  new  String(input.trim());  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
1562	[BUG]  [BUGGY]  while(cleanInput!=  null  &&  input.length()  >  0)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(cleanInput!=  null  &&  input.length()  >  0)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(cleanInput!=  null  &&  input.length()  >  0)  {  input  =  input.trim();  cleanInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
1563	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  cleanupInput  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  cleanupInput  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  cleanupInput  =  input.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    String    input    =    input.trim();    cleanInput    =    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
1564	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1565	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1566	[BUG]  [BUGGY]  if(Integer.toString(Locale.ENGLISH)!=  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(Integer.toString(Locale.ENGLISH)!=  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(Integer.toString(Locale.ENGLISH)!=  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1567	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1568	[BUG]  [BUGGY]  if(Integer.toString(Locale.ENGLISH)  ==  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(Integer.toString(Locale.ENGLISH)  ==  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(Integer.toString(Locale.ENGLISH)  ==  0)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1569	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  return  null;  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1570	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1571	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  return  null;  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1572	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(Integer.toString(Locale.ENGLISH));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(Integer.toString(Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	469	None	replace
1573	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1574	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1575	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1576	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1577	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1578	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getKey();  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getKey();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getKey();	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1579	[BUG]  [BUGGY]  Input  input  =(input  ==  null)?  null  :  input.getValue();  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =(input  ==  null)?  null  :  input.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =(input  ==  null)?  null  :  input.getValue();	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1580	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getValue()  +  1;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getValue()  +  1;	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1581	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getAsInput();  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getAsInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getAsInput();	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1582	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getValue(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getValue(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getValue(java.util.Locale.ENGLISH);	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1583	[BUG]  [BUGGY]  Input  input  =  super.cleanInput.getValue();  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.cleanInput.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.cleanInput.getValue();	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1584	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getParent();  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getParent();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getParent();	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1585	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.getValue()  + "n ";  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.getValue()  + "n ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.getValue()  + "n ";	  Input    input    =    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1586	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
1587	[BUG]  [BUGGY]  if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1588	[BUG]  [BUGGY]  if(this.getValue()  ==  null)  {  input  =  String.valueOf(this.getValue());  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.getValue()  ==  null)  {  input  =  String.valueOf(this.getValue());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.getValue()  ==  null)  {  input  =  String.valueOf(this.getValue());  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1589	[BUG]  [BUGGY]  if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1590	[BUG]  [BUGGY]  String  input  =  this.getValue();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.getValue();	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1591	[BUG]  [BUGGY]  if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.getValue()!=  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  return  null;  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1592	[BUG]  [BUGGY]  if(this.getValue()  ==  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.getValue()  ==  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.getValue()  ==  null)  {  input  =  String.valueOf(this.getValue());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1593	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.getValue());  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.getValue());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(this.getValue());  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1594	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.getValue());  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.getValue());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(this.getValue());  }	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1595	[BUG]  [BUGGY]  input  =  String.valueOf(this.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(this.getValue()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(this.getValue()  +  1);	  input    =    String.valueOf(this.getValue());    	non-compiled	[CE]  illegal  start  of  type	615	None	replace
1596	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	269	None	replace
1597	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	269	None	replace
1598	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	269	None	replace
1599	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Lo  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Lo	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1600	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1601	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.L  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.L  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.L	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1602	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Local  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Local  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Local	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1603	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1604	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ "  was  expecting  start  of  type  ' "  +  input.toUpperCase(  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ "  was  expecting  start  of  type  ' "  +  input.toUpperCase(  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ "  was  expecting  start  of  type  ' "  +  input.toUpperCase(	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1605	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1606	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Locale  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Locale  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java.util.Locale	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1607	[BUG]  [BUGGY]  input  =  this.input.trim()  + ",null ";  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.trim()  + ",null ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.trim()  + ",null ";	  input    =    this.input.trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1608	[BUG]  [BUGGY]  input  =  this.input.trim()  + ", ";  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.trim()  + ", ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.trim()  + ", ";	  input    =    this.input.trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1609	[BUG]  [BUGGY]  input  =  this.input.trim()  + "/ ";  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.trim()  + "/ ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.trim()  + "/ ";	  input    =    this.input.trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1610	[BUG]  [BUGGY]  input  =  this.input.trim()  + ";n ";  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.trim()  + ";n ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.trim()  + ";n ";	  input    =    this.input.trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1611	[BUG]  [BUGGY]  input  =  this.input.trim()  + "# ";  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.trim()  + "# ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.trim()  + "# ";	  input    =    this.input.trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1612	[BUG]  [BUGGY]  input  =  this.input.trim()  + "_ ";  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =  this.input.trim()  + "_ ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  this.input.trim()  + "_ ";	  input    =    this.input.trim()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
1613	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase());  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase());  }	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1614	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1615	[BUG]  [BUGGY]  mutableValues  =  String.valueOf(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableValues  =  String.valueOf(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableValues  =  String.valueOf(input.toLowerCase());	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1616	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(input,  String.valueOf(input.toLowerCase()));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(input,  String.valueOf(input.toLowerCase()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(input,  String.valueOf(input.toLowerCase()));	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1617	[BUG]  [BUGGY]  mutableValues(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableValues(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableValues(input.toLowerCase());	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1618	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toUpperCase());  }	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1619	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  String.valueOf(input.toLowerCase());	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
1620	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	440	None	replace
1621	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	440	None	replace
1622	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	440	None	replace
1623	[BUG]  [BUGGY]  Input  input  =(Input)this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =(Input)this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =(Input)this.cleanInput.toUpperCase(Locale.ENGLISH);	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	440	None	replace
1624	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH));  }	  if(this.cleanInput!=    null)    {    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	440	None	replace
1625	[BUG]  [BUGGY]  NullPointerException.println( "Invalid  local  input: "  +  input);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Invalid  local  input: "  +  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Invalid  local  input: "  +  input);	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	473	None	replace
1626	[BUG]  [BUGGY]  aughtException.withLocalMillis(input))  {  return  null;  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtException.withLocalMillis(input))  {  return  null;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.withLocalMillis(input))  {  return  null;	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	473	None	replace
1627	[BUG]  [BUGGY]  nisipToLastCase(String.valueOf(input))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(String.valueOf(input))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(String.valueOf(input))  {  input  =  input.trim();	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1628	[BUG]  [BUGGY]  nisipToLastCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(Locale.ENGLISH);	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1629	[BUG]  [BUGGY]  nisipToLastCase(Locale.ENGLISH,  input.length())  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(Locale.ENGLISH,  input.length())  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(Locale.ENGLISH,  input.length())  {  input  =  input.trim();	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1630	[BUG]  [BUGGY]  nisipToLastCase(input.trim());  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(input.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(input.trim());	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1631	[BUG]  [BUGGY]  nisipToLastCase(input  ==  null?  null  :  input.trim());  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(input  ==  null?  null  :  input.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(input  ==  null?  null  :  input.trim());	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1632	[BUG]  [BUGGY]  nisipToLastCase(Input.class)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(Input.class)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(Input.class)  {  input  =  input.trim();	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1633	[BUG]  [BUGGY]  nisipToLastCase(Locale.ENGLISH,  0)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(Locale.ENGLISH,  0)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(Locale.ENGLISH,  0)  {  input  =  input.trim();	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1634	[BUG]  [BUGGY]  nisipToLastCase(long)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(long)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(long)  {  input  =  input.trim();	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1635	[BUG]  [BUGGY]  nisipToLastCase(Locale.ENGLISH,  input.length()  -  1)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastCase(Locale.ENGLISH,  input.length()  -  1)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	nisipToLastCase(Locale.ENGLISH,  input.length()  -  1)  {  input  =  input.trim();	  nisipToLastCase(java.util.Locale.ENGLISH)    {    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	415	None	replace
1636	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.throwUnsupportedOperationException( " ");	  if(input    ==    null)    {    input    =    String.valueOf(input.toLowerCase());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
1637	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.trim());  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  String.valueOf(input.trim());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  String.valueOf(input.trim());  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
1638	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase();  }	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
1639	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1640	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1641	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1642	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1643	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1644	[BUG]  [BUGGY]  if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1645	[BUG]  [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1646	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1647	[BUG]  [BUGGY]  if(output!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(output!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(output!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1648	[BUG]  [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
1649	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
1650	[BUG]  [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&  input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
1651	[BUG]  [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
1652	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toUpperCase(	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
1653	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
1654	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
1655	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
1656	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
1657	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
1658	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  output.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  output.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  output.toLowerCase(Locale.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	374	None	replace
1659	[BUG]  [BUGGY]  String  input  =(input  >=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  >=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  >=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	374	None	replace
1660	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  Null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  Null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  Null  :  input.toLowerCase(Locale.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	374	None	replace
1661	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  Integer.toString(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  Integer.toString(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  Integer.toString(Locale.ENGLISH);	  char    input    =(input    ==    null)?    null    :    input.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	374	None	replace
1662	[BUG]  [BUGGY]  this.cleanInput  =(input  ==  null)?  null  :  input.toString();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =(input  ==  null)?  null  :  input.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =(input  ==  null)?  null  :  input.toString();	  input    =(input    ==    null)?    null    :    input.toString();    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
1663	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.toString()  + "n ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.toString()  + "n ";	  input    =(input    ==    null)?    null    :    input.toString();    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
1664	[BUG]  [BUGGY]  if(input  ==  null)return  null;  input  =  input.toString();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)return  null;  input  =  input.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)return  null;  input  =  input.toString();	  input    =(input    ==    null)?    null    :    input.toString();    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
1665	[BUG]  [BUGGY]  if(input!=  null)return  null;  input  =  input.toString();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)return  null;  input  =  input.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)return  null;  input  =  input.toString();	  input    =(input    ==    null)?    null    :    input.toString();    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
1666	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	579	None	replace
1667	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  input  =  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
1668	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
1669	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1670	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1671	[BUG]  [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(this.cleanInput!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1672	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(java.util.Locale.ENGLISH));  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	501	None	replace
1673	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(java.util.Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(java.util.Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(java.util.Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	501	None	replace
1674	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toUpperCase(Locale.ENGLISH));  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	501	None	replace
1675	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toLowerCase(java.util.Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toLowerCase(java.util.Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toLowerCase(java.util.Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	501	None	replace
1676	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(Locale.ENGLISH);  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	501	None	replace
1677	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	501	None	replace
1678	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1679	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	231	None	replace
1680	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	231	None	replace
1681	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input  >=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	231	None	replace
1682	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  >=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  >=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  >=  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	231	None	replace
1683	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  >=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  >=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  >=  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.trim();    if(input!=    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	231	None	replace
1684	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
1685	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
1686	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	564	None	replace
1687	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	564	None	replace
1688	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	564	None	replace
1689	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	564	None	replace
1690	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	564	None	replace
1691	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	564	None	replace
1692	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length()  -  1);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length()  -  1);	  Input    input    =    this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1693	[BUG]  [BUGGY]  Input  input  =  this.cleanInput!=  null?  null  :  this.cleanInput.trim();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput!=  null?  null  :  this.cleanInput.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput!=  null?  null  :  this.cleanInput.trim();	  Input    input    =    this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1694	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length());	  Input    input    =    this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1695	[BUG]  [BUGGY]  Input  input  =  super.cleanInput.trim();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.cleanInput.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.cleanInput.trim();	  Input    input    =    this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1696	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length()  -  2);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length()  -  2);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.substring(0,  this.cleanInput.length()  -  2);	  Input    input    =    this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1697	[BUG]  [BUGGY]  Input  input  =  this.cleanInput.substring(1);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.cleanInput.substring(1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.cleanInput.substring(1);	  Input    input    =    this.cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1698	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	563	None	replace
1699	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	563	None	replace
1700	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Boolean.TRUE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Boolean.TRUE);	  char    input    =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1701	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(JacksonLocale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(JacksonLocale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(JacksonLocale.ENGLISH);	  char    input    =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1702	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Boolean.FALSE);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Boolean.FALSE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Boolean.FALSE);	  char    input    =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1703	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(JavaLocale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(JavaLocale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(JavaLocale.ENGLISH);	  char    input    =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1704	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(JoinerLocale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(JoinerLocale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(JoinerLocale.ENGLISH);	  char    input    =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1705	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(org.apache.commons.security.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(org.apache.commons.security.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(org.apache.commons.security.Locale.ENGLISH);	  char    input    =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1706	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "  <   ",  input.length()));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "  <   ",  input.length()));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "  <   ",  input.length()));	  Parchet.checkState(input.startsWith(   "    <       "));    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
1707	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "  <   ").trim());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "  <   ").trim());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "  <   ").trim());	  Parchet.checkState(input.startsWith(   "    <       "));    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
1708	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "  <   "  +  input.length()  +   "));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "  <   "  +  input.length()  +   "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "  <   "  +  input.length()  +   "));	  Parchet.checkState(input.startsWith(   "    <       "));    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
1709	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "  <   "),  input.startsWith( "> "));  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "  <   "),  input.startsWith( "> "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "  <   "),  input.startsWith( "> "));	  Parchet.checkState(input.startsWith(   "    <       "));    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
1710	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( "  <   ");  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( "  <   ");  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( "  <   ");	  Parchet.checkState(input.startsWith(   "    <       "));    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
1711	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	619	None	replace
1712	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	619	None	replace
1713	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	619	None	replace
1714	[BUG]  [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(this.cleanInput!=  null)  {  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	619	None	replace
1715	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	619	None	replace
1716	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
1717	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
1718	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
1719	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
1720	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
1721	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.trim(),  input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1722	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1723	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1724	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1725	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  0);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  0);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1726	[BUG]  [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1727	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH,  true);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1728	[BUG]  [BUGGY]  final  DoubleMetaphone  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  DoubleMetaphone  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  DoubleMetaphone  cleanInput  =  new  DoubleMetaphone(input.toUpperCase(Locale.ENGLISH),  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphone(input.toUpperCase(java.util.Locale.ENGLISH),    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	403	None	replace
1729	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()!=    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	537	None	replace
1730	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()!=    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	537	None	replace
1731	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()!=    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	537	None	replace
1732	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()!=  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()!=    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	537	None	replace
1733	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    }    	non-compiled	[CE]  illegal  start  of  type	368	None	replace
1734	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    }    	non-compiled	[CE]  illegal  start  of  type	368	None	replace
1735	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    }    	non-compiled	[CE]  illegal  start  of  type	368	None	replace
1736	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    }    	non-compiled	[CE]  illegal  start  of  type	368	None	replace
1737	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toLowerCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    }    	non-compiled	[CE]  illegal  start  of  type	368	None	replace
1738	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    }    	non-compiled	[CE]  illegal  start  of  type	368	None	replace
1739	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "[ "  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "[ "  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "[ "  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "[   "    +    input.getClass().getName()    +   "=   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	324	None	replace
1740	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ ",[ "  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ ",[ "  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ ",[ "  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "[   "    +    input.getClass().getName()    +   "=   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	324	None	replace
1741	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "['  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "['  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "['  +  input.getClass().getName()  + "= "  +  input.toUpperCase(Locale.ENGLISH)+ "] ";	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "[   "    +    input.getClass().getName()    +   "=   "    +    input.toUpperCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	324	None	replace
1742	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1743	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1744	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1745	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1746	[BUG]  [BUGGY]  final  String  input  =  this.input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.input.toUpperCase(Locale.ENGLISH);	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1747	[BUG]  [BUGGY]  final  char  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  final  char  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  char  input  =  input.toUpperCase(Locale.ENGLISH);	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1748	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1749	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1750	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1751	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	574	None	replace
1752	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	574	None	replace
1753	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	574	None	replace
1754	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	574	None	replace
1755	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	574	None	replace
1756	[BUG]  [BUGGY]  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	574	None	replace
1757	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	327	None	replace
1758	[BUG]  [BUGGY]  final  static  DoubleMetaphone  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  static  DoubleMetaphone  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  static  DoubleMetaphone  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "- "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	327	None	replace
1759	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "n "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "n "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getNativeType(DOUBLE_TYPE)+ "n "  +  input.toUpperCase(Locale.ENGLISH);  if(cleanInput  ==  null)  {  input  =  input.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    getNativeType(DOUBLE_TYPE)+   "-   "    +    input.toUpperCase(java.util.Locale.ENGLISH);    if(cleanInput    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	327	None	replace
1760	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE);	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1761	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1762	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE));	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1763	[BUG]  [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1764	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  return  null;  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  return  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  return  null;	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1765	[BUG]  [BUGGY]  safeThan  =  isEnabled(Feature.QUOTE_NON_NULL_VALUE);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  isEnabled(Feature.QUOTE_NON_NULL_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  isEnabled(Feature.QUOTE_NON_NULL_VALUE);	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1766	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  null;  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  null;	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1767	[BUG]  [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE);	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1768	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	427	None	replace
1769	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.String.valueOf(input),  null);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(java.util.String.valueOf(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(java.util.String.valueOf(input),  null);	  aughtExceptionHandler.handleMissingName(java.util.String.valueOf(input));    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
1770	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(null,  String.valueOf(input));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(null,  String.valueOf(input));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(null,  String.valueOf(input));	  aughtExceptionHandler.handleMissingName(java.util.String.valueOf(input));    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
1771	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(String.valueOf(input),  null);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(String.valueOf(input),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(String.valueOf(input),  null);	  aughtExceptionHandler.handleMissingName(java.util.String.valueOf(input));    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
1772	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toLowerCase(Locale.ENGLISH);  }  else  {  return  input;  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1773	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
1774	[BUG]  [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(input  ==  null)?  null  :  input.toLowerCase(Locale.ENGLISH,  true);	  String    input    =(input    ==    null)?    null    :    input.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
1775	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(this.null);  }	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1776	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.null);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(this.null);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(this.null);  }	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1777	[BUG]  [BUGGY]  if(this.null!=  null)  {  input  =  String.valueOf(this.null);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.null!=  null)  {  input  =  String.valueOf(this.null);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.null!=  null)  {  input  =  String.valueOf(this.null);  }	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1778	[BUG]  [BUGGY]  if(this.null!=  input.length())  {  input  =  String.valueOf(this.null);  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.null!=  input.length())  {  input  =  String.valueOf(this.null);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.null!=  input.length())  {  input  =  String.valueOf(this.null);  }	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1779	[BUG]  [BUGGY]  input  =  String.valueOf(this.null,  java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(this.null,  java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(this.null,  java.util.Locale.ENGLISH);	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1780	[BUG]  [BUGGY]  String  input  =  this.null;  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.null;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.null;	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1781	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  else  {  return  null;  }	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1782	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(this.null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(this.null);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
1783	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1784	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1785	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1786	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toLowerCase(locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toLowerCase(locale.ENGLISH);	  if(input!=    null)    {    input    =    StringMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	394	None	replace
1787	[BUG]  [BUGGY]  input  =  String.valueOf(input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.length()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.length()  -  1);	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1788	[BUG]  [BUGGY]  input  =  String.valueOf(input.length()  +  1);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.length()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.length()  +  1);	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1789	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.length());  }	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1790	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.length());  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.length());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.length());  }	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1791	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1792	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.length());  }  else  {  return  null;  }	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1793	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1794	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1795	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1796	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(input    ==    null)    {    input    =    this.input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1797	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
1798	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  cleanInput  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
1799	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
1800	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  cleanInput  =  input.trim();  }	  mutableFor(input!=    null)    {    input    =    input.trim();    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
1801	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  String.valueOf(input.toLowerCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  String.valueOf(input.toLowerCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  String.valueOf(input.toLowerCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1802	[BUG]  [BUGGY]  Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toLowerCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toLowerCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  input.toLowerCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1803	[BUG]  [BUGGY]  Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toLowerCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toLowerCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Object  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toLowerCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1804	[BUG]  [BUGGY]  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  input.toLowerCase(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  input.toLowerCase(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableString  input  =  input.toUpperCase(Locale.ENGLISH)+ "[ "  +  input.toLowerCase(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1805	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  locale.toLowerCase(Locale.ENGLISH)+   "] ";  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  locale.toLowerCase(Locale.ENGLISH)+   "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  locale.toLowerCase(Locale.ENGLISH)+   "] ";  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1806	[BUG]  [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UUID.toLowerCase(Locale.ENGLISH)+ "] ";  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UUID.toLowerCase(Locale.ENGLISH)+ "] ";  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  MutableString  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  UUID.toLowerCase(Locale.ENGLISH)+ "] ";  }	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1807	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH)+ "[ "  +  Integer.toString(Locale.ENGLISH)+ "] ";	  MutableString    input    =    input.toLowerCase(java.util.Locale.ENGLISH)+   "[   "    +    input.toLowerCase(java.util.Locale.ENGLISH)+   "]   ";    	non-compiled	[CE]  illegal  start  of  type	506	None	replace
1808	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(InputStream.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(InputStream.ENGLISH,  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(InputStream.ENGLISH,  input);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    input);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1809	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Input.ENGLISH,  input);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Input.ENGLISH,  input);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Input.ENGLISH,  input);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    input);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1810	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input,  false);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input,  false);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    input);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1811	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input,  null);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  input,  null);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    input);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1812	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(Locale.ENGLISH,  input,  false);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(Locale.ENGLISH,  input,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(Locale.ENGLISH,  input,  false);	  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,    input);    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1813	[BUG]  [BUGGY]  static  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	478	None	replace
1814	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  if(input!=  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	478	None	replace
1815	[BUG]  [BUGGY]  static  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	478	None	replace
1816	[BUG]  [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1817	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1818	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(cleanInput.toUpperCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(cleanInput.toUpperCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(cleanInput.toUpperCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1819	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult();  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult();  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult();  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1820	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(cleanInput.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(cleanInput.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult(cleanInput.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1821	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1822	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toLowerCase());  }  else  {  return  cleanInput.toUpperCase(ENGLISH);  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    return    cleanInput.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	610	None	replace
1823	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1824	[BUG]  [BUGGY]  mutableTo(input)  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  DoubleMetaphoneResult.UNDEFINED;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNDEFINED;    }    	non-compiled	[CE]  illegal  start  of  type	417	None	replace
1825	[BUG]  [BUGGY]  MutableTo(input)  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  DoubleMetaphoneResult.UNDEFINED;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNDEFINED;    }    	non-compiled	[CE]  illegal  start  of  type	417	None	replace
1826	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNDEFINED;    }    	non-compiled	[CE]  illegal  start  of  type	417	None	replace
1827	[BUG]  [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNDEFINED;    }    	non-compiled	[CE]  illegal  start  of  type	417	None	replace
1828	[BUG]  [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.UNDEFINED;  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.UNDEFINED;  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  input  =  DoubleMetaphoneResult.UNDEFINED;  }  else  {  return  DoubleMetaphoneResult.UNDEFINED;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNDEFINED;    }    	non-compiled	[CE]  illegal  start  of  type	417	None	replace
1829	[BUG]  [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.UNDEFINED;  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.UNDEFINED;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  input  =  DoubleMetaphoneResult.UNDEFINED;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNDEFINED;    }    	non-compiled	[CE]  illegal  start  of  type	417	None	replace
1830	[BUG]  [BUGGY]  mutableTo(input)  {  return  DoubleMetaphoneResult.EMPTY;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  DoubleMetaphoneResult.EMPTY;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  DoubleMetaphoneResult.EMPTY;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	416	None	replace
1831	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	416	None	replace
1832	[BUG]  [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  input.trim();  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	416	None	replace
1833	[BUG]  [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.EMPTY;  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.EMPTY;  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  input  =  DoubleMetaphoneResult.EMPTY;  }  else  {  return  DoubleMetaphoneResult.EMPTY;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	416	None	replace
1834	[BUG]  [BUGGY]  MutableTo(input)  {  return  DoubleMetaphoneResult.EMPTY;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  DoubleMetaphoneResult.EMPTY;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  DoubleMetaphoneResult.EMPTY;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	416	None	replace
1835	[BUG]  [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.EMPTY;  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  input  =  DoubleMetaphoneResult.EMPTY;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  input  =  DoubleMetaphoneResult.EMPTY;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.EMPTY;    }    	non-compiled	[CE]  illegal  start  of  type	416	None	replace
1836	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1837	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1838	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1839	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1840	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1841	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1842	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1843	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null    ||    input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	552	None	replace
1844	[BUG]  [BUGGY]  char  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input!=  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  String    input    =(input!=    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    	non-compiled	[CE]  illegal  start  of  type	589	None	replace
1845	[BUG]  [BUGGY]  input  =(this.input!=  null)?  null  :  this.input.toLowerCase();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  input  =(this.input!=  null)?  null  :  this.input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(this.input!=  null)?  null  :  this.input.toLowerCase();	  input    =    this.input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
1846	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  this.input.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  this.input.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  this.input.toLowerCase();  }	  input    =    this.input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
1847	[BUG]  [BUGGY]  char  input  =(input!=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(input!=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(input!=  null)?  null  :  input.toLowerCase(Locale.ENGLISH);	  String    input    =(input!=    null)?    null    :    input.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1848	[BUG]  [BUGGY]  input  =  String.valueOf(input.substring(0,  input.length()  -  1));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.substring(0,  input.length()  -  1));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.substring(0,  input.length()  -  1));	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1849	[BUG]  [BUGGY]  input  =  String.valueOf(input.substring(2));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.substring(2));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.substring(2));	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1850	[BUG]  [BUGGY]  input  =  String.valueOf(input.substring(1),  input.length());  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.substring(1),  input.length());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.substring(1),  input.length());	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1851	[BUG]  [BUGGY]  input  =  String.valueOf(input.substring(0,  input.length()));  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.substring(0,  input.length()));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.substring(0,  input.length()));	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1852	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.substring(1));  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.substring(1));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.substring(1));  }	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1853	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.substring(1));  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.substring(1));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.substring(1));  }	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1854	[BUG]  [BUGGY]  input  =  String.valueOf(input.substring(1),  input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.substring(1),  input.length()  -  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.substring(1),  input.length()  -  1);	  input    =    String.valueOf(input.substring(1));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1855	[BUG]  [BUGGY]  Parchet.checkState(input.length()  ==  0  ||  input.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  ==  0  ||  input.length()  ==  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  ==  0  ||  input.length()  ==  0);	  Parchet.checkState(input.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
1856	[BUG]  [BUGGY]  Parchet.checkState(input.length()  ==  2);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  ==  2);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  ==  2);	  Parchet.checkState(input.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
1857	[BUG]  [BUGGY]  Parchet.checkState(input.length()  >=  1);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.length()  >=  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.length()  >=  1);	  Parchet.checkState(input.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
1858	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "/ ";  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "/ ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  + "/ ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1859	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "_ ";  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "_ ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  + "_ ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1860	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + ", ";  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + ", ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  + ", ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1861	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "] ";  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "] ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  + "] ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1862	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "   ";  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + "   ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  + "   ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1863	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  /   "n ";  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  /   "n ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  /   "n ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1864	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + ": ";  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  + ": ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  + ": ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1865	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getValue()  /   "null ";  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getValue()  /   "null ";  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getValue()  /   "null ";	  String    input    =(String)this.cleanInput.getValue()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1866	[BUG]  [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(java.util.Locale.ENGLISH!=  null)  {  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(java.util.Locale.ENGLISH!=  null)  {  if(input  ==  null)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1867	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	335	None	replace
1868	[BUG]  [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	335	None	replace
1869	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input  ==  null)  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	335	None	replace
1870	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	335	None	replace
1871	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	335	None	replace
1872	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  null;  }	  if(cleanInput    ==    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	535	None	replace
1873	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	577	None	replace
1874	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	577	None	replace
1875	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	577	None	replace
1876	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	577	None	replace
1877	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	577	None	replace
1878	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	577	None	replace
1879	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toString());  }	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1880	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toString());  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toString());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toString());  }	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1881	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1882	[BUG]  [BUGGY]  input  =  String.valueOf(input.toString()  +  1);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toString()  +  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toString()  +  1);	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1883	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.toString());  }  else  {  return  null;  }	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1884	[BUG]  [BUGGY]  String  input  =  input.toString();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toString();	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1885	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  input    =    String.valueOf(input.toString());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1886	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
1887	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  cleanInput  =  input;  }  else  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
1888	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class))  {  input  =  input.trim();  }  else  if(input!=  null)  {  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	333	None	replace
1889	[BUG]  [BUGGY]  Parchet.checkState(input.trim().equals( "null "));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.trim().equals( "null "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.trim().equals( "null "));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1890	[BUG]  [BUGGY]  Parchet.checkState(input.equals( ",null "));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.equals( ",null "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.equals( ",null "));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1891	[BUG]  [BUGGY]  Parchet.checkState(input.equals( "true "));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.equals( "true "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.equals( "true "));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1892	[BUG]  [BUGGY]  Parchet.checkState(input.equals( "null ",  input.trim()));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.equals( "null ",  input.trim()));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.equals( "null ",  input.trim()));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1893	[BUG]  [BUGGY]  Parchet.checkState(input.equals( ".null "));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.equals( ".null "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.equals( ".null "));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1894	[BUG]  [BUGGY]  Parchet.checkState(input.equals( "Null "));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.equals( "Null "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.equals( "Null "));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1895	[BUG]  [BUGGY]  Parchet.checkState(input.equals( "null ",  null));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.equals( "null ",  null));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.equals( "null ",  null));	  Parchet.checkState(input.equals(   "null   "));    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
1896	[BUG]  [BUGGY]  if(input!=  null)  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1897	[BUG]  [BUGGY]  final  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =(String)this.cleanInput.toLowerCase(Locale.ENGLISH);  if(input  ==  null)  {  return  null;  }	  final    String    input    =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	344	None	replace
1898	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	559	None	replace
1899	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input  >=  null)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input!=    null)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	559	None	replace
1900	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(DoubleMetaphoneResult.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(DoubleMetaphoneResult.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(DoubleMetaphoneResult.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	605	None	replace
1901	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	605	None	replace
1902	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.trim();  }  else  {  return  DoubleMetaphoneResult.toUpperCase(Boolean.FALSE);  }	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	605	None	replace
1903	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Boolean.TRUE).toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.trim();    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	605	None	replace
1904	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.elementAt(0);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.elementAt(0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.elementAt(0);	  String    input    =(String)this.cleanInput.removeValue();    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1905	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Metaphone  error: "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ "  - "  +  input.toUpperCase(	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	614	None	replace
1906	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter  for  path: "  +  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter  for  path: "  +  input.toUpperCase(java.util.Locale.  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH, "Unknown  parameter  for  path: "  +  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	614	None	replace
1907	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	390	None	replace
1908	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  return  DoubleMetaphoneResult.toLowerCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	390	None	replace
1909	[BUG]  [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  &&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input!=  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toLowerCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	390	None	replace
1910	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
1911	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  if(input  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  if(input  ==  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  if(input  ==  null)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
1912	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null  ||  input.length()  ==  0)  {  return  null;  }	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    if(input    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
1913	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1914	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1915	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1916	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1917	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1918	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1919	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toLowerCase(Locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1920	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(locale.ENGLISH)!=  false)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(locale.ENGLISH)!=  false)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0  ||  input.toUpperCase(locale.ENGLISH)!=  false)  {  return  null;  }	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0    ||    input.toUpperCase(java.util.Locale.ENGLISH)!=    false)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	588	None	replace
1921	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.getClass().getName()));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.getClass().getName()));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.getClass().getName()));	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	354	None	replace
1922	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  null).throwException( " ");  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH,  null).throwException( " ");  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH,  null).throwException( " ");	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	354	None	replace
1923	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.getClass().getName());  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.getClass().getName());  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.getClass().getName());	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	354	None	replace
1924	[BUG]  [BUGGY]  Input  input  =  this.input.trim();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.trim();	  if(input!=    null)    {    input    =    this.input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1925	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  this.input.trim();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  this.input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  this.input.trim();  }	  if(input!=    null)    {    input    =    this.input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1926	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  this.input.trim();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  input  =  this.input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0)  {  input  =  this.input.trim();  }	  if(input!=    null)    {    input    =    this.input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1927	[BUG]  [BUGGY]  this.input  =  new  DoubleMetaphoneResult(this.input.trim());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  new  DoubleMetaphoneResult(this.input.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  new  DoubleMetaphoneResult(this.input.trim());	  if(input!=    null)    {    input    =    this.input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1928	[BUG]  [BUGGY]  this.input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  input.trim();	  if(input!=    null)    {    input    =    this.input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1929	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  this.input.toString();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  this.input.toString();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  this.input.toString();  }	  if(input!=    null)    {    input    =    this.input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1930	[BUG]  [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	456	None	replace
1931	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1932	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1933	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1934	[BUG]  [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(!cleanInput)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1935	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1936	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1937	[BUG]  [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  if(input!=  null)  {  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(!cleanInput)    {    if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	382	None	replace
1938	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
1939	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
1940	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
1941	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue( "Unknown  type ");  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue( "Unknown  type ");  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue( "Unknown  type ");	  if(input    ==    null)    {    input    =(input!=    null)?    null    :    input.trim();    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	556	None	replace
1942	[BUG]  [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
1943	[BUG]  [BUGGY]  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1944	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1945	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1946	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1947	[BUG]  [BUGGY]  final  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1948	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  new  String(Input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  new  String(Input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  new  String(Input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1949	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  new  String(Input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  new  String(Input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  new  String(Input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input;  }	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1950	[BUG]  [BUGGY]  this.cleanInput  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  this.cleanInput  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.cleanInput  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH);	  if(this.cleanInput!=    null)    {    String    input    =    new    String(this.cleanInput.toUpperCase(Locale.ENGLISH);    cleanInput    =    input;    }    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1951	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  input.trim();  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  input.trim();  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	586	None	replace
1952	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.length());  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.length());  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	586	None	replace
1953	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.length());  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  String.valueOf(input.length());  if(input!=  null)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  String.valueOf(input.length());  if(input!=  null)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.trim();    if(input!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	586	None	replace
1954	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	510	None	replace
1955	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  new  DoubleMetaphoneResult().toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	510	None	replace
1956	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	510	None	replace
1957	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  }  else  {  cleanInput  =  null;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    cleanInput    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	510	None	replace
1958	[BUG]  [BUGGY]  final  byte  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  byte  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  byte  input  =(input  ==  null)?  null  :  input.toUpperCase(Locale.ENGLISH);	  final    String    input    =(input    ==    null)?    null    :    input.toUpperCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	372	None	replace
1959	[BUG]  [BUGGY]  while(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	while(input!=  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
1960	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
1961	[BUG]  [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanupInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanupInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput!=  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  cleanupInput  =  input.trim();  }	  if(input!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    cleanInput    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
1962	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1963	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1964	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1965	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1966	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH);  cleanInput  =  input.trim();  }	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1967	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH));  cleanInput  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH));  cleanInput  =  input.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  new  String(this.cleanInput.toUpperCase(Locale.ENGLISH));  cleanInput  =  input.trim();  }	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    cleanInput    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1968	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1969	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1970	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1971	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1972	[BUG]  [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                  NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1973	[BUG]  [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                    NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1974	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1975	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                        NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1976	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1977	[BUG]  [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	432	None	replace
1978	[BUG]  [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	432	None	replace
1979	[BUG]  [BUGGY]  safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(NullPointerException)&&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	432	None	replace
1980	[BUG]  [BUGGY]  safeThan(null,  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan(null,  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(null,  nullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	432	None	replace
1981	[BUG]  [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  =  NullPointerException  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  input  =  input.trim();  }	  safeThan    <    NullPointerException    &&    isEnabled(Feature.QUOTE_NON_NULL_VALUE))    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	432	None	replace
1982	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1983	[BUG]  [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1984	[BUG]  [BUGGY]  if(input!=  null)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1985	[BUG]  [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toUpperCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toUpperCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1986	[BUG]  [BUGGY]  return  this.cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  return  this.cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  this.cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1987	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  }  else  {  return  null;  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1988	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  return  cleanInput.toUpperCase(Locale.ENGLISH)+  String.valueOf(input.toUpperCase(Locale.ENGLISH));  }	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1989	[BUG]  [BUGGY]  return  super.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  return  super.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  super.toUpperCase(Locale.ENGLISH)+  input.toUpperCase(Locale.ENGLISH);	  return    cleanInput.toUpperCase(java.util.Locale.ENGLISH)+    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	486	None	replace
1990	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1991	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1992	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1993	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input  ==  null)  {  return  DoubleMetaphoneResult.NULL;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input    ==    null)    {    return    DoubleMetaphoneResult.NULL;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
1994	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1995	[BUG]  [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.input!=  null)  {  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.input!=  null)  {  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    this.input.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1996	[BUG]  [BUGGY]  final  String  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.input.toLowerCase(java.util.Locale.ENGLISH);	  if(input!=    null)    {    input    =    this.input.toLowerCase(java.util.Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1997	[BUG]  [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  static  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	static  final  String  input  =(input  ==  null)?  null  :  input.toLowerCase();	  input    =(input    ==    null)?    null    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	274	None	replace
1998	[BUG]  [BUGGY]  if(input  ==  null)return  null;  input  =  input.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)return  null;  input  =  input.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)return  null;  input  =  input.toLowerCase();  }	  input    =(input    ==    null)?    null    :    input.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	274	None	replace
1999	[BUG]  [BUGGY]  mutableTo(input)  {  return  new  DoubleMetaphoneResult(input.trim());  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  new  DoubleMetaphoneResult(input.trim());  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  new  DoubleMetaphoneResult(input.trim());  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	450	None	replace
2000	[BUG]  [BUGGY]  mutableTo(input)  {  return  null;  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  null;  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  null;  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	450	None	replace
2001	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  if(input.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	450	None	replace
2002	[BUG]  [BUGGY]  mutableTo(input)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	450	None	replace
2003	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	450	None	replace
2004	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  DoubleMetaphoneResult.UNKNOWN;  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	497	None	replace
2005	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(java.util.Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	497	None	replace
2006	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  String.valueOf(input.charAt(0)).toUpperCase(Locale.ENGLISH);  }	  if(input!=    null)    {    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	497	None	replace
2007	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()  ==  0)  {  return  null;  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	395	None	replace
2008	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input!=  null)  {  if(input.length()  ==  0)  {  return  null;  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	395	None	replace
2009	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(java.util.Locale.ENGLISH)+ "  if(input  ==  null)  {  if(input.length()!=  0)  {  return  null;  }	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    if(input    ==    null)    {    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	395	None	replace
2010	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(this.cleanInput);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(this.cleanInput);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(this.cleanInput);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2011	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(this.null);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(this.null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(this.null);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2012	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(getInput());  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(getInput());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingName(getInput());	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2013	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(String.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2014	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Boolean.TRUE);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Boolean.TRUE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(Boolean.TRUE);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2015	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Boolean.FALSE);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(Boolean.FALSE);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(Boolean.FALSE);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2016	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.redeclaration.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.redeclaration.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(org.apache.commons.redeclaration.Locale.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2017	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.core.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.core.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(org.apache.commons.core.Locale.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2018	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.security.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.security.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(org.apache.commons.security.Locale.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2019	[BUG]  [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.redefinition.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  this.cleanInput.toUpperCase(org.apache.commons.redefinition.Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  this.cleanInput.toUpperCase(org.apache.commons.redefinition.Locale.ENGLISH);	  char    input    =    this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2020	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	519	None	replace
2021	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.ENGLISH)  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.ENGLISH)  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.ENGLISH)	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	519	None	replace
2022	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,   "Could  not  parse  DoubleMetaphoneResult: "  +  input.toUpperCase(java.util.Locale.	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	519	None	replace
2023	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
2024	[BUG]  [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    CleanInput    <    String>    input    =    cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	459	None	replace
2025	[BUG]  [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    CleanInput    <    String>    input    =    cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	459	None	replace
2026	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    CleanInput    <    String>    input    =    cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	459	None	replace
2027	[BUG]  [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    CleanInput    <    String>    input    =    cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	459	None	replace
2028	[BUG]  [BUGGY]  if(!safeThan)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!safeThan)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!safeThan)  {  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.ENGLISH);  CleanInput  <  String>  input  =  cleanInput.trim();  }	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    CleanInput    <    String>    input    =    cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	459	None	replace
2029	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.US);  CleanInput  <  String>  input  =  cleanInput.trim();  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.US);  CleanInput  <  String>  input  =  cleanInput.trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  new  DoubleMetaphoneResult(this,  java.util.Locale.US);  CleanInput  <  String>  input  =  cleanInput.trim();	  safeThan    <    DoubleMetaphone>    cleanInput    =    new    DoubleMetaphoneResult(this,    java.util.Locale.ENGLISH);    CleanInput    <    String>    input    =    cleanInput.trim();    	non-compiled	[CE]  illegal  start  of  type	459	None	replace
2030	[BUG]  [BUGGY]  char  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toUpperCase(Locale.ENGLISH);	  String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	549	None	replace
2031	[BUG]  [BUGGY]  byte  input  =  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  byte  input  =  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	byte  input  =  input.toUpperCase(Locale.ENGLISH);	  String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	549	None	replace
2032	[BUG]  [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  input.toLowerCase(Locale.ENGLISH);	  String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	549	None	replace
2033	[BUG]  [BUGGY]  byte  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  byte  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	byte  input  =  input.toUpperCase(java.util.Locale.ENGLISH);	  String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	549	None	replace
2034	[BUG]  [BUGGY]  input  =  String.valueOf(Input.toLowerCase());  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(Input.toLowerCase());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(Input.toLowerCase());	  input    =    String.valueOf(input.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
2035	[BUG]  [BUGGY]  input  =  String.valueOf(input.toLowerCase(),  1);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toLowerCase(),  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toLowerCase(),  1);	  input    =    String.valueOf(input.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
2036	[BUG]  [BUGGY]  input  =  String.valueOf(input.toLowerCase())+  1;  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  input  =  String.valueOf(input.toLowerCase())+  1;  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  String.valueOf(input.toLowerCase())+  1;	  input    =    String.valueOf(input.toLowerCase()    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
2037	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2038	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2039	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2040	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  NullPointerException.class)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2041	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2042	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  this.input.trim();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input!=    null)    {    input    =    this.input.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2043	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( ".js "));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( ".js "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( ".js "));	  Parchet.checkState(input.startsWith(   "#   "));    	non-compiled	[CE]  illegal  start  of  type	295	None	replace
2044	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( ".* "));  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( ".* "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( ".* "));	  Parchet.checkState(input.startsWith(   "#   "));    	non-compiled	[CE]  illegal  start  of  type	295	None	replace
2045	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( ".# "));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( ".# "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( ".# "));	  Parchet.checkState(input.startsWith(   "#   "));    	non-compiled	[CE]  illegal  start  of  type	295	None	replace
2046	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( ",# "));  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( ",# "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( ",# "));	  Parchet.checkState(input.startsWith(   "#   "));    	non-compiled	[CE]  illegal  start  of  type	295	None	replace
2047	[BUG]  [BUGGY]  Parchet.checkState(input.startsWith( ".prototype "));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.startsWith( ".prototype "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.startsWith( ".prototype "));	  Parchet.checkState(input.startsWith(   "#   "));    	non-compiled	[CE]  illegal  start  of  type	295	None	replace
2048	[BUG]  [BUGGY]  Parchet.checkState(input.endsWith( "#   "));  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(input.endsWith( "#   "));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Parchet.checkState(input.endsWith( "#   "));	  Parchet.checkState(input.startsWith(   "#   "));    	non-compiled	[CE]  illegal  start  of  type	295	None	replace
2049	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
2050	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toLowerCase();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
2051	[BUG]  [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input!=  null)  {  input  =  input.toLowerCase();  }  else  if(input.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(input!=    null)    {    input    =    input.toLowerCase();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
2052	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.getKey();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.getKey();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.getKey();	  input    =(input    ==    null)?    null    :    input.getValue();    	non-compiled	[CE]  illegal  start  of  type	278	None	replace
2053	[BUG]  [BUGGY]  input  =(input!=  null)?  null  :  input.getValue();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  input  =(input!=  null)?  null  :  input.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input!=  null)?  null  :  input.getValue();	  input    =(input    ==    null)?    null    :    input.getValue();    	non-compiled	[CE]  illegal  start  of  type	278	None	replace
2054	[BUG]  [BUGGY]  input  =(input!=  null)?  null  :  input.getKey();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  input  =(input!=  null)?  null  :  input.getKey();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input!=  null)?  null  :  input.getKey();	  input    =(input    ==    null)?    null    :    input.getValue();    	non-compiled	[CE]  illegal  start  of  type	278	None	replace
2055	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.getClass().getName();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.getClass().getName();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.getClass().getName();	  input    =(input    ==    null)?    null    :    input.getValue();    	non-compiled	[CE]  illegal  start  of  type	278	None	replace
2056	[BUG]  [BUGGY]  input  =(input  ==  null)?  null  :  input.getString();  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  input  =(input  ==  null)?  null  :  input.getString();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =(input  ==  null)?  null  :  input.getString();	  input    =(input    ==    null)?    null    :    input.getValue();    	non-compiled	[CE]  illegal  start  of  type	278	None	replace
2057	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);	  mutableFor(input    ==    null)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
2058	[BUG]  [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
2059	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2060	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2061	[BUG]  [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  }  else  {  cleanInput();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2062	[BUG]  [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input,  nullPointerException.class)  {  input  =  input.trim();  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2063	[BUG]  [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  ==  NullPointerException.class)  {  input  =  input.trim();  return  null;  }	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2064	[BUG]  [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input)  <  NullPointerException.class)  {  input  =  input.trim();	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2065	[BUG]  [BUGGY]  &&(input  ==  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  &&(input  ==  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&(input  ==  null  ||  input.length()  ==  0))  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	480	None	replace
2066	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	480	None	replace
2067	[BUG]  [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  &&  input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	&&  input!=  null)  {  input  =  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH    	non-compiled	[CE]  illegal  start  of  type	480	None	replace
2068	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getRawData();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getRawData();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getRawData();	  String    input    =(String)this.cleanInput.getData();    	non-compiled	[CE]  illegal  start  of  type	546	None	replace
2069	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.getShortData();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.getShortData();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.getShortData();	  String    input    =(String)this.cleanInput.getData();    	non-compiled	[CE]  illegal  start  of  type	546	None	replace
2070	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toArray();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toArray();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toArray();	  String    input    =(String)this.cleanInput.getData();    	non-compiled	[CE]  illegal  start  of  type	546	None	replace
2071	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(java.util.Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2072	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(java.util.Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2073	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2074	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(locale.ENGLISH);	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2075	[BUG]  [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(System.getProperty( "line.separator "));  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(System.getProperty( "line.separator "));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH).toUpperCase(System.getProperty( "line.separator "));	  if(input    ==    null)    {    input    =    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    else    {    return    DoubleMetaphoneResult.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2076	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  if(input!=  null)  {  input  =  input.trim();  }	  mutableFor(input!=    null)    {    if(input    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2077	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  if(input  ==  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  if(input  ==  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  if(input  ==  null)  {  input  =  input.trim();  }	  mutableFor(input!=    null)    {    if(input    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2078	[BUG]  [BUGGY]  MutableFor(input!=  null)  {  if(input!=  null)  {  input  =  input.trim();  }  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input!=  null)  {  if(input!=  null)  {  input  =  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input!=  null)  {  if(input!=  null)  {  input  =  input.trim();  }	  mutableFor(input!=    null)    {    if(input    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2079	[BUG]  [BUGGY]  MutableFor(input  ==  null)  {  if(input!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  MutableFor(input  ==  null)  {  if(input!=  null)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableFor(input  ==  null)  {  if(input!=  null)  {  return  null;  }	  mutableFor(input!=    null)    {    if(input    ==    null)    {    input    =    input.trim();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2080	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
2081	[BUG]  [BUGGY]  return  input  ==  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return  input  ==  null?  null  :  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input  ==  null?  null  :  input.toUpperCase(Locale.ENGLISH);	  return    input!=    null?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	612	None	replace
2082	[BUG]  [BUGGY]  if(input!=  null)  {  return  null?  null  :  input.toUpperCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  return  null?  null  :  input.toUpperCase(Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  return  null?  null  :  input.toUpperCase(Locale.ENGLISH);  }	  return    input!=    null?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	612	None	replace
2083	[BUG]  [BUGGY]  return  input  ==  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  input  ==  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input  ==  null?  null  :  input.toUpperCase(java.util.Locale.ENGLISH);	  return    input!=    null?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	612	None	replace
2084	[BUG]  [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(String.valueOf(input.charAt(0)));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(String.valueOf(input.charAt(0)));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input!=  null?  null  :  input.toUpperCase(String.valueOf(input.charAt(0)));	  return    input!=    null?    null    :    input.toUpperCase(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	612	None	replace
2085	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH).trim();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH).trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(Locale.ENGLISH).trim();	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2086	[BUG]  [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(char)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(char)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2087	[BUG]  [BUGGY]  char  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2088	[BUG]  [BUGGY]  char  input  =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  char  input  =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	char  input  =(int)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2089	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH).trim();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH).trim();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toLowerCase(java.util.Locale.ENGLISH).trim();	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2090	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH),  0);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH),  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH),  0);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2091	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH),  null);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH),  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH),  null);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2092	[BUG]  [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).substring(1);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).substring(1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).substring(1);	  String    input    =(String)this.cleanInput.toUpperCase(java.util.Locale.ENGLISH).trim();    	non-compiled	[CE]  illegal  start  of  type	442	None	replace
2093	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	256	None	replace
2094	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	256	None	replace
2095	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	256	None	replace
2096	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	256	None	replace
2097	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  return  null;  }	  if(input    ==    null)    {    if(input.length()    ==    0    ||    input.charAt(0)    ==    '/')    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	256	None	replace
2098	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  locale.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  locale.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  locale.toUpperCase(Locale.ENGLISH));	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	378	None	replace
2099	[BUG]  [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  cleanInput.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  cleanInput.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	378	None	replace
2100	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  locale.toUpperCase(Locale.ENGLISH),  null);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  locale.toUpperCase(Locale.ENGLISH),  null);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtExceptionHandler.handleMissingValue(java.util.Locale.ENGLISH,  locale.toUpperCase(Locale.ENGLISH),  null);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    input;    }    	non-compiled	[CE]  illegal  start  of  type	378	None	replace
2101	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2102	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2103	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  if(input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2104	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2105	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2106	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2107	[BUG]  [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableFor(input  ==  null)  {  input  =  input.toUpperCase(Locale.ENGLISH);  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(input    ==    null)    {    input    =    input.toUpperCase(Locale.ENGLISH);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
2108	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	396	None	replace
2109	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	396	None	replace
2110	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  -> "+input.toLowerCase(Locale.  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  -> "+input.toLowerCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  -> "+input.toLowerCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	396	None	replace
2111	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+Input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+Input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+Input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	396	None	replace
2112	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toLowerCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Locale.	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	396	None	replace
2113	[BUG]  [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Lo  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Lo  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  NullPointerException.println( "Can  not  instantiate  input  of  type   "+input.toUpperCase(Locale.ENGLISH)+ "  -> "+input.toUpperCase(Lo	  NullPointerException.println(   "Can    not    instantiate    input    of    type   "+input.toUpperCase(java.util.Locale.ENGLISH)+   "    ->   "+input.toUpperCase(java.util.Locale.    	non-compiled	[CE]  illegal  start  of  type	396	None	replace
2114	[BUG]  [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2115	[BUG]  [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2116	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2117	[BUG]  [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.trim().length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2118	[BUG]  [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2119	[BUG]  [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(null!=  input.trim())  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2120	[BUG]  [BUGGY]  if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(!cleanInput)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2121	[BUG]  [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input.length()  ==  0)  {  final  String  input  =  input.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2122	[BUG]  [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  null;  }	  final    String    input    =    input.toUpperCase(java.util.Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2123	[BUG]  [BUGGY]  input  =  super.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  input  =  super.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	input  =  super.toLowerCase(java.util.Locale.ENGLISH);	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2124	[BUG]  [BUGGY]  if(input!=  null)  {  input  =  super.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  input  =  super.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  input  =  super.toLowerCase();  }	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2125	[BUG]  [BUGGY]  if(input  ==  null)  {  input  =  super.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  input  =  super.toLowerCase();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  input  =  super.toLowerCase();  }	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2126	[BUG]  [BUGGY]  Input  input  =  super.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.toLowerCase(java.util.Locale.ENGLISH);	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2127	[BUG]  [BUGGY]  String  input  =  super.toLowerCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  super.toLowerCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  super.toLowerCase(java.util.Locale.ENGLISH);	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2128	[BUG]  [BUGGY]  String  input  =  super.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  super.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  super.toUpperCase(java.util.Locale.ENGLISH);	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2129	[BUG]  [BUGGY]  this.input  =  super.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  this.input  =  super.toLowerCase();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	this.input  =  super.toLowerCase();	  input    =    super.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2130	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()!=  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(cleanInput    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
2131	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2132	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  true);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  true);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2133	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  false);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  false);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  false);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2134	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  0);  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  0);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  0);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2135	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  null);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  null);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  null);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2136	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  1);  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  1);  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH,  1);	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2137	[BUG]  [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  1;  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  1;  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan  <  DoubleMetaphone>  cleanInput  =  getCurrentThanType().getNegativeThanType(Locale.ENGLISH)+  1;	  safeThan    <    DoubleMetaphone>    cleanInput    =    getCurrentThanType().getNegativeThanType(java.util.Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	461	None	replace
2138	[BUG]  [BUGGY]  return  input!=  null?  null  :  input.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  input!=  null?  null  :  input.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input!=  null?  null  :  input.toLowerCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	376	None	replace
2139	[BUG]  [BUGGY]  return  input!=  null?  null  :  input.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  input!=  null?  null  :  input.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input!=  null?  null  :  input.toLowerCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	376	None	replace
2140	[BUG]  [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH).toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	376	None	replace
2141	[BUG]  [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH)+ ", "  +  input.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH)+ ", "  +  input.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	return  input!=  null?  null  :  input.toUpperCase(Locale.ENGLISH)+ ", "  +  input.toUpperCase(Locale.ENGLISH);	  if(input!=    null)    {    input    =    input.toLowerCase(Locale.ENGLISH);    }    else    {    return    input.toUpperCase(Locale.ENGLISH);    }    	non-compiled	[CE]  illegal  start  of  type	376	None	replace
2142	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2143	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2144	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  locale.toUpperCase(Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.DEFAULT;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.DEFAULT;    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2145	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	435	None	replace
2146	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	435	None	replace
2147	[BUG]  [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  input.trim();  }  else  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	435	None	replace
2148	[BUG]  [BUGGY]  MutableTo(input)  {  return  input.trim();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  input.trim();  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  input.trim();  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	435	None	replace
2149	[BUG]  [BUGGY]  MutableTo(input)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	435	None	replace
2150	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	412	None	replace
2151	[BUG]  [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	MutableTo(input)  {  return  input.trim();  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	412	None	replace
2152	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  else  if(input.length()  ==  0)  {  return  null;  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	412	None	replace
2153	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.toUpperCase(java.util.Locale.ENGLISH);	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	412	None	replace
2154	[BUG]  [BUGGY]  mutableTo(input)  {  return  input.toLowerCase(java.util.Locale.ENGLISH);  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  mutableTo(input)  {  return  input.toLowerCase(java.util.Locale.ENGLISH);  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	mutableTo(input)  {  return  input.toLowerCase(java.util.Locale.ENGLISH);  }	  mutableTo(input)    {    input    =    input.trim();    }    else    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	412	None	replace
2155	[BUG]  [BUGGY]  String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.getKey();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.getKey();  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =(this.cleanInput  ==  null?  null  :  this.cleanInput.getKey();	  String    input    =(this.cleanInput    ==    null?    null    :    this.cleanInput.getValue();    	non-compiled	[CE]  illegal  start  of  type	422	None	replace
2156	[BUG]  [BUGGY]  if(input!=  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2157	[BUG]  [BUGGY]  if(input  ==  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2158	[BUG]  [BUGGY]  final  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	final  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2159	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2160	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH)+  1);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH)+  1);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH)+  1);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2161	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(this.cleanInput.toUpperCase(java.util.Locale.ENGLISH));	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2162	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  true);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  true);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  true);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2163	[BUG]  [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  false);  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  false);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH),  false);	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2164	[BUG]  [BUGGY]  if(input!=  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  Input  input  =  new  DoubleMetaphoneResult(input.toUpperCase(Locale.ENGLISH));  }  else  {  return  null;  }	  Input    input    =    new    DoubleMetaphoneResult(input.toUpperCase(java.util.Locale.ENGLISH));    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2165	[BUG]  [BUGGY]  safeThan(java.util.Locale.ENGLISH))  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan(java.util.Locale.ENGLISH))  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(java.util.Locale.ENGLISH))  {  input  =  input.trim();	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	336	None	replace
2166	[BUG]  [BUGGY]  safeThan(java.util.Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(java.util.Locale.ENGLISH);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(java.util.Locale.ENGLISH);	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	336	None	replace
2167	[BUG]  [BUGGY]  safeThan(input);  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(input);	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	336	None	replace
2168	[BUG]  [BUGGY]  safeThan(java.util.Locale.ENGLISH)  {  input  =  input.trim();  [CE]  illegal  start  of  type  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(java.util.Locale.ENGLISH)  {  input  =  input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	safeThan(java.util.Locale.ENGLISH)  {  input  =  input.trim();	  safeThan    <    NullPointerException.class)    {    input    =    input.trim();    }    else    if(input    ==    null)    {    cleanInput();    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	336	None	replace
2169	[BUG]  [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2170	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0  ||  input.trim().length()  ==  0)  {  return  null;  }	  if(input    ==    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2171	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null  ||  input.length()  ==  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	618	None	replace
2172	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.trim();  if(input  ==  null  ||  input.length()!=  0)  {  return  null;  }	  if(cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null    ||    input.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	618	None	replace
2173	[BUG]  [BUGGY]  Input  input  =  getInput();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  getInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  getInput();	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2174	[BUG]  [BUGGY]  Input  input  =  super.getInput();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.getInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.getInput();	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2175	[BUG]  [BUGGY]  Input  input  =  this.input.getValue();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  this.input.getValue();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  this.input.getValue();	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2176	[BUG]  [BUGGY]  Input  input  =  super.input.trim();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.input.trim();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.input.trim();	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2177	[BUG]  [BUGGY]  Input  input  =  DoubleMetaphoneResult.getInput(input);  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  DoubleMetaphoneResult.getInput(input);  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  DoubleMetaphoneResult.getInput(input);	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2178	[BUG]  [BUGGY]  Input  input  =  createInput(input.trim());  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  createInput(input.trim());  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  createInput(input.trim());	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2179	[BUG]  [BUGGY]  Input  input  =  super.trimInput();  [CE]  illegal  start  of  type  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Input  input  =  super.trimInput();  [BUGGY]      if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	Input  input  =  super.trimInput();	  Input    input    =    input.trim();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
2180	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
2181	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(java.util.Locale.ENGLISH);  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
2182	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.trim();  if(input.length()  ==  0)  {  return  DoubleMetaphoneResult.None.class;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
2183	[BUG]  [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput  ==  null)  {  String  input  =  input.trim();  if(input!=  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	566	None	replace
2184	[BUG]  [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(input  ==  null)  {  String  input  =  input.trim();  if(input  ==  null)  {  return  DoubleMetaphoneResult.UNKNOWN;  }	  if(this.cleanInput!=    null)    {    String    input    =    input.trim();    if(input    ==    null)    {    return    DoubleMetaphoneResult.UNKNOWN;    }    	non-compiled	[CE]  illegal  start  of  type	566	None	replace
2185	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
2186	[BUG]  [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(this.cleanInput!=  null)  {  String  input  =  this.cleanInput.toUpperCase(Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
2187	[BUG]  [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  if(input!=  null)  {  return  new  DoubleMetaphoneResult();  }	  if(this.cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
2188	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(java.util.Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	348	None	replace
2189	[BUG]  [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	if(cleanInput  ==  null)  {  String  input  =  input.toUpperCase(Locale.ENGLISH);  return  new  DoubleMetaphoneResult(input);  }	  if(cleanInput!=    null)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    return    new    DoubleMetaphoneResult(input);    }    	non-compiled	[CE]  illegal  start  of  type	348	None	replace
2190	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.ENGLISH));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  parameter: "  +  input.toUpperCase(java.util.Locale.ENGLISH));	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	285	None	replace
2191	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java  [CE]  illegal  start  of  type  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase(java	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	285	None	replace
2192	[BUG]  [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase  [CE]  illegal  start  of  type  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	aughtException.from(java.util.Locale.ENGLISH, "Unknown  type "  +  input.toUpperCase(java.util.Locale.ENGLISH)+ ": "  +  input.toUpperCase	  if(input!=    null)    {    String    input    =    input.trim();    if(input.length()    ==    0)    {    return    DoubleMetaphoneResult.None.class;    }    	non-compiled	[CE]  illegal  start  of  type	285	None	replace
2193	[BUG]  [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toString(Integer.toString(Integer.toString(input)));  [timeout]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toString(Integer.toString(Integer.toString(input)));  [BUGGY]      input  =  input.trim();  if  (input.length()  ==  0)  {  return  null;  }  return  input.toUpperCase(java.util.Locale.ENGLISH);  }  [CLASS]  DoubleMetaphone  DoubleMetaphoneResult  [METHOD]  cleanInput  [RETURN_TYPE]  String  String  input  	projects/Codec13/src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	0.3922322702763681	891	891	2	replace	NullPointerException.println( "Can  not  initialize  DoubleMetaphoneResult: "  +  Integer.toString(Integer.toString(Integer.toString(input)));	  if(null!=    input)    {    String    input    =    input.toUpperCase(Locale.ENGLISH);    if(input!=    null)    {    return    new    DoubleMetaphoneResult();    }    	non-compiled	[timeout]	321	None	replace
